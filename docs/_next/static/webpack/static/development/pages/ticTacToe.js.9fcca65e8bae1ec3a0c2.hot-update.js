webpackHotUpdate("static/development/pages/ticTacToe.js",{

/***/ "./src/components/TicTacToe/index.tsx":
/*!********************************************!*\
  !*** ./src/components/TicTacToe/index.tsx ***!
  \********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _emotion_css__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @emotion/css */ "./node_modules/@emotion/css/dist/css.browser.esm.js");
/* harmony import */ var _babel_runtime_corejs2_core_js_number_is_nan__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime-corejs2/core-js/number/is-nan */ "./node_modules/@babel/runtime-corejs2/core-js/number/is-nan.js");
/* harmony import */ var _babel_runtime_corejs2_core_js_number_is_nan__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_corejs2_core_js_number_is_nan__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _babel_runtime_corejs2_core_js_parse_int__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime-corejs2/core-js/parse-int */ "./node_modules/@babel/runtime-corejs2/core-js/parse-int.js");
/* harmony import */ var _babel_runtime_corejs2_core_js_parse_int__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_corejs2_core_js_parse_int__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _babel_runtime_corejs2_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime-corejs2/helpers/esm/slicedToArray */ "./node_modules/@babel/runtime-corejs2/helpers/esm/slicedToArray.js");
/* harmony import */ var _emotion_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @emotion/core */ "./node_modules/@emotion/core/dist/core.browser.esm.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! react-redux */ "./node_modules/react-redux/es/index.js");
/* harmony import */ var _Board__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./Board */ "./src/components/TicTacToe/Board.tsx");
/* harmony import */ var _utils_connectN_connectN__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../utils/connectN/connectN */ "./src/utils/connectN/connectN.ts");
/* harmony import */ var _utils_style_buttonReset__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../utils/style/buttonReset */ "./src/utils/style/buttonReset.ts");
/* harmony import */ var _utils_style_rem__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../utils/style/rem */ "./src/utils/style/rem.ts");
/* harmony import */ var _redux_actions_actionTypes__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../redux/actions/actionTypes */ "./src/redux/actions/actionTypes.ts");
/* harmony import */ var _utils_common_objectIsEmpty__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../utils/common/objectIsEmpty */ "./src/utils/common/objectIsEmpty.ts");




var _jsxFileName = "/Users/david.chen/Documents/projects/next9/src/components/TicTacToe/index.tsx";










var gameType = _utils_connectN_connectN__WEBPACK_IMPORTED_MODULE_8__["GameType"].ticTacToe;
var Settings;

(function (Settings) {
  Settings["CHANGE_RULES_SETTINGS"] = "CHANGE_RULES_SETTINGS";
  Settings["CHANGE_PLAYERS_SETTINGS"] = "CHANGE_PLAYERS_SETTINGS";
})(Settings || (Settings = {}));

var titleStyles =
/*#__PURE__*/
Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__["css"])(_utils_style_buttonReset__WEBPACK_IMPORTED_MODULE_9__["default"], ";display:block;text-align:center;margin:", Object(_utils_style_rem__WEBPACK_IMPORTED_MODULE_10__["default"])(40), " auto;font-size:", Object(_utils_style_rem__WEBPACK_IMPORTED_MODULE_10__["default"])(36), ";border-top:", Object(_utils_style_rem__WEBPACK_IMPORTED_MODULE_10__["default"])(1), " solid transparent;border-bottom:", Object(_utils_style_rem__WEBPACK_IMPORTED_MODULE_10__["default"])(1), " solid transparent;::after{content:'Tic-Tac-Toe';}label:titleStyles;" + ( false ? undefined : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9kYXZpZC5jaGVuL0RvY3VtZW50cy9wcm9qZWN0cy9uZXh0OS9zcmMvY29tcG9uZW50cy9UaWNUYWNUb2UvaW5kZXgudHN4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQWdDdUIiLCJmaWxlIjoiL1VzZXJzL2RhdmlkLmNoZW4vRG9jdW1lbnRzL3Byb2plY3RzL25leHQ5L3NyYy9jb21wb25lbnRzL1RpY1RhY1RvZS9pbmRleC50c3giLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QsIHsgRkMsIHVzZVN0YXRlLCB1c2VNZW1vLCB1c2VDYWxsYmFjaywgS2V5Ym9hcmRFdmVudCwgdXNlRWZmZWN0IH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgRGlzcGF0Y2ggfSBmcm9tICdyZWR1eCc7XG5pbXBvcnQgeyBjb25uZWN0IH0gZnJvbSAncmVhY3QtcmVkdXgnO1xuaW1wb3J0IHsgY3NzIH0gZnJvbSAnQGVtb3Rpb24vY29yZSc7XG5pbXBvcnQgQm9hcmQsIHsgcGxheWVyQ2hlY2tlclN0eWxlcyB9IGZyb20gJy4vQm9hcmQnO1xuaW1wb3J0IHsgQ29ubmVjdGVkUHJvcHMgfSBmcm9tICcuLi8uLi91dGlscy9yZWR1eC90eXBlcyc7XG5pbXBvcnQge1xuICBnZXRCYW5uZXIsXG4gIEdhbWVSZWNvcmQsXG4gIEdhbWVTZXR1cCxcbiAgUmVzZXRHYW1lUHJvcHMsXG4gIFBsYWNlT25lUGllY2VQcm9wcyxcbiAgR2FtZVR5cGUsXG59IGZyb20gJy4uLy4uL3V0aWxzL2Nvbm5lY3ROL2Nvbm5lY3ROJztcbmltcG9ydCB7IENoYW5nZVJ1bGVzUHJvcHMsIENoYW5nZVBsYXllcnNQcm9wcyB9IGZyb20gJy4uLy4uL3JlZHV4L3JlZHVjZXJzL3NldHVwJztcbmltcG9ydCBidXR0b25SZXNldCBmcm9tICcuLi8uLi91dGlscy9zdHlsZS9idXR0b25SZXNldCc7XG5pbXBvcnQgcmVtIGZyb20gJy4uLy4uL3V0aWxzL3N0eWxlL3JlbSc7XG5pbXBvcnQge1xuICBSRVNUQVJUX0dBTUUsXG4gIFBMQUNFX09ORV9QSUVDRSxcbiAgQ0hBTkdFX1JVTEVTLFxuICBDSEFOR0VfUExBWUVSUyxcbn0gZnJvbSAnLi4vLi4vcmVkdXgvYWN0aW9ucy9hY3Rpb25UeXBlcyc7XG5pbXBvcnQgb2JqZWN0SXNFbXB0eSBmcm9tICcuLi8uLi91dGlscy9jb21tb24vb2JqZWN0SXNFbXB0eSc7XG5cbmNvbnN0IGdhbWVUeXBlID0gR2FtZVR5cGUudGljVGFjVG9lO1xuXG5lbnVtIFNldHRpbmdzIHtcbiAgQ0hBTkdFX1JVTEVTX1NFVFRJTkdTID0gJ0NIQU5HRV9SVUxFU19TRVRUSU5HUycsXG4gIENIQU5HRV9QTEFZRVJTX1NFVFRJTkdTID0gJ0NIQU5HRV9QTEFZRVJTX1NFVFRJTkdTJyxcbn1cblxuY29uc3QgdGl0bGVTdHlsZXMgPSBjc3NgXG4gICR7YnV0dG9uUmVzZXR9O1xuICBkaXNwbGF5OiBibG9jaztcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBtYXJnaW46ICR7cmVtKDQwKX0gYXV0bztcbiAgZm9udC1zaXplOiAke3JlbSgzNil9O1xuICBib3JkZXItdG9wOiAke3JlbSgxKX0gc29saWQgdHJhbnNwYXJlbnQ7XG4gIGJvcmRlci1ib3R0b206ICR7cmVtKDEpfSBzb2xpZCB0cmFuc3BhcmVudDtcblxuICA6OmFmdGVyIHtcbiAgICBjb250ZW50OiAnVGljLVRhYy1Ub2UnO1xuICB9XG5gO1xuXG5jb25zdCBiYW5uZXJTdHlsZXNPbkJhbm5lciA9IChiYW5uZXI6IHN0cmluZykgPT4gY3NzYFxuICAke2J1dHRvblJlc2V0fTtcbiAgZGlzcGxheTogYmxvY2s7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgbWFyZ2luOiAke3JlbSgyMCl9IGF1dG87XG4gIGZvbnQtc2l6ZTogJHtyZW0oMjApfTtcbiAgY3Vyc29yOiBwb2ludGVyO1xuICBib3JkZXItdG9wOiAke3JlbSgxKX0gc29saWQgdHJhbnNwYXJlbnQ7XG4gIGJvcmRlci1ib3R0b206ICR7cmVtKDEpfSBzb2xpZCB0cmFuc3BhcmVudDtcbiAgaGVpZ2h0OiAxMDAlO1xuXG4gIDo6YWZ0ZXIge1xuICAgIGNvbnRlbnQ6IFwiJHtiYW5uZXJ9XCI7XG4gIH1cblxuICA6aG92ZXIge1xuICAgIGJvcmRlci10b3A6ICR7cmVtKDEpfSBzb2xpZCBibGFjaztcbiAgICBib3JkZXItYm90dG9tOiAke3JlbSgxKX0gc29saWQgYmxhY2s7XG4gIH1cblxuICA6aG92ZXIgOjphZnRlciB7XG4gICAgY29udGVudDogJ1Jlc3RhcnQgR2FtZSc7XG4gIH1cbmA7XG5cbmNvbnN0IGxlZ2VuZFN0eWxlcyA9IGNzc2BcbiAgJHtidXR0b25SZXNldH07XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZmxvdzogcm93IHdyYXA7XG4gIG1hcmdpbjogJHtyZW0oMjApfSBhdXRvO1xuICBmb250LXNpemU6ICR7cmVtKDIwKX07XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBjdXJzb3I6IHBvaW50ZXI7XG4gIGJvcmRlci10b3A6ICR7cmVtKDEpfSBzb2xpZCB0cmFuc3BhcmVudDtcbiAgYm9yZGVyLWJvdHRvbTogJHtyZW0oMSl9IHNvbGlkIHRyYW5zcGFyZW50O1xuICBoZWlnaHQ6IDEwMCU7XG5cbiAgOmhvdmVyIHtcbiAgICBib3JkZXItdG9wOiAke3JlbSgxKX0gc29saWQgYmxhY2s7XG4gICAgYm9yZGVyLWJvdHRvbTogJHtyZW0oMSl9IHNvbGlkIGJsYWNrO1xuICB9XG5gO1xuXG5jb25zdCBsZWdlbmRMYWJlbFN0eWxlcyA9IGNzc2BcbiAgbWFyZ2luOiAwICR7cmVtKDEwKX07XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcblxuICA6Zmlyc3Qtb2YtdHlwZSB7XG4gICAgbWFyZ2luLWxlZnQ6IDA7XG4gIH1cbiAgOmxhc3Qtb2YtdHlwZSB7XG4gICAgbWFyZ2luLXJpZ2h0OiAwO1xuICB9XG5gO1xuXG5jb25zdCBsZWdlbmRDb2xvclN0eWxlcyA9IGNzc2BcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICBib3JkZXI6ICR7cmVtKDEpfSBzb2xpZCBsaWdodGdyYXk7XG4gIGJvcmRlci1yYWRpdXM6IDUwJTtcbiAgbWFyZ2luLXJpZ2h0OiAke3JlbSgxMCl9O1xuICB3aWR0aDogJHtyZW0oMTUpfTtcbiAgaGVpZ2h0OiAke3JlbSgxNSl9O1xuYDtcblxuY29uc3QgaW5wdXRDb250YWluZXJTdHlsZXMgPSBjc3NgXG4gIGhlaWdodDogJHtyZW0oMjUpfTtcbmA7XG5cbmNvbnN0IGlucHV0U3R5bGVzID0gY3NzYFxuICBkaXNwbGF5OiBibG9jaztcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBmb250LXNpemU6ICR7cmVtKDE2KX07XG4gIG91dGxpbmU6IG5vbmU7XG4gIG1hcmdpbjogJHtyZW0oMjApfSBhdXRvO1xuICBtYXgtd2lkdGg6ICR7cmVtKDM1MCl9O1xuICBib3JkZXI6ICR7cmVtKDEpfSBzb2xpZCBncmF5O1xuICBoZWlnaHQ6IDEwMCU7XG4gIHdpZHRoOiAxMDAlO1xuYDtcblxuY29uc3QgbWFwU3RhdGVUb1Byb3BzID0gKHN0YXRlOiBhbnkpOiB7IHNldHVwOiBHYW1lU2V0dXA7IGdhbWU6IEdhbWVSZWNvcmQgfSA9PiAoe1xuICBzZXR1cDogc3RhdGUuc2V0dXAgfHwge30sXG4gIGdhbWU6IHN0YXRlLmdhbWUgfHwge30sXG59KTtcblxuY29uc3QgbWFwRGlzcGF0Y2hUb1Byb3BzID0gKGRpc3BhdGNoOiBEaXNwYXRjaCkgPT4gKHtcbiAgcmVzZXRHYW1lOiAocmVzZXRHYW1lUHJvcHM6IFJlc2V0R2FtZVByb3BzKSA9PlxuICAgIGRpc3BhdGNoKHsgdHlwZTogUkVTVEFSVF9HQU1FLCBwYXlsb2FkOiByZXNldEdhbWVQcm9wcyB9KSxcbiAgcGxhY2VPbmVQaWVjZTogKHBsYWNlT25lUGllY2VQcm9wczogUGxhY2VPbmVQaWVjZVByb3BzKSA9PlxuICAgIGRpc3BhdGNoKHsgdHlwZTogUExBQ0VfT05FX1BJRUNFLCBwYXlsb2FkOiBwbGFjZU9uZVBpZWNlUHJvcHMgfSksXG4gIGNoYW5nZVJ1bGVzOiAoY2hhbmdlUnVsZXNQcm9wczogQ2hhbmdlUnVsZXNQcm9wcykgPT5cbiAgICBkaXNwYXRjaCh7IHR5cGU6IENIQU5HRV9SVUxFUywgcGF5bG9hZDogY2hhbmdlUnVsZXNQcm9wcyB9KSxcbiAgY2hhbmdlUGxheWVyczogKGNoYW5nZVBsYXllcnNQcm9wczogQ2hhbmdlUGxheWVyc1Byb3BzKSA9PlxuICAgIGRpc3BhdGNoKHsgdHlwZTogQ0hBTkdFX1BMQVlFUlMsIHBheWxvYWQ6IGNoYW5nZVBsYXllcnNQcm9wcyB9KSxcbn0pO1xuXG50eXBlIFByb3BzID0gQ29ubmVjdGVkUHJvcHM8dHlwZW9mIG1hcFN0YXRlVG9Qcm9wcywgdHlwZW9mIG1hcERpc3BhdGNoVG9Qcm9wcz47XG5cbmNvbnN0IFRpY1RhY1RvZTogRkM8UHJvcHM+ID0gKHtcbiAgc2V0dXAsXG4gIGdhbWUsXG4gIHJlc2V0R2FtZSxcbiAgcGxhY2VPbmVQaWVjZSxcbiAgY2hhbmdlUnVsZXMsXG4gIGNoYW5nZVBsYXllcnMsXG59KSA9PiB7XG4gIGNvbnN0IFtzZXR0aW5nLCB1cGRhdGVTZXR0aW5nXSA9IHVzZVN0YXRlPFNldHRpbmdzIHwgbnVsbD4obnVsbCk7XG4gIGNvbnN0IFtpbnB1dFRleHQsIGNoYW5nZUlucHV0VGV4dF0gPSB1c2VTdGF0ZTxzdHJpbmc+KCcnKTtcblxuICBjb25zdCB7IGZ1bGxCb2FyZCwgYm9hcmRTZXR1cCwgbmV4dCwgbmFtZXMsIHJvd051bSwgY2hlY2tBZ2FpbnN0LCBmdWxsQ29sdW1uIH0gPSBzZXR1cDtcbiAgY29uc3QgeyB3aW4sIGdhbWVPdmVyLCB0dXJuLCBib2FyZHMgfSA9IGdhbWU7XG5cbiAgY29uc3QgY2xlYXJTZXR0aW5nID0gdXNlQ2FsbGJhY2soKCkgPT4ge1xuICAgIHVwZGF0ZVNldHRpbmcobnVsbCk7XG4gICAgY2hhbmdlSW5wdXRUZXh0KCcnKTtcbiAgfSwgW3VwZGF0ZVNldHRpbmcsIGNoYW5nZUlucHV0VGV4dF0pO1xuXG4gIGNvbnN0IGZvY3VzSW5wdXQgPSB1c2VDYWxsYmFjaygobm9kZTogSFRNTElucHV0RWxlbWVudCB8IG51bGwpID0+IHtcbiAgICBpZiAobm9kZSkgbm9kZS5mb2N1cygpO1xuICB9LCBbXSk7XG5cbiAgY29uc3QgcmVzdGFydCA9ICgpID0+IHJlc2V0R2FtZSh7IG5leHQsIGZ1bGxCb2FyZCwgZnVsbENvbHVtbiwgYm9hcmRTZXR1cCwgdHVybiB9KTtcbiAgY29uc3QgdG9zc09uZVBpZWNlID0gKHsgY29sSW5kLCByb3dJbmQgfTogeyBjb2xJbmQ6IG51bWJlcjsgcm93SW5kOiBudW1iZXIgfSkgPT5cbiAgICBwbGFjZU9uZVBpZWNlKHtcbiAgICAgIGdhbWVUeXBlLFxuICAgICAgY29sSW5kLFxuICAgICAgcm93SW5kLFxuICAgICAgY3VyUmVjb3JkOiBnYW1lLFxuICAgICAgZnVsbENvbHVtbixcbiAgICAgIGNoZWNrQWdhaW5zdCxcbiAgICAgIG5leHQsXG4gICAgfSk7XG5cbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICBpZiAoIW9iamVjdElzRW1wdHkoc2V0dXApKSB7XG4gICAgICByZXN0YXJ0KCk7XG4gICAgfVxuICB9LCBbc2V0dXBdKTtcblxuICBjb25zdCBoYW5kbGVDbGlja09uQ2VsbCA9IChjb2xJbmQ6IG51bWJlciwgcm93SW5kOiBudW1iZXIpID0+ICgpID0+IHtcbiAgICBpZiAoc2V0dGluZykgcmV0dXJuO1xuICAgIGlmIChnYW1lT3Zlcikge1xuICAgICAgcmVzdGFydCgpO1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICB0b3NzT25lUGllY2UoeyBjb2xJbmQsIHJvd0luZCB9KTtcbiAgfTtcblxuICBjb25zdCBoYW5kbGVDaGFuZ2VSdWxlcyA9IChlOiBLZXlib2FyZEV2ZW50PEhUTUxJbnB1dEVsZW1lbnQ+KSA9PiB7XG4gICAgaWYgKGUud2hpY2ggPT09IDEzKSB7XG4gICAgICB0cnkge1xuICAgICAgICBjb25zdCBpbnB1dEFycmF5ID0gaW5wdXRUZXh0LnNwbGl0KCcsJykubWFwKHRleHQgPT4ge1xuICAgICAgICAgIGNvbnN0IG51bSA9IHBhcnNlSW50KHRleHQudHJpbSgpLCAxMCk7XG4gICAgICAgICAgaWYgKE51bWJlci5pc05hTihudW0pKSB0aHJvdyBuZXcgRXJyb3IoKTtcbiAgICAgICAgICByZXR1cm4gbnVtO1xuICAgICAgICB9KTtcbiAgICAgICAgaWYgKGlucHV0QXJyYXkubGVuZ3RoICE9PSAzKSB0aHJvdyBuZXcgRXJyb3IoJ2ludmFsaWQgaW5wdXQnKTtcbiAgICAgICAgY2hhbmdlUnVsZXMoe1xuICAgICAgICAgIGdhbWVUeXBlLFxuICAgICAgICAgIHJvd051bTogaW5wdXRBcnJheVsxXSxcbiAgICAgICAgICBjb2xOdW06IGlucHV0QXJyYXlbMF0sXG4gICAgICAgICAgd2luUnVsZTogaW5wdXRBcnJheVsyXSxcbiAgICAgICAgfSk7XG4gICAgICAgIGNsZWFyU2V0dGluZygpO1xuICAgICAgfSBjYXRjaCAoZXJyKSB7XG4gICAgICAgIGNvbnNvbGUubG9nKGVycik7XG4gICAgICB9XG4gICAgfSBlbHNlIGlmIChlLmtleUNvZGUgPT09IDI3KSB7XG4gICAgICBjbGVhclNldHRpbmcoKTtcbiAgICB9XG4gIH07XG5cbiAgY29uc3QgaGFuZGxlQ2hhbmdlUGxheWVycyA9IChlOiBLZXlib2FyZEV2ZW50PEhUTUxJbnB1dEVsZW1lbnQ+KSA9PiB7XG4gICAgaWYgKGUud2hpY2ggPT09IDEzKSB7XG4gICAgICB0cnkge1xuICAgICAgICBjb25zdCBpbnB1dEFycmF5ID0gaW5wdXRUZXh0LnNwbGl0KCcsJykubWFwKHRleHQgPT4gdGV4dC50cmltKCkpO1xuICAgICAgICBjaGFuZ2VQbGF5ZXJzKHtcbiAgICAgICAgICBnYW1lVHlwZSxcbiAgICAgICAgICBuYW1lczogaW5wdXRBcnJheSxcbiAgICAgICAgfSk7XG4gICAgICAgIGNsZWFyU2V0dGluZygpO1xuICAgICAgfSBjYXRjaCAoZXJyKSB7XG4gICAgICAgIGNvbnNvbGUubG9nKGVycik7XG4gICAgICB9XG4gICAgfSBlbHNlIGlmIChlLmtleUNvZGUgPT09IDI3KSB7XG4gICAgICBjbGVhclNldHRpbmcoKTtcbiAgICB9XG4gIH07XG5cbiAgY29uc3QgaGFuZGxlQ2hhbmdlSW5wdXQgPSB1c2VDYWxsYmFjayhcbiAgICAoZTogUmVhY3QuQ2hhbmdlRXZlbnQ8SFRNTElucHV0RWxlbWVudD4pID0+IGNoYW5nZUlucHV0VGV4dChlLnRhcmdldC52YWx1ZSksXG4gICAgW2NoYW5nZUlucHV0VGV4dF1cbiAgKTtcblxuICBpZiAob2JqZWN0SXNFbXB0eShnYW1lKSB8fCBvYmplY3RJc0VtcHR5KHNldHVwKSkge1xuICAgIHJldHVybiBudWxsO1xuICB9XG5cbiAgcmV0dXJuIChcbiAgICA8ZGl2PlxuICAgICAgPGgxPlxuICAgICAgICA8YnV0dG9uXG4gICAgICAgICAgdHlwZT1cImJ1dHRvblwiXG4gICAgICAgICAgYXJpYS1sYWJlbD1cIlRpdGxlXCJcbiAgICAgICAgICBjc3M9e3RpdGxlU3R5bGVzfVxuICAgICAgICAgIG9uQ2xpY2s9eygpID0+IHtcbiAgICAgICAgICAgIGlmIChzZXR0aW5nICE9PSBTZXR0aW5ncy5DSEFOR0VfUlVMRVNfU0VUVElOR1MpIHtcbiAgICAgICAgICAgICAgdXBkYXRlU2V0dGluZyhTZXR0aW5ncy5DSEFOR0VfUlVMRVNfU0VUVElOR1MpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH19XG4gICAgICAgIC8+XG4gICAgICA8L2gxPlxuICAgICAgPGRpdiBjc3M9e2lucHV0Q29udGFpbmVyU3R5bGVzfT5cbiAgICAgICAgPGJ1dHRvblxuICAgICAgICAgIHR5cGU9XCJidXR0b25cIlxuICAgICAgICAgIGFyaWEtbGFiZWw9XCJiYW5uZXJcIlxuICAgICAgICAgIGNzcz17YmFubmVyU3R5bGVzT25CYW5uZXIoZ2V0QmFubmVyKHsgZ2FtZU92ZXIsIHR1cm4sIG5hbWVzLCB3aW4gfSkpfVxuICAgICAgICAgIG9uQ2xpY2s9e3Jlc3RhcnR9XG4gICAgICAgIC8+XG4gICAgICA8L2Rpdj5cbiAgICAgIDxkaXYgY3NzPXtpbnB1dENvbnRhaW5lclN0eWxlc30+XG4gICAgICAgIHtzZXR0aW5nID09PSBTZXR0aW5ncy5DSEFOR0VfUExBWUVSU19TRVRUSU5HUyA/IChcbiAgICAgICAgICA8aW5wdXRcbiAgICAgICAgICAgIHJlZj17Zm9jdXNJbnB1dH1cbiAgICAgICAgICAgIGFyaWEtbGFiZWw9XCJjaGFuZ2UtcGxheWVycy1pbnB1dFwiXG4gICAgICAgICAgICBjc3M9e2lucHV0U3R5bGVzfVxuICAgICAgICAgICAgdHlwZT1cInRleHRcIlxuICAgICAgICAgICAgcGxhY2Vob2xkZXI9XCJjaGFuZ2UgcGxheWVycycgbmFtZXMsIHdpdGggY29tbWEgaW4gYmV0d2VlblwiXG4gICAgICAgICAgICB2YWx1ZT17aW5wdXRUZXh0fVxuICAgICAgICAgICAgb25DaGFuZ2U9e2hhbmRsZUNoYW5nZUlucHV0fVxuICAgICAgICAgICAgb25LZXlEb3duPXtoYW5kbGVDaGFuZ2VQbGF5ZXJzfVxuICAgICAgICAgICAgb25CbHVyPXtjbGVhclNldHRpbmd9XG4gICAgICAgICAgLz5cbiAgICAgICAgKSA6IChcbiAgICAgICAgICA8YnV0dG9uXG4gICAgICAgICAgICB0eXBlPVwiYnV0dG9uXCJcbiAgICAgICAgICAgIGFyaWEtbGFiZWw9XCJsZWdlbmRcIlxuICAgICAgICAgICAgY3NzPXtsZWdlbmRTdHlsZXN9XG4gICAgICAgICAgICBvbkNsaWNrPXsoKSA9PiB1cGRhdGVTZXR0aW5nKFNldHRpbmdzLkNIQU5HRV9QTEFZRVJTX1NFVFRJTkdTKX1cbiAgICAgICAgICA+XG4gICAgICAgICAgICB7bmFtZXMubWFwKChuLCBpbmQpID0+IChcbiAgICAgICAgICAgICAgPGRpdiBjc3M9e2xlZ2VuZExhYmVsU3R5bGVzfSBrZXk9e2BsZWdlbmQtJHtufWB9PlxuICAgICAgICAgICAgICAgIDxkaXYgY3NzPXtbbGVnZW5kQ29sb3JTdHlsZXMsIHBsYXllckNoZWNrZXJTdHlsZXNbaW5kXV19IC8+XG4gICAgICAgICAgICAgICAge259XG4gICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgKSl9XG4gICAgICAgICAgPC9idXR0b24+XG4gICAgICAgICl9XG4gICAgICA8L2Rpdj5cbiAgICAgIDxCb2FyZCBib2FyZHM9e2JvYXJkc30gcm93TnVtPXtyb3dOdW19IG9uQ2xpY2tPbkNlbGw9e2hhbmRsZUNsaWNrT25DZWxsfSAvPlxuICAgIDwvZGl2PlxuICApO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgY29ubmVjdChcbiAgbWFwU3RhdGVUb1Byb3BzLFxuICBtYXBEaXNwYXRjaFRvUHJvcHNcbikoVGljVGFjVG9lKTtcbiJdfQ== */"));

var bannerStylesOnBanner = function bannerStylesOnBanner(banner) {
  return (
    /*#__PURE__*/
    Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__["css"])(_utils_style_buttonReset__WEBPACK_IMPORTED_MODULE_9__["default"], ";display:block;text-align:center;margin:", Object(_utils_style_rem__WEBPACK_IMPORTED_MODULE_10__["default"])(20), " auto;font-size:", Object(_utils_style_rem__WEBPACK_IMPORTED_MODULE_10__["default"])(20), ";cursor:pointer;border-top:", Object(_utils_style_rem__WEBPACK_IMPORTED_MODULE_10__["default"])(1), " solid transparent;border-bottom:", Object(_utils_style_rem__WEBPACK_IMPORTED_MODULE_10__["default"])(1), " solid transparent;height:100%;::after{content:\"", banner, "\";}:hover{border-top:", Object(_utils_style_rem__WEBPACK_IMPORTED_MODULE_10__["default"])(1), " solid black;border-bottom:", Object(_utils_style_rem__WEBPACK_IMPORTED_MODULE_10__["default"])(1), " solid black;}:hover::after{content:'Restart Game';}" + ( false ? undefined : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */"))
  );
};

var legendStyles =
/*#__PURE__*/
Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__["css"])(_utils_style_buttonReset__WEBPACK_IMPORTED_MODULE_9__["default"], ";display:flex;flex-flow:row wrap;margin:", Object(_utils_style_rem__WEBPACK_IMPORTED_MODULE_10__["default"])(20), " auto;font-size:", Object(_utils_style_rem__WEBPACK_IMPORTED_MODULE_10__["default"])(20), ";justify-content:center;cursor:pointer;border-top:", Object(_utils_style_rem__WEBPACK_IMPORTED_MODULE_10__["default"])(1), " solid transparent;border-bottom:", Object(_utils_style_rem__WEBPACK_IMPORTED_MODULE_10__["default"])(1), " solid transparent;height:100%;:hover{border-top:", Object(_utils_style_rem__WEBPACK_IMPORTED_MODULE_10__["default"])(1), " solid black;border-bottom:", Object(_utils_style_rem__WEBPACK_IMPORTED_MODULE_10__["default"])(1), " solid black;}label:legendStyles;" + ( false ? undefined : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */"));
var legendLabelStyles =
/*#__PURE__*/
Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__["css"])("margin:0 ", Object(_utils_style_rem__WEBPACK_IMPORTED_MODULE_10__["default"])(10), ";display:inline-block;:first-of-type{margin-left:0;}:last-of-type{margin-right:0;}label:legendLabelStyles;" + ( false ? undefined : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */"));
var legendColorStyles =
/*#__PURE__*/
Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__["css"])("display:inline-block;border:", Object(_utils_style_rem__WEBPACK_IMPORTED_MODULE_10__["default"])(1), " solid lightgray;border-radius:50%;margin-right:", Object(_utils_style_rem__WEBPACK_IMPORTED_MODULE_10__["default"])(10), ";width:", Object(_utils_style_rem__WEBPACK_IMPORTED_MODULE_10__["default"])(15), ";height:", Object(_utils_style_rem__WEBPACK_IMPORTED_MODULE_10__["default"])(15), ";label:legendColorStyles;" + ( false ? undefined : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */"));
var inputContainerStyles =
/*#__PURE__*/
Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__["css"])("height:", Object(_utils_style_rem__WEBPACK_IMPORTED_MODULE_10__["default"])(25), ";label:inputContainerStyles;" + ( false ? undefined : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */"));
var inputStyles =
/*#__PURE__*/
Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__["css"])("display:block;text-align:center;font-size:", Object(_utils_style_rem__WEBPACK_IMPORTED_MODULE_10__["default"])(16), ";outline:none;margin:", Object(_utils_style_rem__WEBPACK_IMPORTED_MODULE_10__["default"])(20), " auto;max-width:", Object(_utils_style_rem__WEBPACK_IMPORTED_MODULE_10__["default"])(350), ";border:", Object(_utils_style_rem__WEBPACK_IMPORTED_MODULE_10__["default"])(1), " solid gray;height:100%;width:100%;label:inputStyles;" + ( false ? undefined : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */"));

var mapStateToProps = function mapStateToProps(state) {
  return {
    setup: state.setup || {},
    game: state.game || {}
  };
};

var mapDispatchToProps = function mapDispatchToProps(dispatch) {
  return {
    resetGame: function resetGame(resetGameProps) {
      return dispatch({
        type: _redux_actions_actionTypes__WEBPACK_IMPORTED_MODULE_11__["RESTART_GAME"],
        payload: resetGameProps
      });
    },
    placeOnePiece: function placeOnePiece(placeOnePieceProps) {
      return dispatch({
        type: _redux_actions_actionTypes__WEBPACK_IMPORTED_MODULE_11__["PLACE_ONE_PIECE"],
        payload: placeOnePieceProps
      });
    },
    changeRules: function changeRules(changeRulesProps) {
      return dispatch({
        type: _redux_actions_actionTypes__WEBPACK_IMPORTED_MODULE_11__["CHANGE_RULES"],
        payload: changeRulesProps
      });
    },
    changePlayers: function changePlayers(changePlayersProps) {
      return dispatch({
        type: _redux_actions_actionTypes__WEBPACK_IMPORTED_MODULE_11__["CHANGE_PLAYERS"],
        payload: changePlayersProps
      });
    }
  };
};

var TicTacToe = function TicTacToe(_ref) {
  var setup = _ref.setup,
      game = _ref.game,
      resetGame = _ref.resetGame,
      placeOnePiece = _ref.placeOnePiece,
      changeRules = _ref.changeRules,
      changePlayers = _ref.changePlayers;

  var _useState = Object(react__WEBPACK_IMPORTED_MODULE_5__["useState"])(null),
      _useState2 = Object(_babel_runtime_corejs2_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_3__["default"])(_useState, 2),
      setting = _useState2[0],
      updateSetting = _useState2[1];

  var _useState3 = Object(react__WEBPACK_IMPORTED_MODULE_5__["useState"])(''),
      _useState4 = Object(_babel_runtime_corejs2_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_3__["default"])(_useState3, 2),
      inputText = _useState4[0],
      changeInputText = _useState4[1];

  var fullBoard = setup.fullBoard,
      boardSetup = setup.boardSetup,
      next = setup.next,
      names = setup.names,
      rowNum = setup.rowNum,
      checkAgainst = setup.checkAgainst,
      fullColumn = setup.fullColumn;
  var win = game.win,
      gameOver = game.gameOver,
      turn = game.turn,
      boards = game.boards;
  var clearSetting = Object(react__WEBPACK_IMPORTED_MODULE_5__["useCallback"])(function () {
    updateSetting(null);
    changeInputText('');
  }, [updateSetting, changeInputText]);
  var focusInput = Object(react__WEBPACK_IMPORTED_MODULE_5__["useCallback"])(function (node) {
    if (node) node.focus();
  }, []);

  var restart = function restart() {
    return resetGame({
      next: next,
      fullBoard: fullBoard,
      fullColumn: fullColumn,
      boardSetup: boardSetup,
      turn: turn
    });
  };

  var tossOnePiece = function tossOnePiece(_ref2) {
    var colInd = _ref2.colInd,
        rowInd = _ref2.rowInd;
    return placeOnePiece({
      gameType: gameType,
      colInd: colInd,
      rowInd: rowInd,
      curRecord: game,
      fullColumn: fullColumn,
      checkAgainst: checkAgainst,
      next: next
    });
  };

  Object(react__WEBPACK_IMPORTED_MODULE_5__["useEffect"])(function () {
    if (!Object(_utils_common_objectIsEmpty__WEBPACK_IMPORTED_MODULE_12__["default"])(setup)) {
      restart();
    }
  }, [setup]);

  var handleClickOnCell = function handleClickOnCell(colInd, rowInd) {
    return function () {
      if (setting) return;

      if (gameOver) {
        restart();
        return;
      }

      tossOnePiece({
        colInd: colInd,
        rowInd: rowInd
      });
    };
  };

  var handleChangeRules = function handleChangeRules(e) {
    if (e.which === 13) {
      try {
        var inputArray = inputText.split(',').map(function (text) {
          var num = _babel_runtime_corejs2_core_js_parse_int__WEBPACK_IMPORTED_MODULE_2___default()(text.trim(), 10);

          if (_babel_runtime_corejs2_core_js_number_is_nan__WEBPACK_IMPORTED_MODULE_1___default()(num)) throw new Error();
          return num;
        });
        if (inputArray.length !== 3) throw new Error('invalid input');
        changeRules({
          gameType: gameType,
          rowNum: inputArray[1],
          colNum: inputArray[0],
          winRule: inputArray[2]
        });
        clearSetting();
      } catch (err) {
        console.log(err);
      }
    } else if (e.keyCode === 27) {
      clearSetting();
    }
  };

  var handleChangePlayers = function handleChangePlayers(e) {
    if (e.which === 13) {
      try {
        var inputArray = inputText.split(',').map(function (text) {
          return text.trim();
        });
        changePlayers({
          gameType: gameType,
          names: inputArray
        });
        clearSetting();
      } catch (err) {
        console.log(err);
      }
    } else if (e.keyCode === 27) {
      clearSetting();
    }
  };

  var handleChangeInput = Object(react__WEBPACK_IMPORTED_MODULE_5__["useCallback"])(function (e) {
    return changeInputText(e.target.value);
  }, [changeInputText]);

  if (Object(_utils_common_objectIsEmpty__WEBPACK_IMPORTED_MODULE_12__["default"])(game) || Object(_utils_common_objectIsEmpty__WEBPACK_IMPORTED_MODULE_12__["default"])(setup)) {
    return null;
  }

  return Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__["jsx"])("div", {
    __source: {
      fileName: _jsxFileName,
      lineNumber: 246
    },
    __self: this
  }, Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__["jsx"])("h1", {
    __source: {
      fileName: _jsxFileName,
      lineNumber: 247
    },
    __self: this
  }, Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__["jsx"])("button", {
    type: "button",
    "aria-label": "Title",
    css: titleStyles,
    onClick: function onClick() {
      if (setting !== Settings.CHANGE_RULES_SETTINGS) {
        updateSetting(Settings.CHANGE_RULES_SETTINGS);
      }
    },
    __source: {
      fileName: _jsxFileName,
      lineNumber: 248
    },
    __self: this
  })), Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__["jsx"])("div", {
    css: inputContainerStyles,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 259
    },
    __self: this
  }, Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__["jsx"])("button", {
    type: "button",
    "aria-label": "banner",
    css: bannerStylesOnBanner(Object(_utils_connectN_connectN__WEBPACK_IMPORTED_MODULE_8__["getBanner"])({
      gameOver: gameOver,
      turn: turn,
      names: names,
      win: win
    })),
    onClick: restart,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 260
    },
    __self: this
  })), Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__["jsx"])("div", {
    css: inputContainerStyles,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 267
    },
    __self: this
  }, setting === Settings.CHANGE_PLAYERS_SETTINGS ? Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__["jsx"])("input", {
    ref: focusInput,
    "aria-label": "change-players-input",
    css: inputStyles,
    type: "text",
    placeholder: "change players' names, with comma in between",
    value: inputText,
    onChange: handleChangeInput,
    onKeyDown: handleChangePlayers,
    onBlur: clearSetting,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 269
    },
    __self: this
  }) : Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__["jsx"])("button", {
    type: "button",
    "aria-label": "legend",
    css: legendStyles,
    onClick: function onClick() {
      return updateSetting(Settings.CHANGE_PLAYERS_SETTINGS);
    },
    __source: {
      fileName: _jsxFileName,
      lineNumber: 281
    },
    __self: this
  }, names.map(function (n, ind) {
    return Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__["jsx"])("div", {
      css: legendLabelStyles,
      key: "legend-".concat(n),
      __source: {
        fileName: _jsxFileName,
        lineNumber: 288
      },
      __self: this
    }, Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__["jsx"])("div", {
      css:
      /*#__PURE__*/
      Object(_emotion_css__WEBPACK_IMPORTED_MODULE_0__["default"])([legendColorStyles, _Board__WEBPACK_IMPORTED_MODULE_7__["playerCheckerStyles"][ind]], "label:TicTacToe;" + ( false ? undefined : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */")),
      __source: {
        fileName: _jsxFileName,
        lineNumber: 289
      },
      __self: this
    }), n);
  }))), Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__["jsx"])(_Board__WEBPACK_IMPORTED_MODULE_7__["default"], {
    boards: boards,
    rowNum: rowNum,
    onClickOnCell: handleClickOnCell,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 296
    },
    __self: this
  }));
};

/* harmony default export */ __webpack_exports__["default"] = (Object(react_redux__WEBPACK_IMPORTED_MODULE_6__["connect"])(mapStateToProps, mapDispatchToProps)(TicTacToe));

/***/ })

})
//# sourceMappingURL=ticTacToe.js.9fcca65e8bae1ec3a0c2.hot-update.js.map