webpackHotUpdate("static/development/pages/tic-tac-toe.js",{

/***/ "./src/components/ConnectN/Board.tsx":
/*!*******************************************!*\
  !*** ./src/components/ConnectN/Board.tsx ***!
  \*******************************************/
/*! exports provided: playerCheckerStylesOnGameType, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "playerCheckerStylesOnGameType", function() { return playerCheckerStylesOnGameType; });
/* harmony import */ var _babel_runtime_corejs2_core_js_array_from__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime-corejs2/core-js/array/from */ "./node_modules/@babel/runtime-corejs2/core-js/array/from.js");
/* harmony import */ var _babel_runtime_corejs2_core_js_array_from__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_corejs2_core_js_array_from__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _emotion_css__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @emotion/css */ "./node_modules/@emotion/css/dist/css.browser.esm.js");
/* harmony import */ var _emotion_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @emotion/core */ "./node_modules/@emotion/core/dist/core.browser.esm.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _utils_style_rem__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../utils/style/rem */ "./src/utils/style/rem.ts");
/* harmony import */ var _utils_connectN_connectN__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../utils/connectN/connectN */ "./src/utils/connectN/connectN.ts");


var _jsxFileName = "/Users/david.chen/Documents/projects/next9/src/components/ConnectN/Board.tsx";





var boardStyles =
/*#__PURE__*/
Object(_emotion_core__WEBPACK_IMPORTED_MODULE_2__["css"])("margin:", Object(_utils_style_rem__WEBPACK_IMPORTED_MODULE_4__["default"])(20), " auto;box-sizing:border-box;display:grid;grid-auto-rows:auto;-webkit-tap-highlight-color:rgba(0,0,0,0);-webkit-tap-highlight-color:transparent;label:boardStyles;" + ( false ? undefined : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9kYXZpZC5jaGVuL0RvY3VtZW50cy9wcm9qZWN0cy9uZXh0OS9zcmMvY29tcG9uZW50cy9Db25uZWN0Ti9Cb2FyZC50c3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBS3VCIiwiZmlsZSI6Ii9Vc2Vycy9kYXZpZC5jaGVuL0RvY3VtZW50cy9wcm9qZWN0cy9uZXh0OS9zcmMvY29tcG9uZW50cy9Db25uZWN0Ti9Cb2FyZC50c3giLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QsIHsgRkMsIHVzZUNhbGxiYWNrIH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgY3NzLCBTZXJpYWxpemVkU3R5bGVzIH0gZnJvbSAnQGVtb3Rpb24vY29yZSc7XG5pbXBvcnQgcmVtIGZyb20gJy4uLy4uL3V0aWxzL3N0eWxlL3JlbSc7XG5pbXBvcnQgeyBHYW1lVHlwZSB9IGZyb20gJy4uLy4uL3V0aWxzL2Nvbm5lY3ROL2Nvbm5lY3ROJztcblxuY29uc3QgYm9hcmRTdHlsZXMgPSBjc3NgXG4gIG1hcmdpbjogJHtyZW0oMjApfSBhdXRvO1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICBkaXNwbGF5OiBncmlkO1xuICBncmlkLWF1dG8tcm93czogYXV0bztcblxuICAtd2Via2l0LXRhcC1oaWdobGlnaHQtY29sb3I6IHJnYmEoMCwgMCwgMCwgMCk7XG4gIC13ZWJraXQtdGFwLWhpZ2hsaWdodC1jb2xvcjogdHJhbnNwYXJlbnQ7XG5gO1xuXG5jb25zdCBib2FyZFN0eWxlc09uQ29sTnVtID0gKGNvbE51bTogbnVtYmVyKSA9PiBjc3NgXG4gIG1heC13aWR0aDogJHtyZW0oODAgKiBjb2xOdW0pfTtcbiAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiByZXBlYXQoJHtjb2xOdW19LCAxZnIpO1xuYDtcblxuY29uc3QgYm9hcmRTdHlsZXNPbkdhbWVUeXBlOiB7IFtrZXkgaW4gc3RyaW5nXTogU2VyaWFsaXplZFN0eWxlcyB9ID0ge1xuICBjb25uZWN0TjogY3NzYFxuICAgIGdyaWQtZ2FwOiAke3JlbSgxKX07XG4gICAgYmFja2dyb3VuZC1jb2xvcjogbGlnaHRncmF5O1xuICAgIGJvcmRlcjogJHtyZW0oMil9IHNvbGlkIGJsYWNrO1xuICBgLFxuICB0aWNUYWNUb2U6IGNzc2BcbiAgICBncmlkLWdhcDogJHtyZW0oMyl9O1xuICAgIGJhY2tncm91bmQtY29sb3I6IGJsYWNrO1xuICAgIGJvcmRlcjogJHtyZW0oMyl9IHNvbGlkIHdoaXRlO1xuICBgLFxufTtcblxuY29uc3QgY2VsbFN0eWxlcyA9IGNzc2BcbiAgY3Vyc29yOiBwb2ludGVyO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcbmA7XG5cbmNvbnN0IGNlbGxTdHlsZXNPbkdhbWVUeXBlOiB7IFtrZXkgaW4gc3RyaW5nXTogU2VyaWFsaXplZFN0eWxlcyB9ID0ge1xuICB0aWNUYWNUb2U6IGNzc2BcbiAgICB3aWR0aDogMTAwJTtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgJjo6YmVmb3JlIHtcbiAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgY29udGVudDogJyc7XG4gICAgICB3aWR0aDogMTAwJTtcbiAgICAgIHBhZGRpbmctYm90dG9tOiAxMDAlO1xuICAgIH1cbiAgYCxcbn07XG5cbmNvbnN0IGNoZWNrZXJTdHlsZXNPbkdhbWVUeXBlOiB7IFtrZXkgaW4gc3RyaW5nXTogU2VyaWFsaXplZFN0eWxlcyB9ID0ge1xuICBjb25uZWN0TjogY3NzYFxuICAgIHdpZHRoOiBhdXRvO1xuICAgIHBhZGRpbmctYm90dG9tOiBjYWxjKDEwMCUgLSAke3JlbSgyICogNyl9KTtcbiAgICBtYXJnaW46ICR7cmVtKDUpfTtcbiAgICBib3JkZXItcmFkaXVzOiA1MCU7XG4gICAgYm9yZGVyOiAke3JlbSgyKX0gc29saWQgZ3JheTtcblxuICAgIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNDAwcHgpIHtcbiAgICAgIHBhZGRpbmctYm90dG9tOiBjYWxjKDEwMCUgLSAke3JlbSgyICogMyl9KTtcbiAgICAgIG1hcmdpbjogJHtyZW0oMil9O1xuICAgICAgYm9yZGVyOiAke3JlbSgxKX0gc29saWQgZ3JheTtcbiAgICB9XG4gIGAsXG4gIHRpY1RhY1RvZTogY3NzYFxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICBsZWZ0OiAwO1xuICAgIHJpZ2h0OiAwO1xuICAgIHRvcDogMDtcbiAgICBib3R0b206IDA7XG4gICAgZGlzcGxheTogYmxvY2s7XG5cbiAgICAmIHN2ZyB7XG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICBsZWZ0OiA1MCU7XG4gICAgICB0b3A6IDUwJTtcbiAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC01MCUpO1xuICAgICAgd2lkdGg6IDgwJTtcbiAgICAgIGhlaWdodDogODAlO1xuICAgIH1cblxuICAgIC8vICYgdGV4dCB7XG4gICAgLy8gICBkaXNwbGF5OiB0YWJsZS1jZWxsO1xuICAgIC8vICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIC8vICAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcbiAgICAvLyB9XG4gIGAsXG59O1xuXG5leHBvcnQgY29uc3QgcGxheWVyQ2hlY2tlclN0eWxlc09uR2FtZVR5cGU6IHsgW2tleSBpbiBzdHJpbmddOiBTZXJpYWxpemVkU3R5bGVzW10gfSA9IHtcbiAgY29ubmVjdE46IFtcbiAgICBjc3NgXG4gICAgICBib3JkZXItY29sb3I6IGdyYXk7XG4gICAgICBiYWNrZ3JvdW5kOiB5ZWxsb3c7XG4gICAgYCxcbiAgICBjc3NgXG4gICAgICBib3JkZXItY29sb3I6IHdoaXRlO1xuICAgICAgYmFja2dyb3VuZDogcmVkO1xuXG4gICAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDQwMHB4KSB7XG4gICAgICAgIGJvcmRlci1jb2xvcjogd2hpdGU7XG4gICAgICB9XG4gICAgYCxcbiAgICBjc3NgXG4gICAgICBib3JkZXItY29sb3I6IGdyYXk7XG4gICAgICBiYWNrZ3JvdW5kOiBza3libHVlO1xuICAgIGAsXG4gICAgY3NzYFxuICAgICAgYm9yZGVyLWNvbG9yOiBncmF5O1xuICAgICAgYmFja2dyb3VuZDogcGluaztcbiAgICBgLFxuICBdLFxuICB0aWNUYWNUb2U6IFtcbiAgICBjc3NgXG4gICAgICAmOjphZnRlciB7XG4gICAgICAgIGNvbnRlbnQ6ICdPOic7XG4gICAgICB9XG4gICAgYCxcbiAgICBjc3NgXG4gICAgICAmOjphZnRlciB7XG4gICAgICAgIGNvbnRlbnQ6ICdYOic7XG4gICAgICB9XG4gICAgYCxcbiAgXSxcbn07XG5cbmNvbnN0IFRpY1RhY1RvZVBpZWNlOiBGQzx7IHR5cGU/OiAnTycgfCAnWCcgfT4gPSAoeyB0eXBlIH0pID0+IChcbiAgPHN2ZyB2aWV3Qm94PXt0eXBlID09PSAnTycgPyAnMCAwIDExIDEyJyA6ICcwIDAgMTAgMTInfT5cbiAgICA8dGV4dFxuICAgICAgeD17dHlwZSA9PT0gJ08nID8gJzAuNTEnIDogJzAuNSd9XG4gICAgICB5PXt0eXBlID09PSAnTycgPyAnMTAuNScgOiAnMTAuNSd9XG4gICAgICB0ZXh0QW5jaG9yPVwiY2VudGVyXCJcbiAgICAgIGZvbnRXZWlnaHQ9XCIzMDBcIlxuICAgID5cbiAgICAgIHt0eXBlfVxuICAgIDwvdGV4dD5cbiAgPC9zdmc+XG4pO1xuXG5pbnRlcmZhY2UgUHJvcHMge1xuICBnYW1lVHlwZT86IEdhbWVUeXBlO1xuICByb3dOdW06IG51bWJlcjtcbiAgYm9hcmRzOiBudW1iZXJbXVtdO1xuICBvbkNsaWNrT25DZWxsPyhjb2xJbmQ6IG51bWJlciwgcm93SW5kOiBudW1iZXIpOiAoZTogUmVhY3QuTW91c2VFdmVudCkgPT4gdm9pZDtcbn1cblxuY29uc3QgQm9hcmQ6IEZDPFByb3BzPiA9ICh7IGdhbWVUeXBlID0gR2FtZVR5cGUuY29ubmVjdE4sIHJvd051bSwgYm9hcmRzLCBvbkNsaWNrT25DZWxsIH0pID0+IHtcbiAgY29uc3QgY29sTnVtID0gYm9hcmRzWzBdLmxlbmd0aDtcblxuICBjb25zdCBjZWxsR3JpZFBvcyA9IHVzZUNhbGxiYWNrKFxuICAgIChyb3dJbmQ6IG51bWJlciwgY29sSW5kOiBudW1iZXIpID0+IGNzc2BcbiAgICAgIGdyaWQtcm93OiAke3Jvd051bSAtIHJvd0luZH0gLyBzcGFuIDE7XG4gICAgICBncmlkLWNvbHVtbjogJHtjb2xJbmQgKyAxfSAvIHNwYW4gMTtcbiAgICBgLFxuICAgIFtyb3dOdW1dXG4gICk7XG5cbiAgcmV0dXJuIChcbiAgICA8ZGl2IGNzcz17W2JvYXJkU3R5bGVzLCBib2FyZFN0eWxlc09uQ29sTnVtKGNvbE51bSksIGJvYXJkU3R5bGVzT25HYW1lVHlwZVtnYW1lVHlwZV1dfT5cbiAgICAgIHtib2FyZHNbMF0ubWFwKChfYywgY29sSW5kKSA9PlxuICAgICAgICBBcnJheS5mcm9tKEFycmF5KHJvd051bSksIChfciwgcm93SW5kKSA9PiAoXG4gICAgICAgICAgPGJ1dHRvblxuICAgICAgICAgICAgdHlwZT1cImJ1dHRvblwiXG4gICAgICAgICAgICBhcmlhLWxhYmVsPVwiYm9hcmRcIlxuICAgICAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIHJlYWN0L25vLWFycmF5LWluZGV4LWtleVxuICAgICAgICAgICAga2V5PXtgY2VsbC0ke2NvbEluZH0tJHtyb3dJbmR9YH1cbiAgICAgICAgICAgIGNzcz17W2NlbGxTdHlsZXMsIGNlbGxTdHlsZXNPbkdhbWVUeXBlW2dhbWVUeXBlXSwgY2VsbEdyaWRQb3Mocm93SW5kLCBjb2xJbmQpXX1cbiAgICAgICAgICAgIG9uQ2xpY2s9e29uQ2xpY2tPbkNlbGwgJiYgb25DbGlja09uQ2VsbChjb2xJbmQsIHJvd0luZCl9XG4gICAgICAgICAgPlxuICAgICAgICAgICAgPGRpdlxuICAgICAgICAgICAgICBjc3M9e1tcbiAgICAgICAgICAgICAgICBjaGVja2VyU3R5bGVzT25HYW1lVHlwZVtnYW1lVHlwZV0sXG4gICAgICAgICAgICAgICAgZ2FtZVR5cGUgPT09IEdhbWVUeXBlLmNvbm5lY3ROICYmXG4gICAgICAgICAgICAgICAgICBib2FyZHMucmVkdWNlKFxuICAgICAgICAgICAgICAgICAgICAocmVzdWx0LCBfbiwgaW5kKSA9PlxuICAgICAgICAgICAgICAgICAgICAgIChib2FyZHNbaW5kXVtjb2xJbmRdICYgKDEgPDwgcm93SW5kKSAmJlxuICAgICAgICAgICAgICAgICAgICAgICAgcGxheWVyQ2hlY2tlclN0eWxlc09uR2FtZVR5cGVbZ2FtZVR5cGVdW2luZF0pIHx8XG4gICAgICAgICAgICAgICAgICAgICAgcmVzdWx0LFxuICAgICAgICAgICAgICAgICAgICBjc3NgYFxuICAgICAgICAgICAgICAgICAgKSxcbiAgICAgICAgICAgICAgXX1cbiAgICAgICAgICAgID5cbiAgICAgICAgICAgICAge2dhbWVUeXBlID09PSBHYW1lVHlwZS50aWNUYWNUb2UgJiZcbiAgICAgICAgICAgICAgICBib2FyZHMucmVkdWNlKFxuICAgICAgICAgICAgICAgICAgKHJlc3VsdCwgX24sIGluZCkgPT5cbiAgICAgICAgICAgICAgICAgICAgKGJvYXJkc1tpbmRdW2NvbEluZF0gJiAoMSA8PCByb3dJbmQpICYmXG4gICAgICAgICAgICAgICAgICAgICAgWzxUaWNUYWNUb2VQaWVjZSB0eXBlPVwiT1wiIC8+LCA8VGljVGFjVG9lUGllY2UgdHlwZT1cIlhcIiAvPl1baW5kXSkgfHxcbiAgICAgICAgICAgICAgICAgICAgcmVzdWx0LFxuICAgICAgICAgICAgICAgICAgPFRpY1RhY1RvZVBpZWNlIC8+XG4gICAgICAgICAgICAgICAgKX1cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgIDwvYnV0dG9uPlxuICAgICAgICApKVxuICAgICAgKX1cbiAgICA8L2Rpdj5cbiAgKTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IEJvYXJkO1xuIl19 */"));

var boardStylesOnColNum = function boardStylesOnColNum(colNum) {
  return (
    /*#__PURE__*/
    Object(_emotion_core__WEBPACK_IMPORTED_MODULE_2__["css"])("max-width:", Object(_utils_style_rem__WEBPACK_IMPORTED_MODULE_4__["default"])(80 * colNum), ";grid-template-columns:repeat(", colNum, ",1fr);" + ( false ? undefined : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9kYXZpZC5jaGVuL0RvY3VtZW50cy9wcm9qZWN0cy9uZXh0OS9zcmMvY29tcG9uZW50cy9Db25uZWN0Ti9Cb2FyZC50c3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBZW1EIiwiZmlsZSI6Ii9Vc2Vycy9kYXZpZC5jaGVuL0RvY3VtZW50cy9wcm9qZWN0cy9uZXh0OS9zcmMvY29tcG9uZW50cy9Db25uZWN0Ti9Cb2FyZC50c3giLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QsIHsgRkMsIHVzZUNhbGxiYWNrIH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgY3NzLCBTZXJpYWxpemVkU3R5bGVzIH0gZnJvbSAnQGVtb3Rpb24vY29yZSc7XG5pbXBvcnQgcmVtIGZyb20gJy4uLy4uL3V0aWxzL3N0eWxlL3JlbSc7XG5pbXBvcnQgeyBHYW1lVHlwZSB9IGZyb20gJy4uLy4uL3V0aWxzL2Nvbm5lY3ROL2Nvbm5lY3ROJztcblxuY29uc3QgYm9hcmRTdHlsZXMgPSBjc3NgXG4gIG1hcmdpbjogJHtyZW0oMjApfSBhdXRvO1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICBkaXNwbGF5OiBncmlkO1xuICBncmlkLWF1dG8tcm93czogYXV0bztcblxuICAtd2Via2l0LXRhcC1oaWdobGlnaHQtY29sb3I6IHJnYmEoMCwgMCwgMCwgMCk7XG4gIC13ZWJraXQtdGFwLWhpZ2hsaWdodC1jb2xvcjogdHJhbnNwYXJlbnQ7XG5gO1xuXG5jb25zdCBib2FyZFN0eWxlc09uQ29sTnVtID0gKGNvbE51bTogbnVtYmVyKSA9PiBjc3NgXG4gIG1heC13aWR0aDogJHtyZW0oODAgKiBjb2xOdW0pfTtcbiAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiByZXBlYXQoJHtjb2xOdW19LCAxZnIpO1xuYDtcblxuY29uc3QgYm9hcmRTdHlsZXNPbkdhbWVUeXBlOiB7IFtrZXkgaW4gc3RyaW5nXTogU2VyaWFsaXplZFN0eWxlcyB9ID0ge1xuICBjb25uZWN0TjogY3NzYFxuICAgIGdyaWQtZ2FwOiAke3JlbSgxKX07XG4gICAgYmFja2dyb3VuZC1jb2xvcjogbGlnaHRncmF5O1xuICAgIGJvcmRlcjogJHtyZW0oMil9IHNvbGlkIGJsYWNrO1xuICBgLFxuICB0aWNUYWNUb2U6IGNzc2BcbiAgICBncmlkLWdhcDogJHtyZW0oMyl9O1xuICAgIGJhY2tncm91bmQtY29sb3I6IGJsYWNrO1xuICAgIGJvcmRlcjogJHtyZW0oMyl9IHNvbGlkIHdoaXRlO1xuICBgLFxufTtcblxuY29uc3QgY2VsbFN0eWxlcyA9IGNzc2BcbiAgY3Vyc29yOiBwb2ludGVyO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcbmA7XG5cbmNvbnN0IGNlbGxTdHlsZXNPbkdhbWVUeXBlOiB7IFtrZXkgaW4gc3RyaW5nXTogU2VyaWFsaXplZFN0eWxlcyB9ID0ge1xuICB0aWNUYWNUb2U6IGNzc2BcbiAgICB3aWR0aDogMTAwJTtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgJjo6YmVmb3JlIHtcbiAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgY29udGVudDogJyc7XG4gICAgICB3aWR0aDogMTAwJTtcbiAgICAgIHBhZGRpbmctYm90dG9tOiAxMDAlO1xuICAgIH1cbiAgYCxcbn07XG5cbmNvbnN0IGNoZWNrZXJTdHlsZXNPbkdhbWVUeXBlOiB7IFtrZXkgaW4gc3RyaW5nXTogU2VyaWFsaXplZFN0eWxlcyB9ID0ge1xuICBjb25uZWN0TjogY3NzYFxuICAgIHdpZHRoOiBhdXRvO1xuICAgIHBhZGRpbmctYm90dG9tOiBjYWxjKDEwMCUgLSAke3JlbSgyICogNyl9KTtcbiAgICBtYXJnaW46ICR7cmVtKDUpfTtcbiAgICBib3JkZXItcmFkaXVzOiA1MCU7XG4gICAgYm9yZGVyOiAke3JlbSgyKX0gc29saWQgZ3JheTtcblxuICAgIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNDAwcHgpIHtcbiAgICAgIHBhZGRpbmctYm90dG9tOiBjYWxjKDEwMCUgLSAke3JlbSgyICogMyl9KTtcbiAgICAgIG1hcmdpbjogJHtyZW0oMil9O1xuICAgICAgYm9yZGVyOiAke3JlbSgxKX0gc29saWQgZ3JheTtcbiAgICB9XG4gIGAsXG4gIHRpY1RhY1RvZTogY3NzYFxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICBsZWZ0OiAwO1xuICAgIHJpZ2h0OiAwO1xuICAgIHRvcDogMDtcbiAgICBib3R0b206IDA7XG4gICAgZGlzcGxheTogYmxvY2s7XG5cbiAgICAmIHN2ZyB7XG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICBsZWZ0OiA1MCU7XG4gICAgICB0b3A6IDUwJTtcbiAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC01MCUpO1xuICAgICAgd2lkdGg6IDgwJTtcbiAgICAgIGhlaWdodDogODAlO1xuICAgIH1cblxuICAgIC8vICYgdGV4dCB7XG4gICAgLy8gICBkaXNwbGF5OiB0YWJsZS1jZWxsO1xuICAgIC8vICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIC8vICAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcbiAgICAvLyB9XG4gIGAsXG59O1xuXG5leHBvcnQgY29uc3QgcGxheWVyQ2hlY2tlclN0eWxlc09uR2FtZVR5cGU6IHsgW2tleSBpbiBzdHJpbmddOiBTZXJpYWxpemVkU3R5bGVzW10gfSA9IHtcbiAgY29ubmVjdE46IFtcbiAgICBjc3NgXG4gICAgICBib3JkZXItY29sb3I6IGdyYXk7XG4gICAgICBiYWNrZ3JvdW5kOiB5ZWxsb3c7XG4gICAgYCxcbiAgICBjc3NgXG4gICAgICBib3JkZXItY29sb3I6IHdoaXRlO1xuICAgICAgYmFja2dyb3VuZDogcmVkO1xuXG4gICAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDQwMHB4KSB7XG4gICAgICAgIGJvcmRlci1jb2xvcjogd2hpdGU7XG4gICAgICB9XG4gICAgYCxcbiAgICBjc3NgXG4gICAgICBib3JkZXItY29sb3I6IGdyYXk7XG4gICAgICBiYWNrZ3JvdW5kOiBza3libHVlO1xuICAgIGAsXG4gICAgY3NzYFxuICAgICAgYm9yZGVyLWNvbG9yOiBncmF5O1xuICAgICAgYmFja2dyb3VuZDogcGluaztcbiAgICBgLFxuICBdLFxuICB0aWNUYWNUb2U6IFtcbiAgICBjc3NgXG4gICAgICAmOjphZnRlciB7XG4gICAgICAgIGNvbnRlbnQ6ICdPOic7XG4gICAgICB9XG4gICAgYCxcbiAgICBjc3NgXG4gICAgICAmOjphZnRlciB7XG4gICAgICAgIGNvbnRlbnQ6ICdYOic7XG4gICAgICB9XG4gICAgYCxcbiAgXSxcbn07XG5cbmNvbnN0IFRpY1RhY1RvZVBpZWNlOiBGQzx7IHR5cGU/OiAnTycgfCAnWCcgfT4gPSAoeyB0eXBlIH0pID0+IChcbiAgPHN2ZyB2aWV3Qm94PXt0eXBlID09PSAnTycgPyAnMCAwIDExIDEyJyA6ICcwIDAgMTAgMTInfT5cbiAgICA8dGV4dFxuICAgICAgeD17dHlwZSA9PT0gJ08nID8gJzAuNTEnIDogJzAuNSd9XG4gICAgICB5PXt0eXBlID09PSAnTycgPyAnMTAuNScgOiAnMTAuNSd9XG4gICAgICB0ZXh0QW5jaG9yPVwiY2VudGVyXCJcbiAgICAgIGZvbnRXZWlnaHQ9XCIzMDBcIlxuICAgID5cbiAgICAgIHt0eXBlfVxuICAgIDwvdGV4dD5cbiAgPC9zdmc+XG4pO1xuXG5pbnRlcmZhY2UgUHJvcHMge1xuICBnYW1lVHlwZT86IEdhbWVUeXBlO1xuICByb3dOdW06IG51bWJlcjtcbiAgYm9hcmRzOiBudW1iZXJbXVtdO1xuICBvbkNsaWNrT25DZWxsPyhjb2xJbmQ6IG51bWJlciwgcm93SW5kOiBudW1iZXIpOiAoZTogUmVhY3QuTW91c2VFdmVudCkgPT4gdm9pZDtcbn1cblxuY29uc3QgQm9hcmQ6IEZDPFByb3BzPiA9ICh7IGdhbWVUeXBlID0gR2FtZVR5cGUuY29ubmVjdE4sIHJvd051bSwgYm9hcmRzLCBvbkNsaWNrT25DZWxsIH0pID0+IHtcbiAgY29uc3QgY29sTnVtID0gYm9hcmRzWzBdLmxlbmd0aDtcblxuICBjb25zdCBjZWxsR3JpZFBvcyA9IHVzZUNhbGxiYWNrKFxuICAgIChyb3dJbmQ6IG51bWJlciwgY29sSW5kOiBudW1iZXIpID0+IGNzc2BcbiAgICAgIGdyaWQtcm93OiAke3Jvd051bSAtIHJvd0luZH0gLyBzcGFuIDE7XG4gICAgICBncmlkLWNvbHVtbjogJHtjb2xJbmQgKyAxfSAvIHNwYW4gMTtcbiAgICBgLFxuICAgIFtyb3dOdW1dXG4gICk7XG5cbiAgcmV0dXJuIChcbiAgICA8ZGl2IGNzcz17W2JvYXJkU3R5bGVzLCBib2FyZFN0eWxlc09uQ29sTnVtKGNvbE51bSksIGJvYXJkU3R5bGVzT25HYW1lVHlwZVtnYW1lVHlwZV1dfT5cbiAgICAgIHtib2FyZHNbMF0ubWFwKChfYywgY29sSW5kKSA9PlxuICAgICAgICBBcnJheS5mcm9tKEFycmF5KHJvd051bSksIChfciwgcm93SW5kKSA9PiAoXG4gICAgICAgICAgPGJ1dHRvblxuICAgICAgICAgICAgdHlwZT1cImJ1dHRvblwiXG4gICAgICAgICAgICBhcmlhLWxhYmVsPVwiYm9hcmRcIlxuICAgICAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIHJlYWN0L25vLWFycmF5LWluZGV4LWtleVxuICAgICAgICAgICAga2V5PXtgY2VsbC0ke2NvbEluZH0tJHtyb3dJbmR9YH1cbiAgICAgICAgICAgIGNzcz17W2NlbGxTdHlsZXMsIGNlbGxTdHlsZXNPbkdhbWVUeXBlW2dhbWVUeXBlXSwgY2VsbEdyaWRQb3Mocm93SW5kLCBjb2xJbmQpXX1cbiAgICAgICAgICAgIG9uQ2xpY2s9e29uQ2xpY2tPbkNlbGwgJiYgb25DbGlja09uQ2VsbChjb2xJbmQsIHJvd0luZCl9XG4gICAgICAgICAgPlxuICAgICAgICAgICAgPGRpdlxuICAgICAgICAgICAgICBjc3M9e1tcbiAgICAgICAgICAgICAgICBjaGVja2VyU3R5bGVzT25HYW1lVHlwZVtnYW1lVHlwZV0sXG4gICAgICAgICAgICAgICAgZ2FtZVR5cGUgPT09IEdhbWVUeXBlLmNvbm5lY3ROICYmXG4gICAgICAgICAgICAgICAgICBib2FyZHMucmVkdWNlKFxuICAgICAgICAgICAgICAgICAgICAocmVzdWx0LCBfbiwgaW5kKSA9PlxuICAgICAgICAgICAgICAgICAgICAgIChib2FyZHNbaW5kXVtjb2xJbmRdICYgKDEgPDwgcm93SW5kKSAmJlxuICAgICAgICAgICAgICAgICAgICAgICAgcGxheWVyQ2hlY2tlclN0eWxlc09uR2FtZVR5cGVbZ2FtZVR5cGVdW2luZF0pIHx8XG4gICAgICAgICAgICAgICAgICAgICAgcmVzdWx0LFxuICAgICAgICAgICAgICAgICAgICBjc3NgYFxuICAgICAgICAgICAgICAgICAgKSxcbiAgICAgICAgICAgICAgXX1cbiAgICAgICAgICAgID5cbiAgICAgICAgICAgICAge2dhbWVUeXBlID09PSBHYW1lVHlwZS50aWNUYWNUb2UgJiZcbiAgICAgICAgICAgICAgICBib2FyZHMucmVkdWNlKFxuICAgICAgICAgICAgICAgICAgKHJlc3VsdCwgX24sIGluZCkgPT5cbiAgICAgICAgICAgICAgICAgICAgKGJvYXJkc1tpbmRdW2NvbEluZF0gJiAoMSA8PCByb3dJbmQpICYmXG4gICAgICAgICAgICAgICAgICAgICAgWzxUaWNUYWNUb2VQaWVjZSB0eXBlPVwiT1wiIC8+LCA8VGljVGFjVG9lUGllY2UgdHlwZT1cIlhcIiAvPl1baW5kXSkgfHxcbiAgICAgICAgICAgICAgICAgICAgcmVzdWx0LFxuICAgICAgICAgICAgICAgICAgPFRpY1RhY1RvZVBpZWNlIC8+XG4gICAgICAgICAgICAgICAgKX1cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgIDwvYnV0dG9uPlxuICAgICAgICApKVxuICAgICAgKX1cbiAgICA8L2Rpdj5cbiAgKTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IEJvYXJkO1xuIl19 */"))
  );
};

var boardStylesOnGameType = {
  connectN:
  /*#__PURE__*/
  Object(_emotion_core__WEBPACK_IMPORTED_MODULE_2__["css"])("grid-gap:", Object(_utils_style_rem__WEBPACK_IMPORTED_MODULE_4__["default"])(1), ";background-color:lightgray;border:", Object(_utils_style_rem__WEBPACK_IMPORTED_MODULE_4__["default"])(2), " solid black;label:connectN;" + ( false ? undefined : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9kYXZpZC5jaGVuL0RvY3VtZW50cy9wcm9qZWN0cy9uZXh0OS9zcmMvY29tcG9uZW50cy9Db25uZWN0Ti9Cb2FyZC50c3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBcUJlIiwiZmlsZSI6Ii9Vc2Vycy9kYXZpZC5jaGVuL0RvY3VtZW50cy9wcm9qZWN0cy9uZXh0OS9zcmMvY29tcG9uZW50cy9Db25uZWN0Ti9Cb2FyZC50c3giLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QsIHsgRkMsIHVzZUNhbGxiYWNrIH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgY3NzLCBTZXJpYWxpemVkU3R5bGVzIH0gZnJvbSAnQGVtb3Rpb24vY29yZSc7XG5pbXBvcnQgcmVtIGZyb20gJy4uLy4uL3V0aWxzL3N0eWxlL3JlbSc7XG5pbXBvcnQgeyBHYW1lVHlwZSB9IGZyb20gJy4uLy4uL3V0aWxzL2Nvbm5lY3ROL2Nvbm5lY3ROJztcblxuY29uc3QgYm9hcmRTdHlsZXMgPSBjc3NgXG4gIG1hcmdpbjogJHtyZW0oMjApfSBhdXRvO1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICBkaXNwbGF5OiBncmlkO1xuICBncmlkLWF1dG8tcm93czogYXV0bztcblxuICAtd2Via2l0LXRhcC1oaWdobGlnaHQtY29sb3I6IHJnYmEoMCwgMCwgMCwgMCk7XG4gIC13ZWJraXQtdGFwLWhpZ2hsaWdodC1jb2xvcjogdHJhbnNwYXJlbnQ7XG5gO1xuXG5jb25zdCBib2FyZFN0eWxlc09uQ29sTnVtID0gKGNvbE51bTogbnVtYmVyKSA9PiBjc3NgXG4gIG1heC13aWR0aDogJHtyZW0oODAgKiBjb2xOdW0pfTtcbiAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiByZXBlYXQoJHtjb2xOdW19LCAxZnIpO1xuYDtcblxuY29uc3QgYm9hcmRTdHlsZXNPbkdhbWVUeXBlOiB7IFtrZXkgaW4gc3RyaW5nXTogU2VyaWFsaXplZFN0eWxlcyB9ID0ge1xuICBjb25uZWN0TjogY3NzYFxuICAgIGdyaWQtZ2FwOiAke3JlbSgxKX07XG4gICAgYmFja2dyb3VuZC1jb2xvcjogbGlnaHRncmF5O1xuICAgIGJvcmRlcjogJHtyZW0oMil9IHNvbGlkIGJsYWNrO1xuICBgLFxuICB0aWNUYWNUb2U6IGNzc2BcbiAgICBncmlkLWdhcDogJHtyZW0oMyl9O1xuICAgIGJhY2tncm91bmQtY29sb3I6IGJsYWNrO1xuICAgIGJvcmRlcjogJHtyZW0oMyl9IHNvbGlkIHdoaXRlO1xuICBgLFxufTtcblxuY29uc3QgY2VsbFN0eWxlcyA9IGNzc2BcbiAgY3Vyc29yOiBwb2ludGVyO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcbmA7XG5cbmNvbnN0IGNlbGxTdHlsZXNPbkdhbWVUeXBlOiB7IFtrZXkgaW4gc3RyaW5nXTogU2VyaWFsaXplZFN0eWxlcyB9ID0ge1xuICB0aWNUYWNUb2U6IGNzc2BcbiAgICB3aWR0aDogMTAwJTtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgJjo6YmVmb3JlIHtcbiAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgY29udGVudDogJyc7XG4gICAgICB3aWR0aDogMTAwJTtcbiAgICAgIHBhZGRpbmctYm90dG9tOiAxMDAlO1xuICAgIH1cbiAgYCxcbn07XG5cbmNvbnN0IGNoZWNrZXJTdHlsZXNPbkdhbWVUeXBlOiB7IFtrZXkgaW4gc3RyaW5nXTogU2VyaWFsaXplZFN0eWxlcyB9ID0ge1xuICBjb25uZWN0TjogY3NzYFxuICAgIHdpZHRoOiBhdXRvO1xuICAgIHBhZGRpbmctYm90dG9tOiBjYWxjKDEwMCUgLSAke3JlbSgyICogNyl9KTtcbiAgICBtYXJnaW46ICR7cmVtKDUpfTtcbiAgICBib3JkZXItcmFkaXVzOiA1MCU7XG4gICAgYm9yZGVyOiAke3JlbSgyKX0gc29saWQgZ3JheTtcblxuICAgIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNDAwcHgpIHtcbiAgICAgIHBhZGRpbmctYm90dG9tOiBjYWxjKDEwMCUgLSAke3JlbSgyICogMyl9KTtcbiAgICAgIG1hcmdpbjogJHtyZW0oMil9O1xuICAgICAgYm9yZGVyOiAke3JlbSgxKX0gc29saWQgZ3JheTtcbiAgICB9XG4gIGAsXG4gIHRpY1RhY1RvZTogY3NzYFxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICBsZWZ0OiAwO1xuICAgIHJpZ2h0OiAwO1xuICAgIHRvcDogMDtcbiAgICBib3R0b206IDA7XG4gICAgZGlzcGxheTogYmxvY2s7XG5cbiAgICAmIHN2ZyB7XG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICBsZWZ0OiA1MCU7XG4gICAgICB0b3A6IDUwJTtcbiAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC01MCUpO1xuICAgICAgd2lkdGg6IDgwJTtcbiAgICAgIGhlaWdodDogODAlO1xuICAgIH1cblxuICAgIC8vICYgdGV4dCB7XG4gICAgLy8gICBkaXNwbGF5OiB0YWJsZS1jZWxsO1xuICAgIC8vICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIC8vICAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcbiAgICAvLyB9XG4gIGAsXG59O1xuXG5leHBvcnQgY29uc3QgcGxheWVyQ2hlY2tlclN0eWxlc09uR2FtZVR5cGU6IHsgW2tleSBpbiBzdHJpbmddOiBTZXJpYWxpemVkU3R5bGVzW10gfSA9IHtcbiAgY29ubmVjdE46IFtcbiAgICBjc3NgXG4gICAgICBib3JkZXItY29sb3I6IGdyYXk7XG4gICAgICBiYWNrZ3JvdW5kOiB5ZWxsb3c7XG4gICAgYCxcbiAgICBjc3NgXG4gICAgICBib3JkZXItY29sb3I6IHdoaXRlO1xuICAgICAgYmFja2dyb3VuZDogcmVkO1xuXG4gICAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDQwMHB4KSB7XG4gICAgICAgIGJvcmRlci1jb2xvcjogd2hpdGU7XG4gICAgICB9XG4gICAgYCxcbiAgICBjc3NgXG4gICAgICBib3JkZXItY29sb3I6IGdyYXk7XG4gICAgICBiYWNrZ3JvdW5kOiBza3libHVlO1xuICAgIGAsXG4gICAgY3NzYFxuICAgICAgYm9yZGVyLWNvbG9yOiBncmF5O1xuICAgICAgYmFja2dyb3VuZDogcGluaztcbiAgICBgLFxuICBdLFxuICB0aWNUYWNUb2U6IFtcbiAgICBjc3NgXG4gICAgICAmOjphZnRlciB7XG4gICAgICAgIGNvbnRlbnQ6ICdPOic7XG4gICAgICB9XG4gICAgYCxcbiAgICBjc3NgXG4gICAgICAmOjphZnRlciB7XG4gICAgICAgIGNvbnRlbnQ6ICdYOic7XG4gICAgICB9XG4gICAgYCxcbiAgXSxcbn07XG5cbmNvbnN0IFRpY1RhY1RvZVBpZWNlOiBGQzx7IHR5cGU/OiAnTycgfCAnWCcgfT4gPSAoeyB0eXBlIH0pID0+IChcbiAgPHN2ZyB2aWV3Qm94PXt0eXBlID09PSAnTycgPyAnMCAwIDExIDEyJyA6ICcwIDAgMTAgMTInfT5cbiAgICA8dGV4dFxuICAgICAgeD17dHlwZSA9PT0gJ08nID8gJzAuNTEnIDogJzAuNSd9XG4gICAgICB5PXt0eXBlID09PSAnTycgPyAnMTAuNScgOiAnMTAuNSd9XG4gICAgICB0ZXh0QW5jaG9yPVwiY2VudGVyXCJcbiAgICAgIGZvbnRXZWlnaHQ9XCIzMDBcIlxuICAgID5cbiAgICAgIHt0eXBlfVxuICAgIDwvdGV4dD5cbiAgPC9zdmc+XG4pO1xuXG5pbnRlcmZhY2UgUHJvcHMge1xuICBnYW1lVHlwZT86IEdhbWVUeXBlO1xuICByb3dOdW06IG51bWJlcjtcbiAgYm9hcmRzOiBudW1iZXJbXVtdO1xuICBvbkNsaWNrT25DZWxsPyhjb2xJbmQ6IG51bWJlciwgcm93SW5kOiBudW1iZXIpOiAoZTogUmVhY3QuTW91c2VFdmVudCkgPT4gdm9pZDtcbn1cblxuY29uc3QgQm9hcmQ6IEZDPFByb3BzPiA9ICh7IGdhbWVUeXBlID0gR2FtZVR5cGUuY29ubmVjdE4sIHJvd051bSwgYm9hcmRzLCBvbkNsaWNrT25DZWxsIH0pID0+IHtcbiAgY29uc3QgY29sTnVtID0gYm9hcmRzWzBdLmxlbmd0aDtcblxuICBjb25zdCBjZWxsR3JpZFBvcyA9IHVzZUNhbGxiYWNrKFxuICAgIChyb3dJbmQ6IG51bWJlciwgY29sSW5kOiBudW1iZXIpID0+IGNzc2BcbiAgICAgIGdyaWQtcm93OiAke3Jvd051bSAtIHJvd0luZH0gLyBzcGFuIDE7XG4gICAgICBncmlkLWNvbHVtbjogJHtjb2xJbmQgKyAxfSAvIHNwYW4gMTtcbiAgICBgLFxuICAgIFtyb3dOdW1dXG4gICk7XG5cbiAgcmV0dXJuIChcbiAgICA8ZGl2IGNzcz17W2JvYXJkU3R5bGVzLCBib2FyZFN0eWxlc09uQ29sTnVtKGNvbE51bSksIGJvYXJkU3R5bGVzT25HYW1lVHlwZVtnYW1lVHlwZV1dfT5cbiAgICAgIHtib2FyZHNbMF0ubWFwKChfYywgY29sSW5kKSA9PlxuICAgICAgICBBcnJheS5mcm9tKEFycmF5KHJvd051bSksIChfciwgcm93SW5kKSA9PiAoXG4gICAgICAgICAgPGJ1dHRvblxuICAgICAgICAgICAgdHlwZT1cImJ1dHRvblwiXG4gICAgICAgICAgICBhcmlhLWxhYmVsPVwiYm9hcmRcIlxuICAgICAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIHJlYWN0L25vLWFycmF5LWluZGV4LWtleVxuICAgICAgICAgICAga2V5PXtgY2VsbC0ke2NvbEluZH0tJHtyb3dJbmR9YH1cbiAgICAgICAgICAgIGNzcz17W2NlbGxTdHlsZXMsIGNlbGxTdHlsZXNPbkdhbWVUeXBlW2dhbWVUeXBlXSwgY2VsbEdyaWRQb3Mocm93SW5kLCBjb2xJbmQpXX1cbiAgICAgICAgICAgIG9uQ2xpY2s9e29uQ2xpY2tPbkNlbGwgJiYgb25DbGlja09uQ2VsbChjb2xJbmQsIHJvd0luZCl9XG4gICAgICAgICAgPlxuICAgICAgICAgICAgPGRpdlxuICAgICAgICAgICAgICBjc3M9e1tcbiAgICAgICAgICAgICAgICBjaGVja2VyU3R5bGVzT25HYW1lVHlwZVtnYW1lVHlwZV0sXG4gICAgICAgICAgICAgICAgZ2FtZVR5cGUgPT09IEdhbWVUeXBlLmNvbm5lY3ROICYmXG4gICAgICAgICAgICAgICAgICBib2FyZHMucmVkdWNlKFxuICAgICAgICAgICAgICAgICAgICAocmVzdWx0LCBfbiwgaW5kKSA9PlxuICAgICAgICAgICAgICAgICAgICAgIChib2FyZHNbaW5kXVtjb2xJbmRdICYgKDEgPDwgcm93SW5kKSAmJlxuICAgICAgICAgICAgICAgICAgICAgICAgcGxheWVyQ2hlY2tlclN0eWxlc09uR2FtZVR5cGVbZ2FtZVR5cGVdW2luZF0pIHx8XG4gICAgICAgICAgICAgICAgICAgICAgcmVzdWx0LFxuICAgICAgICAgICAgICAgICAgICBjc3NgYFxuICAgICAgICAgICAgICAgICAgKSxcbiAgICAgICAgICAgICAgXX1cbiAgICAgICAgICAgID5cbiAgICAgICAgICAgICAge2dhbWVUeXBlID09PSBHYW1lVHlwZS50aWNUYWNUb2UgJiZcbiAgICAgICAgICAgICAgICBib2FyZHMucmVkdWNlKFxuICAgICAgICAgICAgICAgICAgKHJlc3VsdCwgX24sIGluZCkgPT5cbiAgICAgICAgICAgICAgICAgICAgKGJvYXJkc1tpbmRdW2NvbEluZF0gJiAoMSA8PCByb3dJbmQpICYmXG4gICAgICAgICAgICAgICAgICAgICAgWzxUaWNUYWNUb2VQaWVjZSB0eXBlPVwiT1wiIC8+LCA8VGljVGFjVG9lUGllY2UgdHlwZT1cIlhcIiAvPl1baW5kXSkgfHxcbiAgICAgICAgICAgICAgICAgICAgcmVzdWx0LFxuICAgICAgICAgICAgICAgICAgPFRpY1RhY1RvZVBpZWNlIC8+XG4gICAgICAgICAgICAgICAgKX1cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgIDwvYnV0dG9uPlxuICAgICAgICApKVxuICAgICAgKX1cbiAgICA8L2Rpdj5cbiAgKTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IEJvYXJkO1xuIl19 */")),
  ticTacToe:
  /*#__PURE__*/
  Object(_emotion_core__WEBPACK_IMPORTED_MODULE_2__["css"])("grid-gap:", Object(_utils_style_rem__WEBPACK_IMPORTED_MODULE_4__["default"])(3), ";background-color:black;border:", Object(_utils_style_rem__WEBPACK_IMPORTED_MODULE_4__["default"])(3), " solid white;label:ticTacToe;" + ( false ? undefined : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9kYXZpZC5jaGVuL0RvY3VtZW50cy9wcm9qZWN0cy9uZXh0OS9zcmMvY29tcG9uZW50cy9Db25uZWN0Ti9Cb2FyZC50c3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBMEJnQiIsImZpbGUiOiIvVXNlcnMvZGF2aWQuY2hlbi9Eb2N1bWVudHMvcHJvamVjdHMvbmV4dDkvc3JjL2NvbXBvbmVudHMvQ29ubmVjdE4vQm9hcmQudHN4Iiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0LCB7IEZDLCB1c2VDYWxsYmFjayB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IGNzcywgU2VyaWFsaXplZFN0eWxlcyB9IGZyb20gJ0BlbW90aW9uL2NvcmUnO1xuaW1wb3J0IHJlbSBmcm9tICcuLi8uLi91dGlscy9zdHlsZS9yZW0nO1xuaW1wb3J0IHsgR2FtZVR5cGUgfSBmcm9tICcuLi8uLi91dGlscy9jb25uZWN0Ti9jb25uZWN0Tic7XG5cbmNvbnN0IGJvYXJkU3R5bGVzID0gY3NzYFxuICBtYXJnaW46ICR7cmVtKDIwKX0gYXV0bztcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgZGlzcGxheTogZ3JpZDtcbiAgZ3JpZC1hdXRvLXJvd3M6IGF1dG87XG5cbiAgLXdlYmtpdC10YXAtaGlnaGxpZ2h0LWNvbG9yOiByZ2JhKDAsIDAsIDAsIDApO1xuICAtd2Via2l0LXRhcC1oaWdobGlnaHQtY29sb3I6IHRyYW5zcGFyZW50O1xuYDtcblxuY29uc3QgYm9hcmRTdHlsZXNPbkNvbE51bSA9IChjb2xOdW06IG51bWJlcikgPT4gY3NzYFxuICBtYXgtd2lkdGg6ICR7cmVtKDgwICogY29sTnVtKX07XG4gIGdyaWQtdGVtcGxhdGUtY29sdW1uczogcmVwZWF0KCR7Y29sTnVtfSwgMWZyKTtcbmA7XG5cbmNvbnN0IGJvYXJkU3R5bGVzT25HYW1lVHlwZTogeyBba2V5IGluIHN0cmluZ106IFNlcmlhbGl6ZWRTdHlsZXMgfSA9IHtcbiAgY29ubmVjdE46IGNzc2BcbiAgICBncmlkLWdhcDogJHtyZW0oMSl9O1xuICAgIGJhY2tncm91bmQtY29sb3I6IGxpZ2h0Z3JheTtcbiAgICBib3JkZXI6ICR7cmVtKDIpfSBzb2xpZCBibGFjaztcbiAgYCxcbiAgdGljVGFjVG9lOiBjc3NgXG4gICAgZ3JpZC1nYXA6ICR7cmVtKDMpfTtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBibGFjaztcbiAgICBib3JkZXI6ICR7cmVtKDMpfSBzb2xpZCB3aGl0ZTtcbiAgYCxcbn07XG5cbmNvbnN0IGNlbGxTdHlsZXMgPSBjc3NgXG4gIGN1cnNvcjogcG9pbnRlcjtcbiAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XG5gO1xuXG5jb25zdCBjZWxsU3R5bGVzT25HYW1lVHlwZTogeyBba2V5IGluIHN0cmluZ106IFNlcmlhbGl6ZWRTdHlsZXMgfSA9IHtcbiAgdGljVGFjVG9lOiBjc3NgXG4gICAgd2lkdGg6IDEwMCU7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgICY6OmJlZm9yZSB7XG4gICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgIGNvbnRlbnQ6ICcnO1xuICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICBwYWRkaW5nLWJvdHRvbTogMTAwJTtcbiAgICB9XG4gIGAsXG59O1xuXG5jb25zdCBjaGVja2VyU3R5bGVzT25HYW1lVHlwZTogeyBba2V5IGluIHN0cmluZ106IFNlcmlhbGl6ZWRTdHlsZXMgfSA9IHtcbiAgY29ubmVjdE46IGNzc2BcbiAgICB3aWR0aDogYXV0bztcbiAgICBwYWRkaW5nLWJvdHRvbTogY2FsYygxMDAlIC0gJHtyZW0oMiAqIDcpfSk7XG4gICAgbWFyZ2luOiAke3JlbSg1KX07XG4gICAgYm9yZGVyLXJhZGl1czogNTAlO1xuICAgIGJvcmRlcjogJHtyZW0oMil9IHNvbGlkIGdyYXk7XG5cbiAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDQwMHB4KSB7XG4gICAgICBwYWRkaW5nLWJvdHRvbTogY2FsYygxMDAlIC0gJHtyZW0oMiAqIDMpfSk7XG4gICAgICBtYXJnaW46ICR7cmVtKDIpfTtcbiAgICAgIGJvcmRlcjogJHtyZW0oMSl9IHNvbGlkIGdyYXk7XG4gICAgfVxuICBgLFxuICB0aWNUYWNUb2U6IGNzc2BcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgbGVmdDogMDtcbiAgICByaWdodDogMDtcbiAgICB0b3A6IDA7XG4gICAgYm90dG9tOiAwO1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuXG4gICAgJiBzdmcge1xuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgbGVmdDogNTAlO1xuICAgICAgdG9wOiA1MCU7XG4gICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNTAlKTtcbiAgICAgIHdpZHRoOiA4MCU7XG4gICAgICBoZWlnaHQ6IDgwJTtcbiAgICB9XG5cbiAgICAvLyAmIHRleHQge1xuICAgIC8vICAgZGlzcGxheTogdGFibGUtY2VsbDtcbiAgICAvLyAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICAvLyAgIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XG4gICAgLy8gfVxuICBgLFxufTtcblxuZXhwb3J0IGNvbnN0IHBsYXllckNoZWNrZXJTdHlsZXNPbkdhbWVUeXBlOiB7IFtrZXkgaW4gc3RyaW5nXTogU2VyaWFsaXplZFN0eWxlc1tdIH0gPSB7XG4gIGNvbm5lY3ROOiBbXG4gICAgY3NzYFxuICAgICAgYm9yZGVyLWNvbG9yOiBncmF5O1xuICAgICAgYmFja2dyb3VuZDogeWVsbG93O1xuICAgIGAsXG4gICAgY3NzYFxuICAgICAgYm9yZGVyLWNvbG9yOiB3aGl0ZTtcbiAgICAgIGJhY2tncm91bmQ6IHJlZDtcblxuICAgICAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA0MDBweCkge1xuICAgICAgICBib3JkZXItY29sb3I6IHdoaXRlO1xuICAgICAgfVxuICAgIGAsXG4gICAgY3NzYFxuICAgICAgYm9yZGVyLWNvbG9yOiBncmF5O1xuICAgICAgYmFja2dyb3VuZDogc2t5Ymx1ZTtcbiAgICBgLFxuICAgIGNzc2BcbiAgICAgIGJvcmRlci1jb2xvcjogZ3JheTtcbiAgICAgIGJhY2tncm91bmQ6IHBpbms7XG4gICAgYCxcbiAgXSxcbiAgdGljVGFjVG9lOiBbXG4gICAgY3NzYFxuICAgICAgJjo6YWZ0ZXIge1xuICAgICAgICBjb250ZW50OiAnTzonO1xuICAgICAgfVxuICAgIGAsXG4gICAgY3NzYFxuICAgICAgJjo6YWZ0ZXIge1xuICAgICAgICBjb250ZW50OiAnWDonO1xuICAgICAgfVxuICAgIGAsXG4gIF0sXG59O1xuXG5jb25zdCBUaWNUYWNUb2VQaWVjZTogRkM8eyB0eXBlPzogJ08nIHwgJ1gnIH0+ID0gKHsgdHlwZSB9KSA9PiAoXG4gIDxzdmcgdmlld0JveD17dHlwZSA9PT0gJ08nID8gJzAgMCAxMSAxMicgOiAnMCAwIDEwIDEyJ30+XG4gICAgPHRleHRcbiAgICAgIHg9e3R5cGUgPT09ICdPJyA/ICcwLjUxJyA6ICcwLjUnfVxuICAgICAgeT17dHlwZSA9PT0gJ08nID8gJzEwLjUnIDogJzEwLjUnfVxuICAgICAgdGV4dEFuY2hvcj1cImNlbnRlclwiXG4gICAgICBmb250V2VpZ2h0PVwiMzAwXCJcbiAgICA+XG4gICAgICB7dHlwZX1cbiAgICA8L3RleHQ+XG4gIDwvc3ZnPlxuKTtcblxuaW50ZXJmYWNlIFByb3BzIHtcbiAgZ2FtZVR5cGU/OiBHYW1lVHlwZTtcbiAgcm93TnVtOiBudW1iZXI7XG4gIGJvYXJkczogbnVtYmVyW11bXTtcbiAgb25DbGlja09uQ2VsbD8oY29sSW5kOiBudW1iZXIsIHJvd0luZDogbnVtYmVyKTogKGU6IFJlYWN0Lk1vdXNlRXZlbnQpID0+IHZvaWQ7XG59XG5cbmNvbnN0IEJvYXJkOiBGQzxQcm9wcz4gPSAoeyBnYW1lVHlwZSA9IEdhbWVUeXBlLmNvbm5lY3ROLCByb3dOdW0sIGJvYXJkcywgb25DbGlja09uQ2VsbCB9KSA9PiB7XG4gIGNvbnN0IGNvbE51bSA9IGJvYXJkc1swXS5sZW5ndGg7XG5cbiAgY29uc3QgY2VsbEdyaWRQb3MgPSB1c2VDYWxsYmFjayhcbiAgICAocm93SW5kOiBudW1iZXIsIGNvbEluZDogbnVtYmVyKSA9PiBjc3NgXG4gICAgICBncmlkLXJvdzogJHtyb3dOdW0gLSByb3dJbmR9IC8gc3BhbiAxO1xuICAgICAgZ3JpZC1jb2x1bW46ICR7Y29sSW5kICsgMX0gLyBzcGFuIDE7XG4gICAgYCxcbiAgICBbcm93TnVtXVxuICApO1xuXG4gIHJldHVybiAoXG4gICAgPGRpdiBjc3M9e1tib2FyZFN0eWxlcywgYm9hcmRTdHlsZXNPbkNvbE51bShjb2xOdW0pLCBib2FyZFN0eWxlc09uR2FtZVR5cGVbZ2FtZVR5cGVdXX0+XG4gICAgICB7Ym9hcmRzWzBdLm1hcCgoX2MsIGNvbEluZCkgPT5cbiAgICAgICAgQXJyYXkuZnJvbShBcnJheShyb3dOdW0pLCAoX3IsIHJvd0luZCkgPT4gKFxuICAgICAgICAgIDxidXR0b25cbiAgICAgICAgICAgIHR5cGU9XCJidXR0b25cIlxuICAgICAgICAgICAgYXJpYS1sYWJlbD1cImJvYXJkXCJcbiAgICAgICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSByZWFjdC9uby1hcnJheS1pbmRleC1rZXlcbiAgICAgICAgICAgIGtleT17YGNlbGwtJHtjb2xJbmR9LSR7cm93SW5kfWB9XG4gICAgICAgICAgICBjc3M9e1tjZWxsU3R5bGVzLCBjZWxsU3R5bGVzT25HYW1lVHlwZVtnYW1lVHlwZV0sIGNlbGxHcmlkUG9zKHJvd0luZCwgY29sSW5kKV19XG4gICAgICAgICAgICBvbkNsaWNrPXtvbkNsaWNrT25DZWxsICYmIG9uQ2xpY2tPbkNlbGwoY29sSW5kLCByb3dJbmQpfVxuICAgICAgICAgID5cbiAgICAgICAgICAgIDxkaXZcbiAgICAgICAgICAgICAgY3NzPXtbXG4gICAgICAgICAgICAgICAgY2hlY2tlclN0eWxlc09uR2FtZVR5cGVbZ2FtZVR5cGVdLFxuICAgICAgICAgICAgICAgIGdhbWVUeXBlID09PSBHYW1lVHlwZS5jb25uZWN0TiAmJlxuICAgICAgICAgICAgICAgICAgYm9hcmRzLnJlZHVjZShcbiAgICAgICAgICAgICAgICAgICAgKHJlc3VsdCwgX24sIGluZCkgPT5cbiAgICAgICAgICAgICAgICAgICAgICAoYm9hcmRzW2luZF1bY29sSW5kXSAmICgxIDw8IHJvd0luZCkgJiZcbiAgICAgICAgICAgICAgICAgICAgICAgIHBsYXllckNoZWNrZXJTdHlsZXNPbkdhbWVUeXBlW2dhbWVUeXBlXVtpbmRdKSB8fFxuICAgICAgICAgICAgICAgICAgICAgIHJlc3VsdCxcbiAgICAgICAgICAgICAgICAgICAgY3NzYGBcbiAgICAgICAgICAgICAgICAgICksXG4gICAgICAgICAgICAgIF19XG4gICAgICAgICAgICA+XG4gICAgICAgICAgICAgIHtnYW1lVHlwZSA9PT0gR2FtZVR5cGUudGljVGFjVG9lICYmXG4gICAgICAgICAgICAgICAgYm9hcmRzLnJlZHVjZShcbiAgICAgICAgICAgICAgICAgIChyZXN1bHQsIF9uLCBpbmQpID0+XG4gICAgICAgICAgICAgICAgICAgIChib2FyZHNbaW5kXVtjb2xJbmRdICYgKDEgPDwgcm93SW5kKSAmJlxuICAgICAgICAgICAgICAgICAgICAgIFs8VGljVGFjVG9lUGllY2UgdHlwZT1cIk9cIiAvPiwgPFRpY1RhY1RvZVBpZWNlIHR5cGU9XCJYXCIgLz5dW2luZF0pIHx8XG4gICAgICAgICAgICAgICAgICAgIHJlc3VsdCxcbiAgICAgICAgICAgICAgICAgIDxUaWNUYWNUb2VQaWVjZSAvPlxuICAgICAgICAgICAgICAgICl9XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICA8L2J1dHRvbj5cbiAgICAgICAgKSlcbiAgICAgICl9XG4gICAgPC9kaXY+XG4gICk7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBCb2FyZDtcbiJdfQ== */"))
};
var cellStyles =  false ? undefined : {
  name: "jv2pcq-cellStyles",
  styles: "cursor:pointer;background-color:white;label:cellStyles;",
  map: "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9kYXZpZC5jaGVuL0RvY3VtZW50cy9wcm9qZWN0cy9uZXh0OS9zcmMvY29tcG9uZW50cy9Db25uZWN0Ti9Cb2FyZC50c3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBaUNzQiIsImZpbGUiOiIvVXNlcnMvZGF2aWQuY2hlbi9Eb2N1bWVudHMvcHJvamVjdHMvbmV4dDkvc3JjL2NvbXBvbmVudHMvQ29ubmVjdE4vQm9hcmQudHN4Iiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0LCB7IEZDLCB1c2VDYWxsYmFjayB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IGNzcywgU2VyaWFsaXplZFN0eWxlcyB9IGZyb20gJ0BlbW90aW9uL2NvcmUnO1xuaW1wb3J0IHJlbSBmcm9tICcuLi8uLi91dGlscy9zdHlsZS9yZW0nO1xuaW1wb3J0IHsgR2FtZVR5cGUgfSBmcm9tICcuLi8uLi91dGlscy9jb25uZWN0Ti9jb25uZWN0Tic7XG5cbmNvbnN0IGJvYXJkU3R5bGVzID0gY3NzYFxuICBtYXJnaW46ICR7cmVtKDIwKX0gYXV0bztcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgZGlzcGxheTogZ3JpZDtcbiAgZ3JpZC1hdXRvLXJvd3M6IGF1dG87XG5cbiAgLXdlYmtpdC10YXAtaGlnaGxpZ2h0LWNvbG9yOiByZ2JhKDAsIDAsIDAsIDApO1xuICAtd2Via2l0LXRhcC1oaWdobGlnaHQtY29sb3I6IHRyYW5zcGFyZW50O1xuYDtcblxuY29uc3QgYm9hcmRTdHlsZXNPbkNvbE51bSA9IChjb2xOdW06IG51bWJlcikgPT4gY3NzYFxuICBtYXgtd2lkdGg6ICR7cmVtKDgwICogY29sTnVtKX07XG4gIGdyaWQtdGVtcGxhdGUtY29sdW1uczogcmVwZWF0KCR7Y29sTnVtfSwgMWZyKTtcbmA7XG5cbmNvbnN0IGJvYXJkU3R5bGVzT25HYW1lVHlwZTogeyBba2V5IGluIHN0cmluZ106IFNlcmlhbGl6ZWRTdHlsZXMgfSA9IHtcbiAgY29ubmVjdE46IGNzc2BcbiAgICBncmlkLWdhcDogJHtyZW0oMSl9O1xuICAgIGJhY2tncm91bmQtY29sb3I6IGxpZ2h0Z3JheTtcbiAgICBib3JkZXI6ICR7cmVtKDIpfSBzb2xpZCBibGFjaztcbiAgYCxcbiAgdGljVGFjVG9lOiBjc3NgXG4gICAgZ3JpZC1nYXA6ICR7cmVtKDMpfTtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBibGFjaztcbiAgICBib3JkZXI6ICR7cmVtKDMpfSBzb2xpZCB3aGl0ZTtcbiAgYCxcbn07XG5cbmNvbnN0IGNlbGxTdHlsZXMgPSBjc3NgXG4gIGN1cnNvcjogcG9pbnRlcjtcbiAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XG5gO1xuXG5jb25zdCBjZWxsU3R5bGVzT25HYW1lVHlwZTogeyBba2V5IGluIHN0cmluZ106IFNlcmlhbGl6ZWRTdHlsZXMgfSA9IHtcbiAgdGljVGFjVG9lOiBjc3NgXG4gICAgd2lkdGg6IDEwMCU7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgICY6OmJlZm9yZSB7XG4gICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgIGNvbnRlbnQ6ICcnO1xuICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICBwYWRkaW5nLWJvdHRvbTogMTAwJTtcbiAgICB9XG4gIGAsXG59O1xuXG5jb25zdCBjaGVja2VyU3R5bGVzT25HYW1lVHlwZTogeyBba2V5IGluIHN0cmluZ106IFNlcmlhbGl6ZWRTdHlsZXMgfSA9IHtcbiAgY29ubmVjdE46IGNzc2BcbiAgICB3aWR0aDogYXV0bztcbiAgICBwYWRkaW5nLWJvdHRvbTogY2FsYygxMDAlIC0gJHtyZW0oMiAqIDcpfSk7XG4gICAgbWFyZ2luOiAke3JlbSg1KX07XG4gICAgYm9yZGVyLXJhZGl1czogNTAlO1xuICAgIGJvcmRlcjogJHtyZW0oMil9IHNvbGlkIGdyYXk7XG5cbiAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDQwMHB4KSB7XG4gICAgICBwYWRkaW5nLWJvdHRvbTogY2FsYygxMDAlIC0gJHtyZW0oMiAqIDMpfSk7XG4gICAgICBtYXJnaW46ICR7cmVtKDIpfTtcbiAgICAgIGJvcmRlcjogJHtyZW0oMSl9IHNvbGlkIGdyYXk7XG4gICAgfVxuICBgLFxuICB0aWNUYWNUb2U6IGNzc2BcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgbGVmdDogMDtcbiAgICByaWdodDogMDtcbiAgICB0b3A6IDA7XG4gICAgYm90dG9tOiAwO1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuXG4gICAgJiBzdmcge1xuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgbGVmdDogNTAlO1xuICAgICAgdG9wOiA1MCU7XG4gICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNTAlKTtcbiAgICAgIHdpZHRoOiA4MCU7XG4gICAgICBoZWlnaHQ6IDgwJTtcbiAgICB9XG5cbiAgICAvLyAmIHRleHQge1xuICAgIC8vICAgZGlzcGxheTogdGFibGUtY2VsbDtcbiAgICAvLyAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICAvLyAgIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XG4gICAgLy8gfVxuICBgLFxufTtcblxuZXhwb3J0IGNvbnN0IHBsYXllckNoZWNrZXJTdHlsZXNPbkdhbWVUeXBlOiB7IFtrZXkgaW4gc3RyaW5nXTogU2VyaWFsaXplZFN0eWxlc1tdIH0gPSB7XG4gIGNvbm5lY3ROOiBbXG4gICAgY3NzYFxuICAgICAgYm9yZGVyLWNvbG9yOiBncmF5O1xuICAgICAgYmFja2dyb3VuZDogeWVsbG93O1xuICAgIGAsXG4gICAgY3NzYFxuICAgICAgYm9yZGVyLWNvbG9yOiB3aGl0ZTtcbiAgICAgIGJhY2tncm91bmQ6IHJlZDtcblxuICAgICAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA0MDBweCkge1xuICAgICAgICBib3JkZXItY29sb3I6IHdoaXRlO1xuICAgICAgfVxuICAgIGAsXG4gICAgY3NzYFxuICAgICAgYm9yZGVyLWNvbG9yOiBncmF5O1xuICAgICAgYmFja2dyb3VuZDogc2t5Ymx1ZTtcbiAgICBgLFxuICAgIGNzc2BcbiAgICAgIGJvcmRlci1jb2xvcjogZ3JheTtcbiAgICAgIGJhY2tncm91bmQ6IHBpbms7XG4gICAgYCxcbiAgXSxcbiAgdGljVGFjVG9lOiBbXG4gICAgY3NzYFxuICAgICAgJjo6YWZ0ZXIge1xuICAgICAgICBjb250ZW50OiAnTzonO1xuICAgICAgfVxuICAgIGAsXG4gICAgY3NzYFxuICAgICAgJjo6YWZ0ZXIge1xuICAgICAgICBjb250ZW50OiAnWDonO1xuICAgICAgfVxuICAgIGAsXG4gIF0sXG59O1xuXG5jb25zdCBUaWNUYWNUb2VQaWVjZTogRkM8eyB0eXBlPzogJ08nIHwgJ1gnIH0+ID0gKHsgdHlwZSB9KSA9PiAoXG4gIDxzdmcgdmlld0JveD17dHlwZSA9PT0gJ08nID8gJzAgMCAxMSAxMicgOiAnMCAwIDEwIDEyJ30+XG4gICAgPHRleHRcbiAgICAgIHg9e3R5cGUgPT09ICdPJyA/ICcwLjUxJyA6ICcwLjUnfVxuICAgICAgeT17dHlwZSA9PT0gJ08nID8gJzEwLjUnIDogJzEwLjUnfVxuICAgICAgdGV4dEFuY2hvcj1cImNlbnRlclwiXG4gICAgICBmb250V2VpZ2h0PVwiMzAwXCJcbiAgICA+XG4gICAgICB7dHlwZX1cbiAgICA8L3RleHQ+XG4gIDwvc3ZnPlxuKTtcblxuaW50ZXJmYWNlIFByb3BzIHtcbiAgZ2FtZVR5cGU/OiBHYW1lVHlwZTtcbiAgcm93TnVtOiBudW1iZXI7XG4gIGJvYXJkczogbnVtYmVyW11bXTtcbiAgb25DbGlja09uQ2VsbD8oY29sSW5kOiBudW1iZXIsIHJvd0luZDogbnVtYmVyKTogKGU6IFJlYWN0Lk1vdXNlRXZlbnQpID0+IHZvaWQ7XG59XG5cbmNvbnN0IEJvYXJkOiBGQzxQcm9wcz4gPSAoeyBnYW1lVHlwZSA9IEdhbWVUeXBlLmNvbm5lY3ROLCByb3dOdW0sIGJvYXJkcywgb25DbGlja09uQ2VsbCB9KSA9PiB7XG4gIGNvbnN0IGNvbE51bSA9IGJvYXJkc1swXS5sZW5ndGg7XG5cbiAgY29uc3QgY2VsbEdyaWRQb3MgPSB1c2VDYWxsYmFjayhcbiAgICAocm93SW5kOiBudW1iZXIsIGNvbEluZDogbnVtYmVyKSA9PiBjc3NgXG4gICAgICBncmlkLXJvdzogJHtyb3dOdW0gLSByb3dJbmR9IC8gc3BhbiAxO1xuICAgICAgZ3JpZC1jb2x1bW46ICR7Y29sSW5kICsgMX0gLyBzcGFuIDE7XG4gICAgYCxcbiAgICBbcm93TnVtXVxuICApO1xuXG4gIHJldHVybiAoXG4gICAgPGRpdiBjc3M9e1tib2FyZFN0eWxlcywgYm9hcmRTdHlsZXNPbkNvbE51bShjb2xOdW0pLCBib2FyZFN0eWxlc09uR2FtZVR5cGVbZ2FtZVR5cGVdXX0+XG4gICAgICB7Ym9hcmRzWzBdLm1hcCgoX2MsIGNvbEluZCkgPT5cbiAgICAgICAgQXJyYXkuZnJvbShBcnJheShyb3dOdW0pLCAoX3IsIHJvd0luZCkgPT4gKFxuICAgICAgICAgIDxidXR0b25cbiAgICAgICAgICAgIHR5cGU9XCJidXR0b25cIlxuICAgICAgICAgICAgYXJpYS1sYWJlbD1cImJvYXJkXCJcbiAgICAgICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSByZWFjdC9uby1hcnJheS1pbmRleC1rZXlcbiAgICAgICAgICAgIGtleT17YGNlbGwtJHtjb2xJbmR9LSR7cm93SW5kfWB9XG4gICAgICAgICAgICBjc3M9e1tjZWxsU3R5bGVzLCBjZWxsU3R5bGVzT25HYW1lVHlwZVtnYW1lVHlwZV0sIGNlbGxHcmlkUG9zKHJvd0luZCwgY29sSW5kKV19XG4gICAgICAgICAgICBvbkNsaWNrPXtvbkNsaWNrT25DZWxsICYmIG9uQ2xpY2tPbkNlbGwoY29sSW5kLCByb3dJbmQpfVxuICAgICAgICAgID5cbiAgICAgICAgICAgIDxkaXZcbiAgICAgICAgICAgICAgY3NzPXtbXG4gICAgICAgICAgICAgICAgY2hlY2tlclN0eWxlc09uR2FtZVR5cGVbZ2FtZVR5cGVdLFxuICAgICAgICAgICAgICAgIGdhbWVUeXBlID09PSBHYW1lVHlwZS5jb25uZWN0TiAmJlxuICAgICAgICAgICAgICAgICAgYm9hcmRzLnJlZHVjZShcbiAgICAgICAgICAgICAgICAgICAgKHJlc3VsdCwgX24sIGluZCkgPT5cbiAgICAgICAgICAgICAgICAgICAgICAoYm9hcmRzW2luZF1bY29sSW5kXSAmICgxIDw8IHJvd0luZCkgJiZcbiAgICAgICAgICAgICAgICAgICAgICAgIHBsYXllckNoZWNrZXJTdHlsZXNPbkdhbWVUeXBlW2dhbWVUeXBlXVtpbmRdKSB8fFxuICAgICAgICAgICAgICAgICAgICAgIHJlc3VsdCxcbiAgICAgICAgICAgICAgICAgICAgY3NzYGBcbiAgICAgICAgICAgICAgICAgICksXG4gICAgICAgICAgICAgIF19XG4gICAgICAgICAgICA+XG4gICAgICAgICAgICAgIHtnYW1lVHlwZSA9PT0gR2FtZVR5cGUudGljVGFjVG9lICYmXG4gICAgICAgICAgICAgICAgYm9hcmRzLnJlZHVjZShcbiAgICAgICAgICAgICAgICAgIChyZXN1bHQsIF9uLCBpbmQpID0+XG4gICAgICAgICAgICAgICAgICAgIChib2FyZHNbaW5kXVtjb2xJbmRdICYgKDEgPDwgcm93SW5kKSAmJlxuICAgICAgICAgICAgICAgICAgICAgIFs8VGljVGFjVG9lUGllY2UgdHlwZT1cIk9cIiAvPiwgPFRpY1RhY1RvZVBpZWNlIHR5cGU9XCJYXCIgLz5dW2luZF0pIHx8XG4gICAgICAgICAgICAgICAgICAgIHJlc3VsdCxcbiAgICAgICAgICAgICAgICAgIDxUaWNUYWNUb2VQaWVjZSAvPlxuICAgICAgICAgICAgICAgICl9XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICA8L2J1dHRvbj5cbiAgICAgICAgKSlcbiAgICAgICl9XG4gICAgPC9kaXY+XG4gICk7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBCb2FyZDtcbiJdfQ== */"
};
var cellStylesOnGameType = {
  ticTacToe:  false ? undefined : {
    name: "1xr4iw4-ticTacToe",
    styles: "width:100%;position:relative;&::before{display:block;content:'';width:100%;padding-bottom:100%;}label:ticTacToe;",
    map: "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9kYXZpZC5jaGVuL0RvY3VtZW50cy9wcm9qZWN0cy9uZXh0OS9zcmMvY29tcG9uZW50cy9Db25uZWN0Ti9Cb2FyZC50c3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBdUNnQiIsImZpbGUiOiIvVXNlcnMvZGF2aWQuY2hlbi9Eb2N1bWVudHMvcHJvamVjdHMvbmV4dDkvc3JjL2NvbXBvbmVudHMvQ29ubmVjdE4vQm9hcmQudHN4Iiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0LCB7IEZDLCB1c2VDYWxsYmFjayB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IGNzcywgU2VyaWFsaXplZFN0eWxlcyB9IGZyb20gJ0BlbW90aW9uL2NvcmUnO1xuaW1wb3J0IHJlbSBmcm9tICcuLi8uLi91dGlscy9zdHlsZS9yZW0nO1xuaW1wb3J0IHsgR2FtZVR5cGUgfSBmcm9tICcuLi8uLi91dGlscy9jb25uZWN0Ti9jb25uZWN0Tic7XG5cbmNvbnN0IGJvYXJkU3R5bGVzID0gY3NzYFxuICBtYXJnaW46ICR7cmVtKDIwKX0gYXV0bztcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgZGlzcGxheTogZ3JpZDtcbiAgZ3JpZC1hdXRvLXJvd3M6IGF1dG87XG5cbiAgLXdlYmtpdC10YXAtaGlnaGxpZ2h0LWNvbG9yOiByZ2JhKDAsIDAsIDAsIDApO1xuICAtd2Via2l0LXRhcC1oaWdobGlnaHQtY29sb3I6IHRyYW5zcGFyZW50O1xuYDtcblxuY29uc3QgYm9hcmRTdHlsZXNPbkNvbE51bSA9IChjb2xOdW06IG51bWJlcikgPT4gY3NzYFxuICBtYXgtd2lkdGg6ICR7cmVtKDgwICogY29sTnVtKX07XG4gIGdyaWQtdGVtcGxhdGUtY29sdW1uczogcmVwZWF0KCR7Y29sTnVtfSwgMWZyKTtcbmA7XG5cbmNvbnN0IGJvYXJkU3R5bGVzT25HYW1lVHlwZTogeyBba2V5IGluIHN0cmluZ106IFNlcmlhbGl6ZWRTdHlsZXMgfSA9IHtcbiAgY29ubmVjdE46IGNzc2BcbiAgICBncmlkLWdhcDogJHtyZW0oMSl9O1xuICAgIGJhY2tncm91bmQtY29sb3I6IGxpZ2h0Z3JheTtcbiAgICBib3JkZXI6ICR7cmVtKDIpfSBzb2xpZCBibGFjaztcbiAgYCxcbiAgdGljVGFjVG9lOiBjc3NgXG4gICAgZ3JpZC1nYXA6ICR7cmVtKDMpfTtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBibGFjaztcbiAgICBib3JkZXI6ICR7cmVtKDMpfSBzb2xpZCB3aGl0ZTtcbiAgYCxcbn07XG5cbmNvbnN0IGNlbGxTdHlsZXMgPSBjc3NgXG4gIGN1cnNvcjogcG9pbnRlcjtcbiAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XG5gO1xuXG5jb25zdCBjZWxsU3R5bGVzT25HYW1lVHlwZTogeyBba2V5IGluIHN0cmluZ106IFNlcmlhbGl6ZWRTdHlsZXMgfSA9IHtcbiAgdGljVGFjVG9lOiBjc3NgXG4gICAgd2lkdGg6IDEwMCU7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgICY6OmJlZm9yZSB7XG4gICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgIGNvbnRlbnQ6ICcnO1xuICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICBwYWRkaW5nLWJvdHRvbTogMTAwJTtcbiAgICB9XG4gIGAsXG59O1xuXG5jb25zdCBjaGVja2VyU3R5bGVzT25HYW1lVHlwZTogeyBba2V5IGluIHN0cmluZ106IFNlcmlhbGl6ZWRTdHlsZXMgfSA9IHtcbiAgY29ubmVjdE46IGNzc2BcbiAgICB3aWR0aDogYXV0bztcbiAgICBwYWRkaW5nLWJvdHRvbTogY2FsYygxMDAlIC0gJHtyZW0oMiAqIDcpfSk7XG4gICAgbWFyZ2luOiAke3JlbSg1KX07XG4gICAgYm9yZGVyLXJhZGl1czogNTAlO1xuICAgIGJvcmRlcjogJHtyZW0oMil9IHNvbGlkIGdyYXk7XG5cbiAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDQwMHB4KSB7XG4gICAgICBwYWRkaW5nLWJvdHRvbTogY2FsYygxMDAlIC0gJHtyZW0oMiAqIDMpfSk7XG4gICAgICBtYXJnaW46ICR7cmVtKDIpfTtcbiAgICAgIGJvcmRlcjogJHtyZW0oMSl9IHNvbGlkIGdyYXk7XG4gICAgfVxuICBgLFxuICB0aWNUYWNUb2U6IGNzc2BcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgbGVmdDogMDtcbiAgICByaWdodDogMDtcbiAgICB0b3A6IDA7XG4gICAgYm90dG9tOiAwO1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuXG4gICAgJiBzdmcge1xuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgbGVmdDogNTAlO1xuICAgICAgdG9wOiA1MCU7XG4gICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNTAlKTtcbiAgICAgIHdpZHRoOiA4MCU7XG4gICAgICBoZWlnaHQ6IDgwJTtcbiAgICB9XG5cbiAgICAvLyAmIHRleHQge1xuICAgIC8vICAgZGlzcGxheTogdGFibGUtY2VsbDtcbiAgICAvLyAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICAvLyAgIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XG4gICAgLy8gfVxuICBgLFxufTtcblxuZXhwb3J0IGNvbnN0IHBsYXllckNoZWNrZXJTdHlsZXNPbkdhbWVUeXBlOiB7IFtrZXkgaW4gc3RyaW5nXTogU2VyaWFsaXplZFN0eWxlc1tdIH0gPSB7XG4gIGNvbm5lY3ROOiBbXG4gICAgY3NzYFxuICAgICAgYm9yZGVyLWNvbG9yOiBncmF5O1xuICAgICAgYmFja2dyb3VuZDogeWVsbG93O1xuICAgIGAsXG4gICAgY3NzYFxuICAgICAgYm9yZGVyLWNvbG9yOiB3aGl0ZTtcbiAgICAgIGJhY2tncm91bmQ6IHJlZDtcblxuICAgICAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA0MDBweCkge1xuICAgICAgICBib3JkZXItY29sb3I6IHdoaXRlO1xuICAgICAgfVxuICAgIGAsXG4gICAgY3NzYFxuICAgICAgYm9yZGVyLWNvbG9yOiBncmF5O1xuICAgICAgYmFja2dyb3VuZDogc2t5Ymx1ZTtcbiAgICBgLFxuICAgIGNzc2BcbiAgICAgIGJvcmRlci1jb2xvcjogZ3JheTtcbiAgICAgIGJhY2tncm91bmQ6IHBpbms7XG4gICAgYCxcbiAgXSxcbiAgdGljVGFjVG9lOiBbXG4gICAgY3NzYFxuICAgICAgJjo6YWZ0ZXIge1xuICAgICAgICBjb250ZW50OiAnTzonO1xuICAgICAgfVxuICAgIGAsXG4gICAgY3NzYFxuICAgICAgJjo6YWZ0ZXIge1xuICAgICAgICBjb250ZW50OiAnWDonO1xuICAgICAgfVxuICAgIGAsXG4gIF0sXG59O1xuXG5jb25zdCBUaWNUYWNUb2VQaWVjZTogRkM8eyB0eXBlPzogJ08nIHwgJ1gnIH0+ID0gKHsgdHlwZSB9KSA9PiAoXG4gIDxzdmcgdmlld0JveD17dHlwZSA9PT0gJ08nID8gJzAgMCAxMSAxMicgOiAnMCAwIDEwIDEyJ30+XG4gICAgPHRleHRcbiAgICAgIHg9e3R5cGUgPT09ICdPJyA/ICcwLjUxJyA6ICcwLjUnfVxuICAgICAgeT17dHlwZSA9PT0gJ08nID8gJzEwLjUnIDogJzEwLjUnfVxuICAgICAgdGV4dEFuY2hvcj1cImNlbnRlclwiXG4gICAgICBmb250V2VpZ2h0PVwiMzAwXCJcbiAgICA+XG4gICAgICB7dHlwZX1cbiAgICA8L3RleHQ+XG4gIDwvc3ZnPlxuKTtcblxuaW50ZXJmYWNlIFByb3BzIHtcbiAgZ2FtZVR5cGU/OiBHYW1lVHlwZTtcbiAgcm93TnVtOiBudW1iZXI7XG4gIGJvYXJkczogbnVtYmVyW11bXTtcbiAgb25DbGlja09uQ2VsbD8oY29sSW5kOiBudW1iZXIsIHJvd0luZDogbnVtYmVyKTogKGU6IFJlYWN0Lk1vdXNlRXZlbnQpID0+IHZvaWQ7XG59XG5cbmNvbnN0IEJvYXJkOiBGQzxQcm9wcz4gPSAoeyBnYW1lVHlwZSA9IEdhbWVUeXBlLmNvbm5lY3ROLCByb3dOdW0sIGJvYXJkcywgb25DbGlja09uQ2VsbCB9KSA9PiB7XG4gIGNvbnN0IGNvbE51bSA9IGJvYXJkc1swXS5sZW5ndGg7XG5cbiAgY29uc3QgY2VsbEdyaWRQb3MgPSB1c2VDYWxsYmFjayhcbiAgICAocm93SW5kOiBudW1iZXIsIGNvbEluZDogbnVtYmVyKSA9PiBjc3NgXG4gICAgICBncmlkLXJvdzogJHtyb3dOdW0gLSByb3dJbmR9IC8gc3BhbiAxO1xuICAgICAgZ3JpZC1jb2x1bW46ICR7Y29sSW5kICsgMX0gLyBzcGFuIDE7XG4gICAgYCxcbiAgICBbcm93TnVtXVxuICApO1xuXG4gIHJldHVybiAoXG4gICAgPGRpdiBjc3M9e1tib2FyZFN0eWxlcywgYm9hcmRTdHlsZXNPbkNvbE51bShjb2xOdW0pLCBib2FyZFN0eWxlc09uR2FtZVR5cGVbZ2FtZVR5cGVdXX0+XG4gICAgICB7Ym9hcmRzWzBdLm1hcCgoX2MsIGNvbEluZCkgPT5cbiAgICAgICAgQXJyYXkuZnJvbShBcnJheShyb3dOdW0pLCAoX3IsIHJvd0luZCkgPT4gKFxuICAgICAgICAgIDxidXR0b25cbiAgICAgICAgICAgIHR5cGU9XCJidXR0b25cIlxuICAgICAgICAgICAgYXJpYS1sYWJlbD1cImJvYXJkXCJcbiAgICAgICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSByZWFjdC9uby1hcnJheS1pbmRleC1rZXlcbiAgICAgICAgICAgIGtleT17YGNlbGwtJHtjb2xJbmR9LSR7cm93SW5kfWB9XG4gICAgICAgICAgICBjc3M9e1tjZWxsU3R5bGVzLCBjZWxsU3R5bGVzT25HYW1lVHlwZVtnYW1lVHlwZV0sIGNlbGxHcmlkUG9zKHJvd0luZCwgY29sSW5kKV19XG4gICAgICAgICAgICBvbkNsaWNrPXtvbkNsaWNrT25DZWxsICYmIG9uQ2xpY2tPbkNlbGwoY29sSW5kLCByb3dJbmQpfVxuICAgICAgICAgID5cbiAgICAgICAgICAgIDxkaXZcbiAgICAgICAgICAgICAgY3NzPXtbXG4gICAgICAgICAgICAgICAgY2hlY2tlclN0eWxlc09uR2FtZVR5cGVbZ2FtZVR5cGVdLFxuICAgICAgICAgICAgICAgIGdhbWVUeXBlID09PSBHYW1lVHlwZS5jb25uZWN0TiAmJlxuICAgICAgICAgICAgICAgICAgYm9hcmRzLnJlZHVjZShcbiAgICAgICAgICAgICAgICAgICAgKHJlc3VsdCwgX24sIGluZCkgPT5cbiAgICAgICAgICAgICAgICAgICAgICAoYm9hcmRzW2luZF1bY29sSW5kXSAmICgxIDw8IHJvd0luZCkgJiZcbiAgICAgICAgICAgICAgICAgICAgICAgIHBsYXllckNoZWNrZXJTdHlsZXNPbkdhbWVUeXBlW2dhbWVUeXBlXVtpbmRdKSB8fFxuICAgICAgICAgICAgICAgICAgICAgIHJlc3VsdCxcbiAgICAgICAgICAgICAgICAgICAgY3NzYGBcbiAgICAgICAgICAgICAgICAgICksXG4gICAgICAgICAgICAgIF19XG4gICAgICAgICAgICA+XG4gICAgICAgICAgICAgIHtnYW1lVHlwZSA9PT0gR2FtZVR5cGUudGljVGFjVG9lICYmXG4gICAgICAgICAgICAgICAgYm9hcmRzLnJlZHVjZShcbiAgICAgICAgICAgICAgICAgIChyZXN1bHQsIF9uLCBpbmQpID0+XG4gICAgICAgICAgICAgICAgICAgIChib2FyZHNbaW5kXVtjb2xJbmRdICYgKDEgPDwgcm93SW5kKSAmJlxuICAgICAgICAgICAgICAgICAgICAgIFs8VGljVGFjVG9lUGllY2UgdHlwZT1cIk9cIiAvPiwgPFRpY1RhY1RvZVBpZWNlIHR5cGU9XCJYXCIgLz5dW2luZF0pIHx8XG4gICAgICAgICAgICAgICAgICAgIHJlc3VsdCxcbiAgICAgICAgICAgICAgICAgIDxUaWNUYWNUb2VQaWVjZSAvPlxuICAgICAgICAgICAgICAgICl9XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICA8L2J1dHRvbj5cbiAgICAgICAgKSlcbiAgICAgICl9XG4gICAgPC9kaXY+XG4gICk7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBCb2FyZDtcbiJdfQ== */"
  }
};
var checkerStylesOnGameType = {
  connectN:
  /*#__PURE__*/
  Object(_emotion_core__WEBPACK_IMPORTED_MODULE_2__["css"])("width:auto;padding-bottom:calc(100% - ", Object(_utils_style_rem__WEBPACK_IMPORTED_MODULE_4__["default"])(2 * 7), ");margin:", Object(_utils_style_rem__WEBPACK_IMPORTED_MODULE_4__["default"])(5), ";border-radius:50%;border:", Object(_utils_style_rem__WEBPACK_IMPORTED_MODULE_4__["default"])(2), " solid gray;@media only screen and (max-width:400px){padding-bottom:calc(100% - ", Object(_utils_style_rem__WEBPACK_IMPORTED_MODULE_4__["default"])(2 * 3), ");margin:", Object(_utils_style_rem__WEBPACK_IMPORTED_MODULE_4__["default"])(2), ";border:", Object(_utils_style_rem__WEBPACK_IMPORTED_MODULE_4__["default"])(1), " solid gray;}label:connectN;" + ( false ? undefined : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9kYXZpZC5jaGVuL0RvY3VtZW50cy9wcm9qZWN0cy9uZXh0OS9zcmMvY29tcG9uZW50cy9Db25uZWN0Ti9Cb2FyZC50c3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBb0RlIiwiZmlsZSI6Ii9Vc2Vycy9kYXZpZC5jaGVuL0RvY3VtZW50cy9wcm9qZWN0cy9uZXh0OS9zcmMvY29tcG9uZW50cy9Db25uZWN0Ti9Cb2FyZC50c3giLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QsIHsgRkMsIHVzZUNhbGxiYWNrIH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgY3NzLCBTZXJpYWxpemVkU3R5bGVzIH0gZnJvbSAnQGVtb3Rpb24vY29yZSc7XG5pbXBvcnQgcmVtIGZyb20gJy4uLy4uL3V0aWxzL3N0eWxlL3JlbSc7XG5pbXBvcnQgeyBHYW1lVHlwZSB9IGZyb20gJy4uLy4uL3V0aWxzL2Nvbm5lY3ROL2Nvbm5lY3ROJztcblxuY29uc3QgYm9hcmRTdHlsZXMgPSBjc3NgXG4gIG1hcmdpbjogJHtyZW0oMjApfSBhdXRvO1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICBkaXNwbGF5OiBncmlkO1xuICBncmlkLWF1dG8tcm93czogYXV0bztcblxuICAtd2Via2l0LXRhcC1oaWdobGlnaHQtY29sb3I6IHJnYmEoMCwgMCwgMCwgMCk7XG4gIC13ZWJraXQtdGFwLWhpZ2hsaWdodC1jb2xvcjogdHJhbnNwYXJlbnQ7XG5gO1xuXG5jb25zdCBib2FyZFN0eWxlc09uQ29sTnVtID0gKGNvbE51bTogbnVtYmVyKSA9PiBjc3NgXG4gIG1heC13aWR0aDogJHtyZW0oODAgKiBjb2xOdW0pfTtcbiAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiByZXBlYXQoJHtjb2xOdW19LCAxZnIpO1xuYDtcblxuY29uc3QgYm9hcmRTdHlsZXNPbkdhbWVUeXBlOiB7IFtrZXkgaW4gc3RyaW5nXTogU2VyaWFsaXplZFN0eWxlcyB9ID0ge1xuICBjb25uZWN0TjogY3NzYFxuICAgIGdyaWQtZ2FwOiAke3JlbSgxKX07XG4gICAgYmFja2dyb3VuZC1jb2xvcjogbGlnaHRncmF5O1xuICAgIGJvcmRlcjogJHtyZW0oMil9IHNvbGlkIGJsYWNrO1xuICBgLFxuICB0aWNUYWNUb2U6IGNzc2BcbiAgICBncmlkLWdhcDogJHtyZW0oMyl9O1xuICAgIGJhY2tncm91bmQtY29sb3I6IGJsYWNrO1xuICAgIGJvcmRlcjogJHtyZW0oMyl9IHNvbGlkIHdoaXRlO1xuICBgLFxufTtcblxuY29uc3QgY2VsbFN0eWxlcyA9IGNzc2BcbiAgY3Vyc29yOiBwb2ludGVyO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcbmA7XG5cbmNvbnN0IGNlbGxTdHlsZXNPbkdhbWVUeXBlOiB7IFtrZXkgaW4gc3RyaW5nXTogU2VyaWFsaXplZFN0eWxlcyB9ID0ge1xuICB0aWNUYWNUb2U6IGNzc2BcbiAgICB3aWR0aDogMTAwJTtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgJjo6YmVmb3JlIHtcbiAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgY29udGVudDogJyc7XG4gICAgICB3aWR0aDogMTAwJTtcbiAgICAgIHBhZGRpbmctYm90dG9tOiAxMDAlO1xuICAgIH1cbiAgYCxcbn07XG5cbmNvbnN0IGNoZWNrZXJTdHlsZXNPbkdhbWVUeXBlOiB7IFtrZXkgaW4gc3RyaW5nXTogU2VyaWFsaXplZFN0eWxlcyB9ID0ge1xuICBjb25uZWN0TjogY3NzYFxuICAgIHdpZHRoOiBhdXRvO1xuICAgIHBhZGRpbmctYm90dG9tOiBjYWxjKDEwMCUgLSAke3JlbSgyICogNyl9KTtcbiAgICBtYXJnaW46ICR7cmVtKDUpfTtcbiAgICBib3JkZXItcmFkaXVzOiA1MCU7XG4gICAgYm9yZGVyOiAke3JlbSgyKX0gc29saWQgZ3JheTtcblxuICAgIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNDAwcHgpIHtcbiAgICAgIHBhZGRpbmctYm90dG9tOiBjYWxjKDEwMCUgLSAke3JlbSgyICogMyl9KTtcbiAgICAgIG1hcmdpbjogJHtyZW0oMil9O1xuICAgICAgYm9yZGVyOiAke3JlbSgxKX0gc29saWQgZ3JheTtcbiAgICB9XG4gIGAsXG4gIHRpY1RhY1RvZTogY3NzYFxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICBsZWZ0OiAwO1xuICAgIHJpZ2h0OiAwO1xuICAgIHRvcDogMDtcbiAgICBib3R0b206IDA7XG4gICAgZGlzcGxheTogYmxvY2s7XG5cbiAgICAmIHN2ZyB7XG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICBsZWZ0OiA1MCU7XG4gICAgICB0b3A6IDUwJTtcbiAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC01MCUpO1xuICAgICAgd2lkdGg6IDgwJTtcbiAgICAgIGhlaWdodDogODAlO1xuICAgIH1cblxuICAgIC8vICYgdGV4dCB7XG4gICAgLy8gICBkaXNwbGF5OiB0YWJsZS1jZWxsO1xuICAgIC8vICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIC8vICAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcbiAgICAvLyB9XG4gIGAsXG59O1xuXG5leHBvcnQgY29uc3QgcGxheWVyQ2hlY2tlclN0eWxlc09uR2FtZVR5cGU6IHsgW2tleSBpbiBzdHJpbmddOiBTZXJpYWxpemVkU3R5bGVzW10gfSA9IHtcbiAgY29ubmVjdE46IFtcbiAgICBjc3NgXG4gICAgICBib3JkZXItY29sb3I6IGdyYXk7XG4gICAgICBiYWNrZ3JvdW5kOiB5ZWxsb3c7XG4gICAgYCxcbiAgICBjc3NgXG4gICAgICBib3JkZXItY29sb3I6IHdoaXRlO1xuICAgICAgYmFja2dyb3VuZDogcmVkO1xuXG4gICAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDQwMHB4KSB7XG4gICAgICAgIGJvcmRlci1jb2xvcjogd2hpdGU7XG4gICAgICB9XG4gICAgYCxcbiAgICBjc3NgXG4gICAgICBib3JkZXItY29sb3I6IGdyYXk7XG4gICAgICBiYWNrZ3JvdW5kOiBza3libHVlO1xuICAgIGAsXG4gICAgY3NzYFxuICAgICAgYm9yZGVyLWNvbG9yOiBncmF5O1xuICAgICAgYmFja2dyb3VuZDogcGluaztcbiAgICBgLFxuICBdLFxuICB0aWNUYWNUb2U6IFtcbiAgICBjc3NgXG4gICAgICAmOjphZnRlciB7XG4gICAgICAgIGNvbnRlbnQ6ICdPOic7XG4gICAgICB9XG4gICAgYCxcbiAgICBjc3NgXG4gICAgICAmOjphZnRlciB7XG4gICAgICAgIGNvbnRlbnQ6ICdYOic7XG4gICAgICB9XG4gICAgYCxcbiAgXSxcbn07XG5cbmNvbnN0IFRpY1RhY1RvZVBpZWNlOiBGQzx7IHR5cGU/OiAnTycgfCAnWCcgfT4gPSAoeyB0eXBlIH0pID0+IChcbiAgPHN2ZyB2aWV3Qm94PXt0eXBlID09PSAnTycgPyAnMCAwIDExIDEyJyA6ICcwIDAgMTAgMTInfT5cbiAgICA8dGV4dFxuICAgICAgeD17dHlwZSA9PT0gJ08nID8gJzAuNTEnIDogJzAuNSd9XG4gICAgICB5PXt0eXBlID09PSAnTycgPyAnMTAuNScgOiAnMTAuNSd9XG4gICAgICB0ZXh0QW5jaG9yPVwiY2VudGVyXCJcbiAgICAgIGZvbnRXZWlnaHQ9XCIzMDBcIlxuICAgID5cbiAgICAgIHt0eXBlfVxuICAgIDwvdGV4dD5cbiAgPC9zdmc+XG4pO1xuXG5pbnRlcmZhY2UgUHJvcHMge1xuICBnYW1lVHlwZT86IEdhbWVUeXBlO1xuICByb3dOdW06IG51bWJlcjtcbiAgYm9hcmRzOiBudW1iZXJbXVtdO1xuICBvbkNsaWNrT25DZWxsPyhjb2xJbmQ6IG51bWJlciwgcm93SW5kOiBudW1iZXIpOiAoZTogUmVhY3QuTW91c2VFdmVudCkgPT4gdm9pZDtcbn1cblxuY29uc3QgQm9hcmQ6IEZDPFByb3BzPiA9ICh7IGdhbWVUeXBlID0gR2FtZVR5cGUuY29ubmVjdE4sIHJvd051bSwgYm9hcmRzLCBvbkNsaWNrT25DZWxsIH0pID0+IHtcbiAgY29uc3QgY29sTnVtID0gYm9hcmRzWzBdLmxlbmd0aDtcblxuICBjb25zdCBjZWxsR3JpZFBvcyA9IHVzZUNhbGxiYWNrKFxuICAgIChyb3dJbmQ6IG51bWJlciwgY29sSW5kOiBudW1iZXIpID0+IGNzc2BcbiAgICAgIGdyaWQtcm93OiAke3Jvd051bSAtIHJvd0luZH0gLyBzcGFuIDE7XG4gICAgICBncmlkLWNvbHVtbjogJHtjb2xJbmQgKyAxfSAvIHNwYW4gMTtcbiAgICBgLFxuICAgIFtyb3dOdW1dXG4gICk7XG5cbiAgcmV0dXJuIChcbiAgICA8ZGl2IGNzcz17W2JvYXJkU3R5bGVzLCBib2FyZFN0eWxlc09uQ29sTnVtKGNvbE51bSksIGJvYXJkU3R5bGVzT25HYW1lVHlwZVtnYW1lVHlwZV1dfT5cbiAgICAgIHtib2FyZHNbMF0ubWFwKChfYywgY29sSW5kKSA9PlxuICAgICAgICBBcnJheS5mcm9tKEFycmF5KHJvd051bSksIChfciwgcm93SW5kKSA9PiAoXG4gICAgICAgICAgPGJ1dHRvblxuICAgICAgICAgICAgdHlwZT1cImJ1dHRvblwiXG4gICAgICAgICAgICBhcmlhLWxhYmVsPVwiYm9hcmRcIlxuICAgICAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIHJlYWN0L25vLWFycmF5LWluZGV4LWtleVxuICAgICAgICAgICAga2V5PXtgY2VsbC0ke2NvbEluZH0tJHtyb3dJbmR9YH1cbiAgICAgICAgICAgIGNzcz17W2NlbGxTdHlsZXMsIGNlbGxTdHlsZXNPbkdhbWVUeXBlW2dhbWVUeXBlXSwgY2VsbEdyaWRQb3Mocm93SW5kLCBjb2xJbmQpXX1cbiAgICAgICAgICAgIG9uQ2xpY2s9e29uQ2xpY2tPbkNlbGwgJiYgb25DbGlja09uQ2VsbChjb2xJbmQsIHJvd0luZCl9XG4gICAgICAgICAgPlxuICAgICAgICAgICAgPGRpdlxuICAgICAgICAgICAgICBjc3M9e1tcbiAgICAgICAgICAgICAgICBjaGVja2VyU3R5bGVzT25HYW1lVHlwZVtnYW1lVHlwZV0sXG4gICAgICAgICAgICAgICAgZ2FtZVR5cGUgPT09IEdhbWVUeXBlLmNvbm5lY3ROICYmXG4gICAgICAgICAgICAgICAgICBib2FyZHMucmVkdWNlKFxuICAgICAgICAgICAgICAgICAgICAocmVzdWx0LCBfbiwgaW5kKSA9PlxuICAgICAgICAgICAgICAgICAgICAgIChib2FyZHNbaW5kXVtjb2xJbmRdICYgKDEgPDwgcm93SW5kKSAmJlxuICAgICAgICAgICAgICAgICAgICAgICAgcGxheWVyQ2hlY2tlclN0eWxlc09uR2FtZVR5cGVbZ2FtZVR5cGVdW2luZF0pIHx8XG4gICAgICAgICAgICAgICAgICAgICAgcmVzdWx0LFxuICAgICAgICAgICAgICAgICAgICBjc3NgYFxuICAgICAgICAgICAgICAgICAgKSxcbiAgICAgICAgICAgICAgXX1cbiAgICAgICAgICAgID5cbiAgICAgICAgICAgICAge2dhbWVUeXBlID09PSBHYW1lVHlwZS50aWNUYWNUb2UgJiZcbiAgICAgICAgICAgICAgICBib2FyZHMucmVkdWNlKFxuICAgICAgICAgICAgICAgICAgKHJlc3VsdCwgX24sIGluZCkgPT5cbiAgICAgICAgICAgICAgICAgICAgKGJvYXJkc1tpbmRdW2NvbEluZF0gJiAoMSA8PCByb3dJbmQpICYmXG4gICAgICAgICAgICAgICAgICAgICAgWzxUaWNUYWNUb2VQaWVjZSB0eXBlPVwiT1wiIC8+LCA8VGljVGFjVG9lUGllY2UgdHlwZT1cIlhcIiAvPl1baW5kXSkgfHxcbiAgICAgICAgICAgICAgICAgICAgcmVzdWx0LFxuICAgICAgICAgICAgICAgICAgPFRpY1RhY1RvZVBpZWNlIC8+XG4gICAgICAgICAgICAgICAgKX1cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgIDwvYnV0dG9uPlxuICAgICAgICApKVxuICAgICAgKX1cbiAgICA8L2Rpdj5cbiAgKTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IEJvYXJkO1xuIl19 */")),
  ticTacToe:  false ? undefined : {
    name: "ms654d-ticTacToe",
    styles: "position:absolute;left:0;right:0;top:0;bottom:0;display:block;& svg{position:absolute;left:50%;top:50%;transform:translate(-50%,-50%);width:80%;height:80%;}label:ticTacToe;",
    map: "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9kYXZpZC5jaGVuL0RvY3VtZW50cy9wcm9qZWN0cy9uZXh0OS9zcmMvY29tcG9uZW50cy9Db25uZWN0Ti9Cb2FyZC50c3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBaUVnQiIsImZpbGUiOiIvVXNlcnMvZGF2aWQuY2hlbi9Eb2N1bWVudHMvcHJvamVjdHMvbmV4dDkvc3JjL2NvbXBvbmVudHMvQ29ubmVjdE4vQm9hcmQudHN4Iiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0LCB7IEZDLCB1c2VDYWxsYmFjayB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IGNzcywgU2VyaWFsaXplZFN0eWxlcyB9IGZyb20gJ0BlbW90aW9uL2NvcmUnO1xuaW1wb3J0IHJlbSBmcm9tICcuLi8uLi91dGlscy9zdHlsZS9yZW0nO1xuaW1wb3J0IHsgR2FtZVR5cGUgfSBmcm9tICcuLi8uLi91dGlscy9jb25uZWN0Ti9jb25uZWN0Tic7XG5cbmNvbnN0IGJvYXJkU3R5bGVzID0gY3NzYFxuICBtYXJnaW46ICR7cmVtKDIwKX0gYXV0bztcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgZGlzcGxheTogZ3JpZDtcbiAgZ3JpZC1hdXRvLXJvd3M6IGF1dG87XG5cbiAgLXdlYmtpdC10YXAtaGlnaGxpZ2h0LWNvbG9yOiByZ2JhKDAsIDAsIDAsIDApO1xuICAtd2Via2l0LXRhcC1oaWdobGlnaHQtY29sb3I6IHRyYW5zcGFyZW50O1xuYDtcblxuY29uc3QgYm9hcmRTdHlsZXNPbkNvbE51bSA9IChjb2xOdW06IG51bWJlcikgPT4gY3NzYFxuICBtYXgtd2lkdGg6ICR7cmVtKDgwICogY29sTnVtKX07XG4gIGdyaWQtdGVtcGxhdGUtY29sdW1uczogcmVwZWF0KCR7Y29sTnVtfSwgMWZyKTtcbmA7XG5cbmNvbnN0IGJvYXJkU3R5bGVzT25HYW1lVHlwZTogeyBba2V5IGluIHN0cmluZ106IFNlcmlhbGl6ZWRTdHlsZXMgfSA9IHtcbiAgY29ubmVjdE46IGNzc2BcbiAgICBncmlkLWdhcDogJHtyZW0oMSl9O1xuICAgIGJhY2tncm91bmQtY29sb3I6IGxpZ2h0Z3JheTtcbiAgICBib3JkZXI6ICR7cmVtKDIpfSBzb2xpZCBibGFjaztcbiAgYCxcbiAgdGljVGFjVG9lOiBjc3NgXG4gICAgZ3JpZC1nYXA6ICR7cmVtKDMpfTtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBibGFjaztcbiAgICBib3JkZXI6ICR7cmVtKDMpfSBzb2xpZCB3aGl0ZTtcbiAgYCxcbn07XG5cbmNvbnN0IGNlbGxTdHlsZXMgPSBjc3NgXG4gIGN1cnNvcjogcG9pbnRlcjtcbiAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XG5gO1xuXG5jb25zdCBjZWxsU3R5bGVzT25HYW1lVHlwZTogeyBba2V5IGluIHN0cmluZ106IFNlcmlhbGl6ZWRTdHlsZXMgfSA9IHtcbiAgdGljVGFjVG9lOiBjc3NgXG4gICAgd2lkdGg6IDEwMCU7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgICY6OmJlZm9yZSB7XG4gICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgIGNvbnRlbnQ6ICcnO1xuICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICBwYWRkaW5nLWJvdHRvbTogMTAwJTtcbiAgICB9XG4gIGAsXG59O1xuXG5jb25zdCBjaGVja2VyU3R5bGVzT25HYW1lVHlwZTogeyBba2V5IGluIHN0cmluZ106IFNlcmlhbGl6ZWRTdHlsZXMgfSA9IHtcbiAgY29ubmVjdE46IGNzc2BcbiAgICB3aWR0aDogYXV0bztcbiAgICBwYWRkaW5nLWJvdHRvbTogY2FsYygxMDAlIC0gJHtyZW0oMiAqIDcpfSk7XG4gICAgbWFyZ2luOiAke3JlbSg1KX07XG4gICAgYm9yZGVyLXJhZGl1czogNTAlO1xuICAgIGJvcmRlcjogJHtyZW0oMil9IHNvbGlkIGdyYXk7XG5cbiAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDQwMHB4KSB7XG4gICAgICBwYWRkaW5nLWJvdHRvbTogY2FsYygxMDAlIC0gJHtyZW0oMiAqIDMpfSk7XG4gICAgICBtYXJnaW46ICR7cmVtKDIpfTtcbiAgICAgIGJvcmRlcjogJHtyZW0oMSl9IHNvbGlkIGdyYXk7XG4gICAgfVxuICBgLFxuICB0aWNUYWNUb2U6IGNzc2BcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgbGVmdDogMDtcbiAgICByaWdodDogMDtcbiAgICB0b3A6IDA7XG4gICAgYm90dG9tOiAwO1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuXG4gICAgJiBzdmcge1xuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgbGVmdDogNTAlO1xuICAgICAgdG9wOiA1MCU7XG4gICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNTAlKTtcbiAgICAgIHdpZHRoOiA4MCU7XG4gICAgICBoZWlnaHQ6IDgwJTtcbiAgICB9XG5cbiAgICAvLyAmIHRleHQge1xuICAgIC8vICAgZGlzcGxheTogdGFibGUtY2VsbDtcbiAgICAvLyAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICAvLyAgIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XG4gICAgLy8gfVxuICBgLFxufTtcblxuZXhwb3J0IGNvbnN0IHBsYXllckNoZWNrZXJTdHlsZXNPbkdhbWVUeXBlOiB7IFtrZXkgaW4gc3RyaW5nXTogU2VyaWFsaXplZFN0eWxlc1tdIH0gPSB7XG4gIGNvbm5lY3ROOiBbXG4gICAgY3NzYFxuICAgICAgYm9yZGVyLWNvbG9yOiBncmF5O1xuICAgICAgYmFja2dyb3VuZDogeWVsbG93O1xuICAgIGAsXG4gICAgY3NzYFxuICAgICAgYm9yZGVyLWNvbG9yOiB3aGl0ZTtcbiAgICAgIGJhY2tncm91bmQ6IHJlZDtcblxuICAgICAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA0MDBweCkge1xuICAgICAgICBib3JkZXItY29sb3I6IHdoaXRlO1xuICAgICAgfVxuICAgIGAsXG4gICAgY3NzYFxuICAgICAgYm9yZGVyLWNvbG9yOiBncmF5O1xuICAgICAgYmFja2dyb3VuZDogc2t5Ymx1ZTtcbiAgICBgLFxuICAgIGNzc2BcbiAgICAgIGJvcmRlci1jb2xvcjogZ3JheTtcbiAgICAgIGJhY2tncm91bmQ6IHBpbms7XG4gICAgYCxcbiAgXSxcbiAgdGljVGFjVG9lOiBbXG4gICAgY3NzYFxuICAgICAgJjo6YWZ0ZXIge1xuICAgICAgICBjb250ZW50OiAnTzonO1xuICAgICAgfVxuICAgIGAsXG4gICAgY3NzYFxuICAgICAgJjo6YWZ0ZXIge1xuICAgICAgICBjb250ZW50OiAnWDonO1xuICAgICAgfVxuICAgIGAsXG4gIF0sXG59O1xuXG5jb25zdCBUaWNUYWNUb2VQaWVjZTogRkM8eyB0eXBlPzogJ08nIHwgJ1gnIH0+ID0gKHsgdHlwZSB9KSA9PiAoXG4gIDxzdmcgdmlld0JveD17dHlwZSA9PT0gJ08nID8gJzAgMCAxMSAxMicgOiAnMCAwIDEwIDEyJ30+XG4gICAgPHRleHRcbiAgICAgIHg9e3R5cGUgPT09ICdPJyA/ICcwLjUxJyA6ICcwLjUnfVxuICAgICAgeT17dHlwZSA9PT0gJ08nID8gJzEwLjUnIDogJzEwLjUnfVxuICAgICAgdGV4dEFuY2hvcj1cImNlbnRlclwiXG4gICAgICBmb250V2VpZ2h0PVwiMzAwXCJcbiAgICA+XG4gICAgICB7dHlwZX1cbiAgICA8L3RleHQ+XG4gIDwvc3ZnPlxuKTtcblxuaW50ZXJmYWNlIFByb3BzIHtcbiAgZ2FtZVR5cGU/OiBHYW1lVHlwZTtcbiAgcm93TnVtOiBudW1iZXI7XG4gIGJvYXJkczogbnVtYmVyW11bXTtcbiAgb25DbGlja09uQ2VsbD8oY29sSW5kOiBudW1iZXIsIHJvd0luZDogbnVtYmVyKTogKGU6IFJlYWN0Lk1vdXNlRXZlbnQpID0+IHZvaWQ7XG59XG5cbmNvbnN0IEJvYXJkOiBGQzxQcm9wcz4gPSAoeyBnYW1lVHlwZSA9IEdhbWVUeXBlLmNvbm5lY3ROLCByb3dOdW0sIGJvYXJkcywgb25DbGlja09uQ2VsbCB9KSA9PiB7XG4gIGNvbnN0IGNvbE51bSA9IGJvYXJkc1swXS5sZW5ndGg7XG5cbiAgY29uc3QgY2VsbEdyaWRQb3MgPSB1c2VDYWxsYmFjayhcbiAgICAocm93SW5kOiBudW1iZXIsIGNvbEluZDogbnVtYmVyKSA9PiBjc3NgXG4gICAgICBncmlkLXJvdzogJHtyb3dOdW0gLSByb3dJbmR9IC8gc3BhbiAxO1xuICAgICAgZ3JpZC1jb2x1bW46ICR7Y29sSW5kICsgMX0gLyBzcGFuIDE7XG4gICAgYCxcbiAgICBbcm93TnVtXVxuICApO1xuXG4gIHJldHVybiAoXG4gICAgPGRpdiBjc3M9e1tib2FyZFN0eWxlcywgYm9hcmRTdHlsZXNPbkNvbE51bShjb2xOdW0pLCBib2FyZFN0eWxlc09uR2FtZVR5cGVbZ2FtZVR5cGVdXX0+XG4gICAgICB7Ym9hcmRzWzBdLm1hcCgoX2MsIGNvbEluZCkgPT5cbiAgICAgICAgQXJyYXkuZnJvbShBcnJheShyb3dOdW0pLCAoX3IsIHJvd0luZCkgPT4gKFxuICAgICAgICAgIDxidXR0b25cbiAgICAgICAgICAgIHR5cGU9XCJidXR0b25cIlxuICAgICAgICAgICAgYXJpYS1sYWJlbD1cImJvYXJkXCJcbiAgICAgICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSByZWFjdC9uby1hcnJheS1pbmRleC1rZXlcbiAgICAgICAgICAgIGtleT17YGNlbGwtJHtjb2xJbmR9LSR7cm93SW5kfWB9XG4gICAgICAgICAgICBjc3M9e1tjZWxsU3R5bGVzLCBjZWxsU3R5bGVzT25HYW1lVHlwZVtnYW1lVHlwZV0sIGNlbGxHcmlkUG9zKHJvd0luZCwgY29sSW5kKV19XG4gICAgICAgICAgICBvbkNsaWNrPXtvbkNsaWNrT25DZWxsICYmIG9uQ2xpY2tPbkNlbGwoY29sSW5kLCByb3dJbmQpfVxuICAgICAgICAgID5cbiAgICAgICAgICAgIDxkaXZcbiAgICAgICAgICAgICAgY3NzPXtbXG4gICAgICAgICAgICAgICAgY2hlY2tlclN0eWxlc09uR2FtZVR5cGVbZ2FtZVR5cGVdLFxuICAgICAgICAgICAgICAgIGdhbWVUeXBlID09PSBHYW1lVHlwZS5jb25uZWN0TiAmJlxuICAgICAgICAgICAgICAgICAgYm9hcmRzLnJlZHVjZShcbiAgICAgICAgICAgICAgICAgICAgKHJlc3VsdCwgX24sIGluZCkgPT5cbiAgICAgICAgICAgICAgICAgICAgICAoYm9hcmRzW2luZF1bY29sSW5kXSAmICgxIDw8IHJvd0luZCkgJiZcbiAgICAgICAgICAgICAgICAgICAgICAgIHBsYXllckNoZWNrZXJTdHlsZXNPbkdhbWVUeXBlW2dhbWVUeXBlXVtpbmRdKSB8fFxuICAgICAgICAgICAgICAgICAgICAgIHJlc3VsdCxcbiAgICAgICAgICAgICAgICAgICAgY3NzYGBcbiAgICAgICAgICAgICAgICAgICksXG4gICAgICAgICAgICAgIF19XG4gICAgICAgICAgICA+XG4gICAgICAgICAgICAgIHtnYW1lVHlwZSA9PT0gR2FtZVR5cGUudGljVGFjVG9lICYmXG4gICAgICAgICAgICAgICAgYm9hcmRzLnJlZHVjZShcbiAgICAgICAgICAgICAgICAgIChyZXN1bHQsIF9uLCBpbmQpID0+XG4gICAgICAgICAgICAgICAgICAgIChib2FyZHNbaW5kXVtjb2xJbmRdICYgKDEgPDwgcm93SW5kKSAmJlxuICAgICAgICAgICAgICAgICAgICAgIFs8VGljVGFjVG9lUGllY2UgdHlwZT1cIk9cIiAvPiwgPFRpY1RhY1RvZVBpZWNlIHR5cGU9XCJYXCIgLz5dW2luZF0pIHx8XG4gICAgICAgICAgICAgICAgICAgIHJlc3VsdCxcbiAgICAgICAgICAgICAgICAgIDxUaWNUYWNUb2VQaWVjZSAvPlxuICAgICAgICAgICAgICAgICl9XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICA8L2J1dHRvbj5cbiAgICAgICAgKSlcbiAgICAgICl9XG4gICAgPC9kaXY+XG4gICk7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBCb2FyZDtcbiJdfQ== */"
  }
};
var playerCheckerStylesOnGameType = {
  connectN: [ false ? undefined : {
    name: "1x31inw-connectN",
    styles: "border-color:gray;background:yellow;label:connectN;",
    map: "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9kYXZpZC5jaGVuL0RvY3VtZW50cy9wcm9qZWN0cy9uZXh0OS9zcmMvY29tcG9uZW50cy9Db25uZWN0Ti9Cb2FyZC50c3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBNEZPIiwiZmlsZSI6Ii9Vc2Vycy9kYXZpZC5jaGVuL0RvY3VtZW50cy9wcm9qZWN0cy9uZXh0OS9zcmMvY29tcG9uZW50cy9Db25uZWN0Ti9Cb2FyZC50c3giLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QsIHsgRkMsIHVzZUNhbGxiYWNrIH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgY3NzLCBTZXJpYWxpemVkU3R5bGVzIH0gZnJvbSAnQGVtb3Rpb24vY29yZSc7XG5pbXBvcnQgcmVtIGZyb20gJy4uLy4uL3V0aWxzL3N0eWxlL3JlbSc7XG5pbXBvcnQgeyBHYW1lVHlwZSB9IGZyb20gJy4uLy4uL3V0aWxzL2Nvbm5lY3ROL2Nvbm5lY3ROJztcblxuY29uc3QgYm9hcmRTdHlsZXMgPSBjc3NgXG4gIG1hcmdpbjogJHtyZW0oMjApfSBhdXRvO1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICBkaXNwbGF5OiBncmlkO1xuICBncmlkLWF1dG8tcm93czogYXV0bztcblxuICAtd2Via2l0LXRhcC1oaWdobGlnaHQtY29sb3I6IHJnYmEoMCwgMCwgMCwgMCk7XG4gIC13ZWJraXQtdGFwLWhpZ2hsaWdodC1jb2xvcjogdHJhbnNwYXJlbnQ7XG5gO1xuXG5jb25zdCBib2FyZFN0eWxlc09uQ29sTnVtID0gKGNvbE51bTogbnVtYmVyKSA9PiBjc3NgXG4gIG1heC13aWR0aDogJHtyZW0oODAgKiBjb2xOdW0pfTtcbiAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiByZXBlYXQoJHtjb2xOdW19LCAxZnIpO1xuYDtcblxuY29uc3QgYm9hcmRTdHlsZXNPbkdhbWVUeXBlOiB7IFtrZXkgaW4gc3RyaW5nXTogU2VyaWFsaXplZFN0eWxlcyB9ID0ge1xuICBjb25uZWN0TjogY3NzYFxuICAgIGdyaWQtZ2FwOiAke3JlbSgxKX07XG4gICAgYmFja2dyb3VuZC1jb2xvcjogbGlnaHRncmF5O1xuICAgIGJvcmRlcjogJHtyZW0oMil9IHNvbGlkIGJsYWNrO1xuICBgLFxuICB0aWNUYWNUb2U6IGNzc2BcbiAgICBncmlkLWdhcDogJHtyZW0oMyl9O1xuICAgIGJhY2tncm91bmQtY29sb3I6IGJsYWNrO1xuICAgIGJvcmRlcjogJHtyZW0oMyl9IHNvbGlkIHdoaXRlO1xuICBgLFxufTtcblxuY29uc3QgY2VsbFN0eWxlcyA9IGNzc2BcbiAgY3Vyc29yOiBwb2ludGVyO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcbmA7XG5cbmNvbnN0IGNlbGxTdHlsZXNPbkdhbWVUeXBlOiB7IFtrZXkgaW4gc3RyaW5nXTogU2VyaWFsaXplZFN0eWxlcyB9ID0ge1xuICB0aWNUYWNUb2U6IGNzc2BcbiAgICB3aWR0aDogMTAwJTtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgJjo6YmVmb3JlIHtcbiAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgY29udGVudDogJyc7XG4gICAgICB3aWR0aDogMTAwJTtcbiAgICAgIHBhZGRpbmctYm90dG9tOiAxMDAlO1xuICAgIH1cbiAgYCxcbn07XG5cbmNvbnN0IGNoZWNrZXJTdHlsZXNPbkdhbWVUeXBlOiB7IFtrZXkgaW4gc3RyaW5nXTogU2VyaWFsaXplZFN0eWxlcyB9ID0ge1xuICBjb25uZWN0TjogY3NzYFxuICAgIHdpZHRoOiBhdXRvO1xuICAgIHBhZGRpbmctYm90dG9tOiBjYWxjKDEwMCUgLSAke3JlbSgyICogNyl9KTtcbiAgICBtYXJnaW46ICR7cmVtKDUpfTtcbiAgICBib3JkZXItcmFkaXVzOiA1MCU7XG4gICAgYm9yZGVyOiAke3JlbSgyKX0gc29saWQgZ3JheTtcblxuICAgIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNDAwcHgpIHtcbiAgICAgIHBhZGRpbmctYm90dG9tOiBjYWxjKDEwMCUgLSAke3JlbSgyICogMyl9KTtcbiAgICAgIG1hcmdpbjogJHtyZW0oMil9O1xuICAgICAgYm9yZGVyOiAke3JlbSgxKX0gc29saWQgZ3JheTtcbiAgICB9XG4gIGAsXG4gIHRpY1RhY1RvZTogY3NzYFxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICBsZWZ0OiAwO1xuICAgIHJpZ2h0OiAwO1xuICAgIHRvcDogMDtcbiAgICBib3R0b206IDA7XG4gICAgZGlzcGxheTogYmxvY2s7XG5cbiAgICAmIHN2ZyB7XG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICBsZWZ0OiA1MCU7XG4gICAgICB0b3A6IDUwJTtcbiAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC01MCUpO1xuICAgICAgd2lkdGg6IDgwJTtcbiAgICAgIGhlaWdodDogODAlO1xuICAgIH1cblxuICAgIC8vICYgdGV4dCB7XG4gICAgLy8gICBkaXNwbGF5OiB0YWJsZS1jZWxsO1xuICAgIC8vICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIC8vICAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcbiAgICAvLyB9XG4gIGAsXG59O1xuXG5leHBvcnQgY29uc3QgcGxheWVyQ2hlY2tlclN0eWxlc09uR2FtZVR5cGU6IHsgW2tleSBpbiBzdHJpbmddOiBTZXJpYWxpemVkU3R5bGVzW10gfSA9IHtcbiAgY29ubmVjdE46IFtcbiAgICBjc3NgXG4gICAgICBib3JkZXItY29sb3I6IGdyYXk7XG4gICAgICBiYWNrZ3JvdW5kOiB5ZWxsb3c7XG4gICAgYCxcbiAgICBjc3NgXG4gICAgICBib3JkZXItY29sb3I6IHdoaXRlO1xuICAgICAgYmFja2dyb3VuZDogcmVkO1xuXG4gICAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDQwMHB4KSB7XG4gICAgICAgIGJvcmRlci1jb2xvcjogd2hpdGU7XG4gICAgICB9XG4gICAgYCxcbiAgICBjc3NgXG4gICAgICBib3JkZXItY29sb3I6IGdyYXk7XG4gICAgICBiYWNrZ3JvdW5kOiBza3libHVlO1xuICAgIGAsXG4gICAgY3NzYFxuICAgICAgYm9yZGVyLWNvbG9yOiBncmF5O1xuICAgICAgYmFja2dyb3VuZDogcGluaztcbiAgICBgLFxuICBdLFxuICB0aWNUYWNUb2U6IFtcbiAgICBjc3NgXG4gICAgICAmOjphZnRlciB7XG4gICAgICAgIGNvbnRlbnQ6ICdPOic7XG4gICAgICB9XG4gICAgYCxcbiAgICBjc3NgXG4gICAgICAmOjphZnRlciB7XG4gICAgICAgIGNvbnRlbnQ6ICdYOic7XG4gICAgICB9XG4gICAgYCxcbiAgXSxcbn07XG5cbmNvbnN0IFRpY1RhY1RvZVBpZWNlOiBGQzx7IHR5cGU/OiAnTycgfCAnWCcgfT4gPSAoeyB0eXBlIH0pID0+IChcbiAgPHN2ZyB2aWV3Qm94PXt0eXBlID09PSAnTycgPyAnMCAwIDExIDEyJyA6ICcwIDAgMTAgMTInfT5cbiAgICA8dGV4dFxuICAgICAgeD17dHlwZSA9PT0gJ08nID8gJzAuNTEnIDogJzAuNSd9XG4gICAgICB5PXt0eXBlID09PSAnTycgPyAnMTAuNScgOiAnMTAuNSd9XG4gICAgICB0ZXh0QW5jaG9yPVwiY2VudGVyXCJcbiAgICAgIGZvbnRXZWlnaHQ9XCIzMDBcIlxuICAgID5cbiAgICAgIHt0eXBlfVxuICAgIDwvdGV4dD5cbiAgPC9zdmc+XG4pO1xuXG5pbnRlcmZhY2UgUHJvcHMge1xuICBnYW1lVHlwZT86IEdhbWVUeXBlO1xuICByb3dOdW06IG51bWJlcjtcbiAgYm9hcmRzOiBudW1iZXJbXVtdO1xuICBvbkNsaWNrT25DZWxsPyhjb2xJbmQ6IG51bWJlciwgcm93SW5kOiBudW1iZXIpOiAoZTogUmVhY3QuTW91c2VFdmVudCkgPT4gdm9pZDtcbn1cblxuY29uc3QgQm9hcmQ6IEZDPFByb3BzPiA9ICh7IGdhbWVUeXBlID0gR2FtZVR5cGUuY29ubmVjdE4sIHJvd051bSwgYm9hcmRzLCBvbkNsaWNrT25DZWxsIH0pID0+IHtcbiAgY29uc3QgY29sTnVtID0gYm9hcmRzWzBdLmxlbmd0aDtcblxuICBjb25zdCBjZWxsR3JpZFBvcyA9IHVzZUNhbGxiYWNrKFxuICAgIChyb3dJbmQ6IG51bWJlciwgY29sSW5kOiBudW1iZXIpID0+IGNzc2BcbiAgICAgIGdyaWQtcm93OiAke3Jvd051bSAtIHJvd0luZH0gLyBzcGFuIDE7XG4gICAgICBncmlkLWNvbHVtbjogJHtjb2xJbmQgKyAxfSAvIHNwYW4gMTtcbiAgICBgLFxuICAgIFtyb3dOdW1dXG4gICk7XG5cbiAgcmV0dXJuIChcbiAgICA8ZGl2IGNzcz17W2JvYXJkU3R5bGVzLCBib2FyZFN0eWxlc09uQ29sTnVtKGNvbE51bSksIGJvYXJkU3R5bGVzT25HYW1lVHlwZVtnYW1lVHlwZV1dfT5cbiAgICAgIHtib2FyZHNbMF0ubWFwKChfYywgY29sSW5kKSA9PlxuICAgICAgICBBcnJheS5mcm9tKEFycmF5KHJvd051bSksIChfciwgcm93SW5kKSA9PiAoXG4gICAgICAgICAgPGJ1dHRvblxuICAgICAgICAgICAgdHlwZT1cImJ1dHRvblwiXG4gICAgICAgICAgICBhcmlhLWxhYmVsPVwiYm9hcmRcIlxuICAgICAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIHJlYWN0L25vLWFycmF5LWluZGV4LWtleVxuICAgICAgICAgICAga2V5PXtgY2VsbC0ke2NvbEluZH0tJHtyb3dJbmR9YH1cbiAgICAgICAgICAgIGNzcz17W2NlbGxTdHlsZXMsIGNlbGxTdHlsZXNPbkdhbWVUeXBlW2dhbWVUeXBlXSwgY2VsbEdyaWRQb3Mocm93SW5kLCBjb2xJbmQpXX1cbiAgICAgICAgICAgIG9uQ2xpY2s9e29uQ2xpY2tPbkNlbGwgJiYgb25DbGlja09uQ2VsbChjb2xJbmQsIHJvd0luZCl9XG4gICAgICAgICAgPlxuICAgICAgICAgICAgPGRpdlxuICAgICAgICAgICAgICBjc3M9e1tcbiAgICAgICAgICAgICAgICBjaGVja2VyU3R5bGVzT25HYW1lVHlwZVtnYW1lVHlwZV0sXG4gICAgICAgICAgICAgICAgZ2FtZVR5cGUgPT09IEdhbWVUeXBlLmNvbm5lY3ROICYmXG4gICAgICAgICAgICAgICAgICBib2FyZHMucmVkdWNlKFxuICAgICAgICAgICAgICAgICAgICAocmVzdWx0LCBfbiwgaW5kKSA9PlxuICAgICAgICAgICAgICAgICAgICAgIChib2FyZHNbaW5kXVtjb2xJbmRdICYgKDEgPDwgcm93SW5kKSAmJlxuICAgICAgICAgICAgICAgICAgICAgICAgcGxheWVyQ2hlY2tlclN0eWxlc09uR2FtZVR5cGVbZ2FtZVR5cGVdW2luZF0pIHx8XG4gICAgICAgICAgICAgICAgICAgICAgcmVzdWx0LFxuICAgICAgICAgICAgICAgICAgICBjc3NgYFxuICAgICAgICAgICAgICAgICAgKSxcbiAgICAgICAgICAgICAgXX1cbiAgICAgICAgICAgID5cbiAgICAgICAgICAgICAge2dhbWVUeXBlID09PSBHYW1lVHlwZS50aWNUYWNUb2UgJiZcbiAgICAgICAgICAgICAgICBib2FyZHMucmVkdWNlKFxuICAgICAgICAgICAgICAgICAgKHJlc3VsdCwgX24sIGluZCkgPT5cbiAgICAgICAgICAgICAgICAgICAgKGJvYXJkc1tpbmRdW2NvbEluZF0gJiAoMSA8PCByb3dJbmQpICYmXG4gICAgICAgICAgICAgICAgICAgICAgWzxUaWNUYWNUb2VQaWVjZSB0eXBlPVwiT1wiIC8+LCA8VGljVGFjVG9lUGllY2UgdHlwZT1cIlhcIiAvPl1baW5kXSkgfHxcbiAgICAgICAgICAgICAgICAgICAgcmVzdWx0LFxuICAgICAgICAgICAgICAgICAgPFRpY1RhY1RvZVBpZWNlIC8+XG4gICAgICAgICAgICAgICAgKX1cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgIDwvYnV0dG9uPlxuICAgICAgICApKVxuICAgICAgKX1cbiAgICA8L2Rpdj5cbiAgKTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IEJvYXJkO1xuIl19 */"
  },  false ? undefined : {
    name: "vngkgx-connectN",
    styles: "border-color:white;background:red;@media only screen and (max-width:400px){border-color:white;}label:connectN;",
    map: "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9kYXZpZC5jaGVuL0RvY3VtZW50cy9wcm9qZWN0cy9uZXh0OS9zcmMvY29tcG9uZW50cy9Db25uZWN0Ti9Cb2FyZC50c3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBZ0dPIiwiZmlsZSI6Ii9Vc2Vycy9kYXZpZC5jaGVuL0RvY3VtZW50cy9wcm9qZWN0cy9uZXh0OS9zcmMvY29tcG9uZW50cy9Db25uZWN0Ti9Cb2FyZC50c3giLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QsIHsgRkMsIHVzZUNhbGxiYWNrIH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgY3NzLCBTZXJpYWxpemVkU3R5bGVzIH0gZnJvbSAnQGVtb3Rpb24vY29yZSc7XG5pbXBvcnQgcmVtIGZyb20gJy4uLy4uL3V0aWxzL3N0eWxlL3JlbSc7XG5pbXBvcnQgeyBHYW1lVHlwZSB9IGZyb20gJy4uLy4uL3V0aWxzL2Nvbm5lY3ROL2Nvbm5lY3ROJztcblxuY29uc3QgYm9hcmRTdHlsZXMgPSBjc3NgXG4gIG1hcmdpbjogJHtyZW0oMjApfSBhdXRvO1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICBkaXNwbGF5OiBncmlkO1xuICBncmlkLWF1dG8tcm93czogYXV0bztcblxuICAtd2Via2l0LXRhcC1oaWdobGlnaHQtY29sb3I6IHJnYmEoMCwgMCwgMCwgMCk7XG4gIC13ZWJraXQtdGFwLWhpZ2hsaWdodC1jb2xvcjogdHJhbnNwYXJlbnQ7XG5gO1xuXG5jb25zdCBib2FyZFN0eWxlc09uQ29sTnVtID0gKGNvbE51bTogbnVtYmVyKSA9PiBjc3NgXG4gIG1heC13aWR0aDogJHtyZW0oODAgKiBjb2xOdW0pfTtcbiAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiByZXBlYXQoJHtjb2xOdW19LCAxZnIpO1xuYDtcblxuY29uc3QgYm9hcmRTdHlsZXNPbkdhbWVUeXBlOiB7IFtrZXkgaW4gc3RyaW5nXTogU2VyaWFsaXplZFN0eWxlcyB9ID0ge1xuICBjb25uZWN0TjogY3NzYFxuICAgIGdyaWQtZ2FwOiAke3JlbSgxKX07XG4gICAgYmFja2dyb3VuZC1jb2xvcjogbGlnaHRncmF5O1xuICAgIGJvcmRlcjogJHtyZW0oMil9IHNvbGlkIGJsYWNrO1xuICBgLFxuICB0aWNUYWNUb2U6IGNzc2BcbiAgICBncmlkLWdhcDogJHtyZW0oMyl9O1xuICAgIGJhY2tncm91bmQtY29sb3I6IGJsYWNrO1xuICAgIGJvcmRlcjogJHtyZW0oMyl9IHNvbGlkIHdoaXRlO1xuICBgLFxufTtcblxuY29uc3QgY2VsbFN0eWxlcyA9IGNzc2BcbiAgY3Vyc29yOiBwb2ludGVyO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcbmA7XG5cbmNvbnN0IGNlbGxTdHlsZXNPbkdhbWVUeXBlOiB7IFtrZXkgaW4gc3RyaW5nXTogU2VyaWFsaXplZFN0eWxlcyB9ID0ge1xuICB0aWNUYWNUb2U6IGNzc2BcbiAgICB3aWR0aDogMTAwJTtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgJjo6YmVmb3JlIHtcbiAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgY29udGVudDogJyc7XG4gICAgICB3aWR0aDogMTAwJTtcbiAgICAgIHBhZGRpbmctYm90dG9tOiAxMDAlO1xuICAgIH1cbiAgYCxcbn07XG5cbmNvbnN0IGNoZWNrZXJTdHlsZXNPbkdhbWVUeXBlOiB7IFtrZXkgaW4gc3RyaW5nXTogU2VyaWFsaXplZFN0eWxlcyB9ID0ge1xuICBjb25uZWN0TjogY3NzYFxuICAgIHdpZHRoOiBhdXRvO1xuICAgIHBhZGRpbmctYm90dG9tOiBjYWxjKDEwMCUgLSAke3JlbSgyICogNyl9KTtcbiAgICBtYXJnaW46ICR7cmVtKDUpfTtcbiAgICBib3JkZXItcmFkaXVzOiA1MCU7XG4gICAgYm9yZGVyOiAke3JlbSgyKX0gc29saWQgZ3JheTtcblxuICAgIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNDAwcHgpIHtcbiAgICAgIHBhZGRpbmctYm90dG9tOiBjYWxjKDEwMCUgLSAke3JlbSgyICogMyl9KTtcbiAgICAgIG1hcmdpbjogJHtyZW0oMil9O1xuICAgICAgYm9yZGVyOiAke3JlbSgxKX0gc29saWQgZ3JheTtcbiAgICB9XG4gIGAsXG4gIHRpY1RhY1RvZTogY3NzYFxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICBsZWZ0OiAwO1xuICAgIHJpZ2h0OiAwO1xuICAgIHRvcDogMDtcbiAgICBib3R0b206IDA7XG4gICAgZGlzcGxheTogYmxvY2s7XG5cbiAgICAmIHN2ZyB7XG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICBsZWZ0OiA1MCU7XG4gICAgICB0b3A6IDUwJTtcbiAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC01MCUpO1xuICAgICAgd2lkdGg6IDgwJTtcbiAgICAgIGhlaWdodDogODAlO1xuICAgIH1cblxuICAgIC8vICYgdGV4dCB7XG4gICAgLy8gICBkaXNwbGF5OiB0YWJsZS1jZWxsO1xuICAgIC8vICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIC8vICAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcbiAgICAvLyB9XG4gIGAsXG59O1xuXG5leHBvcnQgY29uc3QgcGxheWVyQ2hlY2tlclN0eWxlc09uR2FtZVR5cGU6IHsgW2tleSBpbiBzdHJpbmddOiBTZXJpYWxpemVkU3R5bGVzW10gfSA9IHtcbiAgY29ubmVjdE46IFtcbiAgICBjc3NgXG4gICAgICBib3JkZXItY29sb3I6IGdyYXk7XG4gICAgICBiYWNrZ3JvdW5kOiB5ZWxsb3c7XG4gICAgYCxcbiAgICBjc3NgXG4gICAgICBib3JkZXItY29sb3I6IHdoaXRlO1xuICAgICAgYmFja2dyb3VuZDogcmVkO1xuXG4gICAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDQwMHB4KSB7XG4gICAgICAgIGJvcmRlci1jb2xvcjogd2hpdGU7XG4gICAgICB9XG4gICAgYCxcbiAgICBjc3NgXG4gICAgICBib3JkZXItY29sb3I6IGdyYXk7XG4gICAgICBiYWNrZ3JvdW5kOiBza3libHVlO1xuICAgIGAsXG4gICAgY3NzYFxuICAgICAgYm9yZGVyLWNvbG9yOiBncmF5O1xuICAgICAgYmFja2dyb3VuZDogcGluaztcbiAgICBgLFxuICBdLFxuICB0aWNUYWNUb2U6IFtcbiAgICBjc3NgXG4gICAgICAmOjphZnRlciB7XG4gICAgICAgIGNvbnRlbnQ6ICdPOic7XG4gICAgICB9XG4gICAgYCxcbiAgICBjc3NgXG4gICAgICAmOjphZnRlciB7XG4gICAgICAgIGNvbnRlbnQ6ICdYOic7XG4gICAgICB9XG4gICAgYCxcbiAgXSxcbn07XG5cbmNvbnN0IFRpY1RhY1RvZVBpZWNlOiBGQzx7IHR5cGU/OiAnTycgfCAnWCcgfT4gPSAoeyB0eXBlIH0pID0+IChcbiAgPHN2ZyB2aWV3Qm94PXt0eXBlID09PSAnTycgPyAnMCAwIDExIDEyJyA6ICcwIDAgMTAgMTInfT5cbiAgICA8dGV4dFxuICAgICAgeD17dHlwZSA9PT0gJ08nID8gJzAuNTEnIDogJzAuNSd9XG4gICAgICB5PXt0eXBlID09PSAnTycgPyAnMTAuNScgOiAnMTAuNSd9XG4gICAgICB0ZXh0QW5jaG9yPVwiY2VudGVyXCJcbiAgICAgIGZvbnRXZWlnaHQ9XCIzMDBcIlxuICAgID5cbiAgICAgIHt0eXBlfVxuICAgIDwvdGV4dD5cbiAgPC9zdmc+XG4pO1xuXG5pbnRlcmZhY2UgUHJvcHMge1xuICBnYW1lVHlwZT86IEdhbWVUeXBlO1xuICByb3dOdW06IG51bWJlcjtcbiAgYm9hcmRzOiBudW1iZXJbXVtdO1xuICBvbkNsaWNrT25DZWxsPyhjb2xJbmQ6IG51bWJlciwgcm93SW5kOiBudW1iZXIpOiAoZTogUmVhY3QuTW91c2VFdmVudCkgPT4gdm9pZDtcbn1cblxuY29uc3QgQm9hcmQ6IEZDPFByb3BzPiA9ICh7IGdhbWVUeXBlID0gR2FtZVR5cGUuY29ubmVjdE4sIHJvd051bSwgYm9hcmRzLCBvbkNsaWNrT25DZWxsIH0pID0+IHtcbiAgY29uc3QgY29sTnVtID0gYm9hcmRzWzBdLmxlbmd0aDtcblxuICBjb25zdCBjZWxsR3JpZFBvcyA9IHVzZUNhbGxiYWNrKFxuICAgIChyb3dJbmQ6IG51bWJlciwgY29sSW5kOiBudW1iZXIpID0+IGNzc2BcbiAgICAgIGdyaWQtcm93OiAke3Jvd051bSAtIHJvd0luZH0gLyBzcGFuIDE7XG4gICAgICBncmlkLWNvbHVtbjogJHtjb2xJbmQgKyAxfSAvIHNwYW4gMTtcbiAgICBgLFxuICAgIFtyb3dOdW1dXG4gICk7XG5cbiAgcmV0dXJuIChcbiAgICA8ZGl2IGNzcz17W2JvYXJkU3R5bGVzLCBib2FyZFN0eWxlc09uQ29sTnVtKGNvbE51bSksIGJvYXJkU3R5bGVzT25HYW1lVHlwZVtnYW1lVHlwZV1dfT5cbiAgICAgIHtib2FyZHNbMF0ubWFwKChfYywgY29sSW5kKSA9PlxuICAgICAgICBBcnJheS5mcm9tKEFycmF5KHJvd051bSksIChfciwgcm93SW5kKSA9PiAoXG4gICAgICAgICAgPGJ1dHRvblxuICAgICAgICAgICAgdHlwZT1cImJ1dHRvblwiXG4gICAgICAgICAgICBhcmlhLWxhYmVsPVwiYm9hcmRcIlxuICAgICAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIHJlYWN0L25vLWFycmF5LWluZGV4LWtleVxuICAgICAgICAgICAga2V5PXtgY2VsbC0ke2NvbEluZH0tJHtyb3dJbmR9YH1cbiAgICAgICAgICAgIGNzcz17W2NlbGxTdHlsZXMsIGNlbGxTdHlsZXNPbkdhbWVUeXBlW2dhbWVUeXBlXSwgY2VsbEdyaWRQb3Mocm93SW5kLCBjb2xJbmQpXX1cbiAgICAgICAgICAgIG9uQ2xpY2s9e29uQ2xpY2tPbkNlbGwgJiYgb25DbGlja09uQ2VsbChjb2xJbmQsIHJvd0luZCl9XG4gICAgICAgICAgPlxuICAgICAgICAgICAgPGRpdlxuICAgICAgICAgICAgICBjc3M9e1tcbiAgICAgICAgICAgICAgICBjaGVja2VyU3R5bGVzT25HYW1lVHlwZVtnYW1lVHlwZV0sXG4gICAgICAgICAgICAgICAgZ2FtZVR5cGUgPT09IEdhbWVUeXBlLmNvbm5lY3ROICYmXG4gICAgICAgICAgICAgICAgICBib2FyZHMucmVkdWNlKFxuICAgICAgICAgICAgICAgICAgICAocmVzdWx0LCBfbiwgaW5kKSA9PlxuICAgICAgICAgICAgICAgICAgICAgIChib2FyZHNbaW5kXVtjb2xJbmRdICYgKDEgPDwgcm93SW5kKSAmJlxuICAgICAgICAgICAgICAgICAgICAgICAgcGxheWVyQ2hlY2tlclN0eWxlc09uR2FtZVR5cGVbZ2FtZVR5cGVdW2luZF0pIHx8XG4gICAgICAgICAgICAgICAgICAgICAgcmVzdWx0LFxuICAgICAgICAgICAgICAgICAgICBjc3NgYFxuICAgICAgICAgICAgICAgICAgKSxcbiAgICAgICAgICAgICAgXX1cbiAgICAgICAgICAgID5cbiAgICAgICAgICAgICAge2dhbWVUeXBlID09PSBHYW1lVHlwZS50aWNUYWNUb2UgJiZcbiAgICAgICAgICAgICAgICBib2FyZHMucmVkdWNlKFxuICAgICAgICAgICAgICAgICAgKHJlc3VsdCwgX24sIGluZCkgPT5cbiAgICAgICAgICAgICAgICAgICAgKGJvYXJkc1tpbmRdW2NvbEluZF0gJiAoMSA8PCByb3dJbmQpICYmXG4gICAgICAgICAgICAgICAgICAgICAgWzxUaWNUYWNUb2VQaWVjZSB0eXBlPVwiT1wiIC8+LCA8VGljVGFjVG9lUGllY2UgdHlwZT1cIlhcIiAvPl1baW5kXSkgfHxcbiAgICAgICAgICAgICAgICAgICAgcmVzdWx0LFxuICAgICAgICAgICAgICAgICAgPFRpY1RhY1RvZVBpZWNlIC8+XG4gICAgICAgICAgICAgICAgKX1cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgIDwvYnV0dG9uPlxuICAgICAgICApKVxuICAgICAgKX1cbiAgICA8L2Rpdj5cbiAgKTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IEJvYXJkO1xuIl19 */"
  },  false ? undefined : {
    name: "cc3esz-connectN",
    styles: "border-color:gray;background:skyblue;label:connectN;",
    map: "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9kYXZpZC5jaGVuL0RvY3VtZW50cy9wcm9qZWN0cy9uZXh0OS9zcmMvY29tcG9uZW50cy9Db25uZWN0Ti9Cb2FyZC50c3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBd0dPIiwiZmlsZSI6Ii9Vc2Vycy9kYXZpZC5jaGVuL0RvY3VtZW50cy9wcm9qZWN0cy9uZXh0OS9zcmMvY29tcG9uZW50cy9Db25uZWN0Ti9Cb2FyZC50c3giLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QsIHsgRkMsIHVzZUNhbGxiYWNrIH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgY3NzLCBTZXJpYWxpemVkU3R5bGVzIH0gZnJvbSAnQGVtb3Rpb24vY29yZSc7XG5pbXBvcnQgcmVtIGZyb20gJy4uLy4uL3V0aWxzL3N0eWxlL3JlbSc7XG5pbXBvcnQgeyBHYW1lVHlwZSB9IGZyb20gJy4uLy4uL3V0aWxzL2Nvbm5lY3ROL2Nvbm5lY3ROJztcblxuY29uc3QgYm9hcmRTdHlsZXMgPSBjc3NgXG4gIG1hcmdpbjogJHtyZW0oMjApfSBhdXRvO1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICBkaXNwbGF5OiBncmlkO1xuICBncmlkLWF1dG8tcm93czogYXV0bztcblxuICAtd2Via2l0LXRhcC1oaWdobGlnaHQtY29sb3I6IHJnYmEoMCwgMCwgMCwgMCk7XG4gIC13ZWJraXQtdGFwLWhpZ2hsaWdodC1jb2xvcjogdHJhbnNwYXJlbnQ7XG5gO1xuXG5jb25zdCBib2FyZFN0eWxlc09uQ29sTnVtID0gKGNvbE51bTogbnVtYmVyKSA9PiBjc3NgXG4gIG1heC13aWR0aDogJHtyZW0oODAgKiBjb2xOdW0pfTtcbiAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiByZXBlYXQoJHtjb2xOdW19LCAxZnIpO1xuYDtcblxuY29uc3QgYm9hcmRTdHlsZXNPbkdhbWVUeXBlOiB7IFtrZXkgaW4gc3RyaW5nXTogU2VyaWFsaXplZFN0eWxlcyB9ID0ge1xuICBjb25uZWN0TjogY3NzYFxuICAgIGdyaWQtZ2FwOiAke3JlbSgxKX07XG4gICAgYmFja2dyb3VuZC1jb2xvcjogbGlnaHRncmF5O1xuICAgIGJvcmRlcjogJHtyZW0oMil9IHNvbGlkIGJsYWNrO1xuICBgLFxuICB0aWNUYWNUb2U6IGNzc2BcbiAgICBncmlkLWdhcDogJHtyZW0oMyl9O1xuICAgIGJhY2tncm91bmQtY29sb3I6IGJsYWNrO1xuICAgIGJvcmRlcjogJHtyZW0oMyl9IHNvbGlkIHdoaXRlO1xuICBgLFxufTtcblxuY29uc3QgY2VsbFN0eWxlcyA9IGNzc2BcbiAgY3Vyc29yOiBwb2ludGVyO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcbmA7XG5cbmNvbnN0IGNlbGxTdHlsZXNPbkdhbWVUeXBlOiB7IFtrZXkgaW4gc3RyaW5nXTogU2VyaWFsaXplZFN0eWxlcyB9ID0ge1xuICB0aWNUYWNUb2U6IGNzc2BcbiAgICB3aWR0aDogMTAwJTtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgJjo6YmVmb3JlIHtcbiAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgY29udGVudDogJyc7XG4gICAgICB3aWR0aDogMTAwJTtcbiAgICAgIHBhZGRpbmctYm90dG9tOiAxMDAlO1xuICAgIH1cbiAgYCxcbn07XG5cbmNvbnN0IGNoZWNrZXJTdHlsZXNPbkdhbWVUeXBlOiB7IFtrZXkgaW4gc3RyaW5nXTogU2VyaWFsaXplZFN0eWxlcyB9ID0ge1xuICBjb25uZWN0TjogY3NzYFxuICAgIHdpZHRoOiBhdXRvO1xuICAgIHBhZGRpbmctYm90dG9tOiBjYWxjKDEwMCUgLSAke3JlbSgyICogNyl9KTtcbiAgICBtYXJnaW46ICR7cmVtKDUpfTtcbiAgICBib3JkZXItcmFkaXVzOiA1MCU7XG4gICAgYm9yZGVyOiAke3JlbSgyKX0gc29saWQgZ3JheTtcblxuICAgIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNDAwcHgpIHtcbiAgICAgIHBhZGRpbmctYm90dG9tOiBjYWxjKDEwMCUgLSAke3JlbSgyICogMyl9KTtcbiAgICAgIG1hcmdpbjogJHtyZW0oMil9O1xuICAgICAgYm9yZGVyOiAke3JlbSgxKX0gc29saWQgZ3JheTtcbiAgICB9XG4gIGAsXG4gIHRpY1RhY1RvZTogY3NzYFxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICBsZWZ0OiAwO1xuICAgIHJpZ2h0OiAwO1xuICAgIHRvcDogMDtcbiAgICBib3R0b206IDA7XG4gICAgZGlzcGxheTogYmxvY2s7XG5cbiAgICAmIHN2ZyB7XG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICBsZWZ0OiA1MCU7XG4gICAgICB0b3A6IDUwJTtcbiAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC01MCUpO1xuICAgICAgd2lkdGg6IDgwJTtcbiAgICAgIGhlaWdodDogODAlO1xuICAgIH1cblxuICAgIC8vICYgdGV4dCB7XG4gICAgLy8gICBkaXNwbGF5OiB0YWJsZS1jZWxsO1xuICAgIC8vICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIC8vICAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcbiAgICAvLyB9XG4gIGAsXG59O1xuXG5leHBvcnQgY29uc3QgcGxheWVyQ2hlY2tlclN0eWxlc09uR2FtZVR5cGU6IHsgW2tleSBpbiBzdHJpbmddOiBTZXJpYWxpemVkU3R5bGVzW10gfSA9IHtcbiAgY29ubmVjdE46IFtcbiAgICBjc3NgXG4gICAgICBib3JkZXItY29sb3I6IGdyYXk7XG4gICAgICBiYWNrZ3JvdW5kOiB5ZWxsb3c7XG4gICAgYCxcbiAgICBjc3NgXG4gICAgICBib3JkZXItY29sb3I6IHdoaXRlO1xuICAgICAgYmFja2dyb3VuZDogcmVkO1xuXG4gICAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDQwMHB4KSB7XG4gICAgICAgIGJvcmRlci1jb2xvcjogd2hpdGU7XG4gICAgICB9XG4gICAgYCxcbiAgICBjc3NgXG4gICAgICBib3JkZXItY29sb3I6IGdyYXk7XG4gICAgICBiYWNrZ3JvdW5kOiBza3libHVlO1xuICAgIGAsXG4gICAgY3NzYFxuICAgICAgYm9yZGVyLWNvbG9yOiBncmF5O1xuICAgICAgYmFja2dyb3VuZDogcGluaztcbiAgICBgLFxuICBdLFxuICB0aWNUYWNUb2U6IFtcbiAgICBjc3NgXG4gICAgICAmOjphZnRlciB7XG4gICAgICAgIGNvbnRlbnQ6ICdPOic7XG4gICAgICB9XG4gICAgYCxcbiAgICBjc3NgXG4gICAgICAmOjphZnRlciB7XG4gICAgICAgIGNvbnRlbnQ6ICdYOic7XG4gICAgICB9XG4gICAgYCxcbiAgXSxcbn07XG5cbmNvbnN0IFRpY1RhY1RvZVBpZWNlOiBGQzx7IHR5cGU/OiAnTycgfCAnWCcgfT4gPSAoeyB0eXBlIH0pID0+IChcbiAgPHN2ZyB2aWV3Qm94PXt0eXBlID09PSAnTycgPyAnMCAwIDExIDEyJyA6ICcwIDAgMTAgMTInfT5cbiAgICA8dGV4dFxuICAgICAgeD17dHlwZSA9PT0gJ08nID8gJzAuNTEnIDogJzAuNSd9XG4gICAgICB5PXt0eXBlID09PSAnTycgPyAnMTAuNScgOiAnMTAuNSd9XG4gICAgICB0ZXh0QW5jaG9yPVwiY2VudGVyXCJcbiAgICAgIGZvbnRXZWlnaHQ9XCIzMDBcIlxuICAgID5cbiAgICAgIHt0eXBlfVxuICAgIDwvdGV4dD5cbiAgPC9zdmc+XG4pO1xuXG5pbnRlcmZhY2UgUHJvcHMge1xuICBnYW1lVHlwZT86IEdhbWVUeXBlO1xuICByb3dOdW06IG51bWJlcjtcbiAgYm9hcmRzOiBudW1iZXJbXVtdO1xuICBvbkNsaWNrT25DZWxsPyhjb2xJbmQ6IG51bWJlciwgcm93SW5kOiBudW1iZXIpOiAoZTogUmVhY3QuTW91c2VFdmVudCkgPT4gdm9pZDtcbn1cblxuY29uc3QgQm9hcmQ6IEZDPFByb3BzPiA9ICh7IGdhbWVUeXBlID0gR2FtZVR5cGUuY29ubmVjdE4sIHJvd051bSwgYm9hcmRzLCBvbkNsaWNrT25DZWxsIH0pID0+IHtcbiAgY29uc3QgY29sTnVtID0gYm9hcmRzWzBdLmxlbmd0aDtcblxuICBjb25zdCBjZWxsR3JpZFBvcyA9IHVzZUNhbGxiYWNrKFxuICAgIChyb3dJbmQ6IG51bWJlciwgY29sSW5kOiBudW1iZXIpID0+IGNzc2BcbiAgICAgIGdyaWQtcm93OiAke3Jvd051bSAtIHJvd0luZH0gLyBzcGFuIDE7XG4gICAgICBncmlkLWNvbHVtbjogJHtjb2xJbmQgKyAxfSAvIHNwYW4gMTtcbiAgICBgLFxuICAgIFtyb3dOdW1dXG4gICk7XG5cbiAgcmV0dXJuIChcbiAgICA8ZGl2IGNzcz17W2JvYXJkU3R5bGVzLCBib2FyZFN0eWxlc09uQ29sTnVtKGNvbE51bSksIGJvYXJkU3R5bGVzT25HYW1lVHlwZVtnYW1lVHlwZV1dfT5cbiAgICAgIHtib2FyZHNbMF0ubWFwKChfYywgY29sSW5kKSA9PlxuICAgICAgICBBcnJheS5mcm9tKEFycmF5KHJvd051bSksIChfciwgcm93SW5kKSA9PiAoXG4gICAgICAgICAgPGJ1dHRvblxuICAgICAgICAgICAgdHlwZT1cImJ1dHRvblwiXG4gICAgICAgICAgICBhcmlhLWxhYmVsPVwiYm9hcmRcIlxuICAgICAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIHJlYWN0L25vLWFycmF5LWluZGV4LWtleVxuICAgICAgICAgICAga2V5PXtgY2VsbC0ke2NvbEluZH0tJHtyb3dJbmR9YH1cbiAgICAgICAgICAgIGNzcz17W2NlbGxTdHlsZXMsIGNlbGxTdHlsZXNPbkdhbWVUeXBlW2dhbWVUeXBlXSwgY2VsbEdyaWRQb3Mocm93SW5kLCBjb2xJbmQpXX1cbiAgICAgICAgICAgIG9uQ2xpY2s9e29uQ2xpY2tPbkNlbGwgJiYgb25DbGlja09uQ2VsbChjb2xJbmQsIHJvd0luZCl9XG4gICAgICAgICAgPlxuICAgICAgICAgICAgPGRpdlxuICAgICAgICAgICAgICBjc3M9e1tcbiAgICAgICAgICAgICAgICBjaGVja2VyU3R5bGVzT25HYW1lVHlwZVtnYW1lVHlwZV0sXG4gICAgICAgICAgICAgICAgZ2FtZVR5cGUgPT09IEdhbWVUeXBlLmNvbm5lY3ROICYmXG4gICAgICAgICAgICAgICAgICBib2FyZHMucmVkdWNlKFxuICAgICAgICAgICAgICAgICAgICAocmVzdWx0LCBfbiwgaW5kKSA9PlxuICAgICAgICAgICAgICAgICAgICAgIChib2FyZHNbaW5kXVtjb2xJbmRdICYgKDEgPDwgcm93SW5kKSAmJlxuICAgICAgICAgICAgICAgICAgICAgICAgcGxheWVyQ2hlY2tlclN0eWxlc09uR2FtZVR5cGVbZ2FtZVR5cGVdW2luZF0pIHx8XG4gICAgICAgICAgICAgICAgICAgICAgcmVzdWx0LFxuICAgICAgICAgICAgICAgICAgICBjc3NgYFxuICAgICAgICAgICAgICAgICAgKSxcbiAgICAgICAgICAgICAgXX1cbiAgICAgICAgICAgID5cbiAgICAgICAgICAgICAge2dhbWVUeXBlID09PSBHYW1lVHlwZS50aWNUYWNUb2UgJiZcbiAgICAgICAgICAgICAgICBib2FyZHMucmVkdWNlKFxuICAgICAgICAgICAgICAgICAgKHJlc3VsdCwgX24sIGluZCkgPT5cbiAgICAgICAgICAgICAgICAgICAgKGJvYXJkc1tpbmRdW2NvbEluZF0gJiAoMSA8PCByb3dJbmQpICYmXG4gICAgICAgICAgICAgICAgICAgICAgWzxUaWNUYWNUb2VQaWVjZSB0eXBlPVwiT1wiIC8+LCA8VGljVGFjVG9lUGllY2UgdHlwZT1cIlhcIiAvPl1baW5kXSkgfHxcbiAgICAgICAgICAgICAgICAgICAgcmVzdWx0LFxuICAgICAgICAgICAgICAgICAgPFRpY1RhY1RvZVBpZWNlIC8+XG4gICAgICAgICAgICAgICAgKX1cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgIDwvYnV0dG9uPlxuICAgICAgICApKVxuICAgICAgKX1cbiAgICA8L2Rpdj5cbiAgKTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IEJvYXJkO1xuIl19 */"
  },  false ? undefined : {
    name: "1wpwvia-connectN",
    styles: "border-color:gray;background:pink;label:connectN;",
    map: "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9kYXZpZC5jaGVuL0RvY3VtZW50cy9wcm9qZWN0cy9uZXh0OS9zcmMvY29tcG9uZW50cy9Db25uZWN0Ti9Cb2FyZC50c3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBNEdPIiwiZmlsZSI6Ii9Vc2Vycy9kYXZpZC5jaGVuL0RvY3VtZW50cy9wcm9qZWN0cy9uZXh0OS9zcmMvY29tcG9uZW50cy9Db25uZWN0Ti9Cb2FyZC50c3giLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QsIHsgRkMsIHVzZUNhbGxiYWNrIH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgY3NzLCBTZXJpYWxpemVkU3R5bGVzIH0gZnJvbSAnQGVtb3Rpb24vY29yZSc7XG5pbXBvcnQgcmVtIGZyb20gJy4uLy4uL3V0aWxzL3N0eWxlL3JlbSc7XG5pbXBvcnQgeyBHYW1lVHlwZSB9IGZyb20gJy4uLy4uL3V0aWxzL2Nvbm5lY3ROL2Nvbm5lY3ROJztcblxuY29uc3QgYm9hcmRTdHlsZXMgPSBjc3NgXG4gIG1hcmdpbjogJHtyZW0oMjApfSBhdXRvO1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICBkaXNwbGF5OiBncmlkO1xuICBncmlkLWF1dG8tcm93czogYXV0bztcblxuICAtd2Via2l0LXRhcC1oaWdobGlnaHQtY29sb3I6IHJnYmEoMCwgMCwgMCwgMCk7XG4gIC13ZWJraXQtdGFwLWhpZ2hsaWdodC1jb2xvcjogdHJhbnNwYXJlbnQ7XG5gO1xuXG5jb25zdCBib2FyZFN0eWxlc09uQ29sTnVtID0gKGNvbE51bTogbnVtYmVyKSA9PiBjc3NgXG4gIG1heC13aWR0aDogJHtyZW0oODAgKiBjb2xOdW0pfTtcbiAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiByZXBlYXQoJHtjb2xOdW19LCAxZnIpO1xuYDtcblxuY29uc3QgYm9hcmRTdHlsZXNPbkdhbWVUeXBlOiB7IFtrZXkgaW4gc3RyaW5nXTogU2VyaWFsaXplZFN0eWxlcyB9ID0ge1xuICBjb25uZWN0TjogY3NzYFxuICAgIGdyaWQtZ2FwOiAke3JlbSgxKX07XG4gICAgYmFja2dyb3VuZC1jb2xvcjogbGlnaHRncmF5O1xuICAgIGJvcmRlcjogJHtyZW0oMil9IHNvbGlkIGJsYWNrO1xuICBgLFxuICB0aWNUYWNUb2U6IGNzc2BcbiAgICBncmlkLWdhcDogJHtyZW0oMyl9O1xuICAgIGJhY2tncm91bmQtY29sb3I6IGJsYWNrO1xuICAgIGJvcmRlcjogJHtyZW0oMyl9IHNvbGlkIHdoaXRlO1xuICBgLFxufTtcblxuY29uc3QgY2VsbFN0eWxlcyA9IGNzc2BcbiAgY3Vyc29yOiBwb2ludGVyO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcbmA7XG5cbmNvbnN0IGNlbGxTdHlsZXNPbkdhbWVUeXBlOiB7IFtrZXkgaW4gc3RyaW5nXTogU2VyaWFsaXplZFN0eWxlcyB9ID0ge1xuICB0aWNUYWNUb2U6IGNzc2BcbiAgICB3aWR0aDogMTAwJTtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgJjo6YmVmb3JlIHtcbiAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgY29udGVudDogJyc7XG4gICAgICB3aWR0aDogMTAwJTtcbiAgICAgIHBhZGRpbmctYm90dG9tOiAxMDAlO1xuICAgIH1cbiAgYCxcbn07XG5cbmNvbnN0IGNoZWNrZXJTdHlsZXNPbkdhbWVUeXBlOiB7IFtrZXkgaW4gc3RyaW5nXTogU2VyaWFsaXplZFN0eWxlcyB9ID0ge1xuICBjb25uZWN0TjogY3NzYFxuICAgIHdpZHRoOiBhdXRvO1xuICAgIHBhZGRpbmctYm90dG9tOiBjYWxjKDEwMCUgLSAke3JlbSgyICogNyl9KTtcbiAgICBtYXJnaW46ICR7cmVtKDUpfTtcbiAgICBib3JkZXItcmFkaXVzOiA1MCU7XG4gICAgYm9yZGVyOiAke3JlbSgyKX0gc29saWQgZ3JheTtcblxuICAgIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNDAwcHgpIHtcbiAgICAgIHBhZGRpbmctYm90dG9tOiBjYWxjKDEwMCUgLSAke3JlbSgyICogMyl9KTtcbiAgICAgIG1hcmdpbjogJHtyZW0oMil9O1xuICAgICAgYm9yZGVyOiAke3JlbSgxKX0gc29saWQgZ3JheTtcbiAgICB9XG4gIGAsXG4gIHRpY1RhY1RvZTogY3NzYFxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICBsZWZ0OiAwO1xuICAgIHJpZ2h0OiAwO1xuICAgIHRvcDogMDtcbiAgICBib3R0b206IDA7XG4gICAgZGlzcGxheTogYmxvY2s7XG5cbiAgICAmIHN2ZyB7XG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICBsZWZ0OiA1MCU7XG4gICAgICB0b3A6IDUwJTtcbiAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC01MCUpO1xuICAgICAgd2lkdGg6IDgwJTtcbiAgICAgIGhlaWdodDogODAlO1xuICAgIH1cblxuICAgIC8vICYgdGV4dCB7XG4gICAgLy8gICBkaXNwbGF5OiB0YWJsZS1jZWxsO1xuICAgIC8vICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIC8vICAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcbiAgICAvLyB9XG4gIGAsXG59O1xuXG5leHBvcnQgY29uc3QgcGxheWVyQ2hlY2tlclN0eWxlc09uR2FtZVR5cGU6IHsgW2tleSBpbiBzdHJpbmddOiBTZXJpYWxpemVkU3R5bGVzW10gfSA9IHtcbiAgY29ubmVjdE46IFtcbiAgICBjc3NgXG4gICAgICBib3JkZXItY29sb3I6IGdyYXk7XG4gICAgICBiYWNrZ3JvdW5kOiB5ZWxsb3c7XG4gICAgYCxcbiAgICBjc3NgXG4gICAgICBib3JkZXItY29sb3I6IHdoaXRlO1xuICAgICAgYmFja2dyb3VuZDogcmVkO1xuXG4gICAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDQwMHB4KSB7XG4gICAgICAgIGJvcmRlci1jb2xvcjogd2hpdGU7XG4gICAgICB9XG4gICAgYCxcbiAgICBjc3NgXG4gICAgICBib3JkZXItY29sb3I6IGdyYXk7XG4gICAgICBiYWNrZ3JvdW5kOiBza3libHVlO1xuICAgIGAsXG4gICAgY3NzYFxuICAgICAgYm9yZGVyLWNvbG9yOiBncmF5O1xuICAgICAgYmFja2dyb3VuZDogcGluaztcbiAgICBgLFxuICBdLFxuICB0aWNUYWNUb2U6IFtcbiAgICBjc3NgXG4gICAgICAmOjphZnRlciB7XG4gICAgICAgIGNvbnRlbnQ6ICdPOic7XG4gICAgICB9XG4gICAgYCxcbiAgICBjc3NgXG4gICAgICAmOjphZnRlciB7XG4gICAgICAgIGNvbnRlbnQ6ICdYOic7XG4gICAgICB9XG4gICAgYCxcbiAgXSxcbn07XG5cbmNvbnN0IFRpY1RhY1RvZVBpZWNlOiBGQzx7IHR5cGU/OiAnTycgfCAnWCcgfT4gPSAoeyB0eXBlIH0pID0+IChcbiAgPHN2ZyB2aWV3Qm94PXt0eXBlID09PSAnTycgPyAnMCAwIDExIDEyJyA6ICcwIDAgMTAgMTInfT5cbiAgICA8dGV4dFxuICAgICAgeD17dHlwZSA9PT0gJ08nID8gJzAuNTEnIDogJzAuNSd9XG4gICAgICB5PXt0eXBlID09PSAnTycgPyAnMTAuNScgOiAnMTAuNSd9XG4gICAgICB0ZXh0QW5jaG9yPVwiY2VudGVyXCJcbiAgICAgIGZvbnRXZWlnaHQ9XCIzMDBcIlxuICAgID5cbiAgICAgIHt0eXBlfVxuICAgIDwvdGV4dD5cbiAgPC9zdmc+XG4pO1xuXG5pbnRlcmZhY2UgUHJvcHMge1xuICBnYW1lVHlwZT86IEdhbWVUeXBlO1xuICByb3dOdW06IG51bWJlcjtcbiAgYm9hcmRzOiBudW1iZXJbXVtdO1xuICBvbkNsaWNrT25DZWxsPyhjb2xJbmQ6IG51bWJlciwgcm93SW5kOiBudW1iZXIpOiAoZTogUmVhY3QuTW91c2VFdmVudCkgPT4gdm9pZDtcbn1cblxuY29uc3QgQm9hcmQ6IEZDPFByb3BzPiA9ICh7IGdhbWVUeXBlID0gR2FtZVR5cGUuY29ubmVjdE4sIHJvd051bSwgYm9hcmRzLCBvbkNsaWNrT25DZWxsIH0pID0+IHtcbiAgY29uc3QgY29sTnVtID0gYm9hcmRzWzBdLmxlbmd0aDtcblxuICBjb25zdCBjZWxsR3JpZFBvcyA9IHVzZUNhbGxiYWNrKFxuICAgIChyb3dJbmQ6IG51bWJlciwgY29sSW5kOiBudW1iZXIpID0+IGNzc2BcbiAgICAgIGdyaWQtcm93OiAke3Jvd051bSAtIHJvd0luZH0gLyBzcGFuIDE7XG4gICAgICBncmlkLWNvbHVtbjogJHtjb2xJbmQgKyAxfSAvIHNwYW4gMTtcbiAgICBgLFxuICAgIFtyb3dOdW1dXG4gICk7XG5cbiAgcmV0dXJuIChcbiAgICA8ZGl2IGNzcz17W2JvYXJkU3R5bGVzLCBib2FyZFN0eWxlc09uQ29sTnVtKGNvbE51bSksIGJvYXJkU3R5bGVzT25HYW1lVHlwZVtnYW1lVHlwZV1dfT5cbiAgICAgIHtib2FyZHNbMF0ubWFwKChfYywgY29sSW5kKSA9PlxuICAgICAgICBBcnJheS5mcm9tKEFycmF5KHJvd051bSksIChfciwgcm93SW5kKSA9PiAoXG4gICAgICAgICAgPGJ1dHRvblxuICAgICAgICAgICAgdHlwZT1cImJ1dHRvblwiXG4gICAgICAgICAgICBhcmlhLWxhYmVsPVwiYm9hcmRcIlxuICAgICAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIHJlYWN0L25vLWFycmF5LWluZGV4LWtleVxuICAgICAgICAgICAga2V5PXtgY2VsbC0ke2NvbEluZH0tJHtyb3dJbmR9YH1cbiAgICAgICAgICAgIGNzcz17W2NlbGxTdHlsZXMsIGNlbGxTdHlsZXNPbkdhbWVUeXBlW2dhbWVUeXBlXSwgY2VsbEdyaWRQb3Mocm93SW5kLCBjb2xJbmQpXX1cbiAgICAgICAgICAgIG9uQ2xpY2s9e29uQ2xpY2tPbkNlbGwgJiYgb25DbGlja09uQ2VsbChjb2xJbmQsIHJvd0luZCl9XG4gICAgICAgICAgPlxuICAgICAgICAgICAgPGRpdlxuICAgICAgICAgICAgICBjc3M9e1tcbiAgICAgICAgICAgICAgICBjaGVja2VyU3R5bGVzT25HYW1lVHlwZVtnYW1lVHlwZV0sXG4gICAgICAgICAgICAgICAgZ2FtZVR5cGUgPT09IEdhbWVUeXBlLmNvbm5lY3ROICYmXG4gICAgICAgICAgICAgICAgICBib2FyZHMucmVkdWNlKFxuICAgICAgICAgICAgICAgICAgICAocmVzdWx0LCBfbiwgaW5kKSA9PlxuICAgICAgICAgICAgICAgICAgICAgIChib2FyZHNbaW5kXVtjb2xJbmRdICYgKDEgPDwgcm93SW5kKSAmJlxuICAgICAgICAgICAgICAgICAgICAgICAgcGxheWVyQ2hlY2tlclN0eWxlc09uR2FtZVR5cGVbZ2FtZVR5cGVdW2luZF0pIHx8XG4gICAgICAgICAgICAgICAgICAgICAgcmVzdWx0LFxuICAgICAgICAgICAgICAgICAgICBjc3NgYFxuICAgICAgICAgICAgICAgICAgKSxcbiAgICAgICAgICAgICAgXX1cbiAgICAgICAgICAgID5cbiAgICAgICAgICAgICAge2dhbWVUeXBlID09PSBHYW1lVHlwZS50aWNUYWNUb2UgJiZcbiAgICAgICAgICAgICAgICBib2FyZHMucmVkdWNlKFxuICAgICAgICAgICAgICAgICAgKHJlc3VsdCwgX24sIGluZCkgPT5cbiAgICAgICAgICAgICAgICAgICAgKGJvYXJkc1tpbmRdW2NvbEluZF0gJiAoMSA8PCByb3dJbmQpICYmXG4gICAgICAgICAgICAgICAgICAgICAgWzxUaWNUYWNUb2VQaWVjZSB0eXBlPVwiT1wiIC8+LCA8VGljVGFjVG9lUGllY2UgdHlwZT1cIlhcIiAvPl1baW5kXSkgfHxcbiAgICAgICAgICAgICAgICAgICAgcmVzdWx0LFxuICAgICAgICAgICAgICAgICAgPFRpY1RhY1RvZVBpZWNlIC8+XG4gICAgICAgICAgICAgICAgKX1cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgIDwvYnV0dG9uPlxuICAgICAgICApKVxuICAgICAgKX1cbiAgICA8L2Rpdj5cbiAgKTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IEJvYXJkO1xuIl19 */"
  }],
  ticTacToe: [ false ? undefined : {
    name: "tie480-ticTacToe",
    styles: "&::after{content:'O:';}label:ticTacToe;",
    map: "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9kYXZpZC5jaGVuL0RvY3VtZW50cy9wcm9qZWN0cy9uZXh0OS9zcmMvY29tcG9uZW50cy9Db25uZWN0Ti9Cb2FyZC50c3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBa0hPIiwiZmlsZSI6Ii9Vc2Vycy9kYXZpZC5jaGVuL0RvY3VtZW50cy9wcm9qZWN0cy9uZXh0OS9zcmMvY29tcG9uZW50cy9Db25uZWN0Ti9Cb2FyZC50c3giLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QsIHsgRkMsIHVzZUNhbGxiYWNrIH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgY3NzLCBTZXJpYWxpemVkU3R5bGVzIH0gZnJvbSAnQGVtb3Rpb24vY29yZSc7XG5pbXBvcnQgcmVtIGZyb20gJy4uLy4uL3V0aWxzL3N0eWxlL3JlbSc7XG5pbXBvcnQgeyBHYW1lVHlwZSB9IGZyb20gJy4uLy4uL3V0aWxzL2Nvbm5lY3ROL2Nvbm5lY3ROJztcblxuY29uc3QgYm9hcmRTdHlsZXMgPSBjc3NgXG4gIG1hcmdpbjogJHtyZW0oMjApfSBhdXRvO1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICBkaXNwbGF5OiBncmlkO1xuICBncmlkLWF1dG8tcm93czogYXV0bztcblxuICAtd2Via2l0LXRhcC1oaWdobGlnaHQtY29sb3I6IHJnYmEoMCwgMCwgMCwgMCk7XG4gIC13ZWJraXQtdGFwLWhpZ2hsaWdodC1jb2xvcjogdHJhbnNwYXJlbnQ7XG5gO1xuXG5jb25zdCBib2FyZFN0eWxlc09uQ29sTnVtID0gKGNvbE51bTogbnVtYmVyKSA9PiBjc3NgXG4gIG1heC13aWR0aDogJHtyZW0oODAgKiBjb2xOdW0pfTtcbiAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiByZXBlYXQoJHtjb2xOdW19LCAxZnIpO1xuYDtcblxuY29uc3QgYm9hcmRTdHlsZXNPbkdhbWVUeXBlOiB7IFtrZXkgaW4gc3RyaW5nXTogU2VyaWFsaXplZFN0eWxlcyB9ID0ge1xuICBjb25uZWN0TjogY3NzYFxuICAgIGdyaWQtZ2FwOiAke3JlbSgxKX07XG4gICAgYmFja2dyb3VuZC1jb2xvcjogbGlnaHRncmF5O1xuICAgIGJvcmRlcjogJHtyZW0oMil9IHNvbGlkIGJsYWNrO1xuICBgLFxuICB0aWNUYWNUb2U6IGNzc2BcbiAgICBncmlkLWdhcDogJHtyZW0oMyl9O1xuICAgIGJhY2tncm91bmQtY29sb3I6IGJsYWNrO1xuICAgIGJvcmRlcjogJHtyZW0oMyl9IHNvbGlkIHdoaXRlO1xuICBgLFxufTtcblxuY29uc3QgY2VsbFN0eWxlcyA9IGNzc2BcbiAgY3Vyc29yOiBwb2ludGVyO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcbmA7XG5cbmNvbnN0IGNlbGxTdHlsZXNPbkdhbWVUeXBlOiB7IFtrZXkgaW4gc3RyaW5nXTogU2VyaWFsaXplZFN0eWxlcyB9ID0ge1xuICB0aWNUYWNUb2U6IGNzc2BcbiAgICB3aWR0aDogMTAwJTtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgJjo6YmVmb3JlIHtcbiAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgY29udGVudDogJyc7XG4gICAgICB3aWR0aDogMTAwJTtcbiAgICAgIHBhZGRpbmctYm90dG9tOiAxMDAlO1xuICAgIH1cbiAgYCxcbn07XG5cbmNvbnN0IGNoZWNrZXJTdHlsZXNPbkdhbWVUeXBlOiB7IFtrZXkgaW4gc3RyaW5nXTogU2VyaWFsaXplZFN0eWxlcyB9ID0ge1xuICBjb25uZWN0TjogY3NzYFxuICAgIHdpZHRoOiBhdXRvO1xuICAgIHBhZGRpbmctYm90dG9tOiBjYWxjKDEwMCUgLSAke3JlbSgyICogNyl9KTtcbiAgICBtYXJnaW46ICR7cmVtKDUpfTtcbiAgICBib3JkZXItcmFkaXVzOiA1MCU7XG4gICAgYm9yZGVyOiAke3JlbSgyKX0gc29saWQgZ3JheTtcblxuICAgIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNDAwcHgpIHtcbiAgICAgIHBhZGRpbmctYm90dG9tOiBjYWxjKDEwMCUgLSAke3JlbSgyICogMyl9KTtcbiAgICAgIG1hcmdpbjogJHtyZW0oMil9O1xuICAgICAgYm9yZGVyOiAke3JlbSgxKX0gc29saWQgZ3JheTtcbiAgICB9XG4gIGAsXG4gIHRpY1RhY1RvZTogY3NzYFxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICBsZWZ0OiAwO1xuICAgIHJpZ2h0OiAwO1xuICAgIHRvcDogMDtcbiAgICBib3R0b206IDA7XG4gICAgZGlzcGxheTogYmxvY2s7XG5cbiAgICAmIHN2ZyB7XG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICBsZWZ0OiA1MCU7XG4gICAgICB0b3A6IDUwJTtcbiAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC01MCUpO1xuICAgICAgd2lkdGg6IDgwJTtcbiAgICAgIGhlaWdodDogODAlO1xuICAgIH1cblxuICAgIC8vICYgdGV4dCB7XG4gICAgLy8gICBkaXNwbGF5OiB0YWJsZS1jZWxsO1xuICAgIC8vICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIC8vICAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcbiAgICAvLyB9XG4gIGAsXG59O1xuXG5leHBvcnQgY29uc3QgcGxheWVyQ2hlY2tlclN0eWxlc09uR2FtZVR5cGU6IHsgW2tleSBpbiBzdHJpbmddOiBTZXJpYWxpemVkU3R5bGVzW10gfSA9IHtcbiAgY29ubmVjdE46IFtcbiAgICBjc3NgXG4gICAgICBib3JkZXItY29sb3I6IGdyYXk7XG4gICAgICBiYWNrZ3JvdW5kOiB5ZWxsb3c7XG4gICAgYCxcbiAgICBjc3NgXG4gICAgICBib3JkZXItY29sb3I6IHdoaXRlO1xuICAgICAgYmFja2dyb3VuZDogcmVkO1xuXG4gICAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDQwMHB4KSB7XG4gICAgICAgIGJvcmRlci1jb2xvcjogd2hpdGU7XG4gICAgICB9XG4gICAgYCxcbiAgICBjc3NgXG4gICAgICBib3JkZXItY29sb3I6IGdyYXk7XG4gICAgICBiYWNrZ3JvdW5kOiBza3libHVlO1xuICAgIGAsXG4gICAgY3NzYFxuICAgICAgYm9yZGVyLWNvbG9yOiBncmF5O1xuICAgICAgYmFja2dyb3VuZDogcGluaztcbiAgICBgLFxuICBdLFxuICB0aWNUYWNUb2U6IFtcbiAgICBjc3NgXG4gICAgICAmOjphZnRlciB7XG4gICAgICAgIGNvbnRlbnQ6ICdPOic7XG4gICAgICB9XG4gICAgYCxcbiAgICBjc3NgXG4gICAgICAmOjphZnRlciB7XG4gICAgICAgIGNvbnRlbnQ6ICdYOic7XG4gICAgICB9XG4gICAgYCxcbiAgXSxcbn07XG5cbmNvbnN0IFRpY1RhY1RvZVBpZWNlOiBGQzx7IHR5cGU/OiAnTycgfCAnWCcgfT4gPSAoeyB0eXBlIH0pID0+IChcbiAgPHN2ZyB2aWV3Qm94PXt0eXBlID09PSAnTycgPyAnMCAwIDExIDEyJyA6ICcwIDAgMTAgMTInfT5cbiAgICA8dGV4dFxuICAgICAgeD17dHlwZSA9PT0gJ08nID8gJzAuNTEnIDogJzAuNSd9XG4gICAgICB5PXt0eXBlID09PSAnTycgPyAnMTAuNScgOiAnMTAuNSd9XG4gICAgICB0ZXh0QW5jaG9yPVwiY2VudGVyXCJcbiAgICAgIGZvbnRXZWlnaHQ9XCIzMDBcIlxuICAgID5cbiAgICAgIHt0eXBlfVxuICAgIDwvdGV4dD5cbiAgPC9zdmc+XG4pO1xuXG5pbnRlcmZhY2UgUHJvcHMge1xuICBnYW1lVHlwZT86IEdhbWVUeXBlO1xuICByb3dOdW06IG51bWJlcjtcbiAgYm9hcmRzOiBudW1iZXJbXVtdO1xuICBvbkNsaWNrT25DZWxsPyhjb2xJbmQ6IG51bWJlciwgcm93SW5kOiBudW1iZXIpOiAoZTogUmVhY3QuTW91c2VFdmVudCkgPT4gdm9pZDtcbn1cblxuY29uc3QgQm9hcmQ6IEZDPFByb3BzPiA9ICh7IGdhbWVUeXBlID0gR2FtZVR5cGUuY29ubmVjdE4sIHJvd051bSwgYm9hcmRzLCBvbkNsaWNrT25DZWxsIH0pID0+IHtcbiAgY29uc3QgY29sTnVtID0gYm9hcmRzWzBdLmxlbmd0aDtcblxuICBjb25zdCBjZWxsR3JpZFBvcyA9IHVzZUNhbGxiYWNrKFxuICAgIChyb3dJbmQ6IG51bWJlciwgY29sSW5kOiBudW1iZXIpID0+IGNzc2BcbiAgICAgIGdyaWQtcm93OiAke3Jvd051bSAtIHJvd0luZH0gLyBzcGFuIDE7XG4gICAgICBncmlkLWNvbHVtbjogJHtjb2xJbmQgKyAxfSAvIHNwYW4gMTtcbiAgICBgLFxuICAgIFtyb3dOdW1dXG4gICk7XG5cbiAgcmV0dXJuIChcbiAgICA8ZGl2IGNzcz17W2JvYXJkU3R5bGVzLCBib2FyZFN0eWxlc09uQ29sTnVtKGNvbE51bSksIGJvYXJkU3R5bGVzT25HYW1lVHlwZVtnYW1lVHlwZV1dfT5cbiAgICAgIHtib2FyZHNbMF0ubWFwKChfYywgY29sSW5kKSA9PlxuICAgICAgICBBcnJheS5mcm9tKEFycmF5KHJvd051bSksIChfciwgcm93SW5kKSA9PiAoXG4gICAgICAgICAgPGJ1dHRvblxuICAgICAgICAgICAgdHlwZT1cImJ1dHRvblwiXG4gICAgICAgICAgICBhcmlhLWxhYmVsPVwiYm9hcmRcIlxuICAgICAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIHJlYWN0L25vLWFycmF5LWluZGV4LWtleVxuICAgICAgICAgICAga2V5PXtgY2VsbC0ke2NvbEluZH0tJHtyb3dJbmR9YH1cbiAgICAgICAgICAgIGNzcz17W2NlbGxTdHlsZXMsIGNlbGxTdHlsZXNPbkdhbWVUeXBlW2dhbWVUeXBlXSwgY2VsbEdyaWRQb3Mocm93SW5kLCBjb2xJbmQpXX1cbiAgICAgICAgICAgIG9uQ2xpY2s9e29uQ2xpY2tPbkNlbGwgJiYgb25DbGlja09uQ2VsbChjb2xJbmQsIHJvd0luZCl9XG4gICAgICAgICAgPlxuICAgICAgICAgICAgPGRpdlxuICAgICAgICAgICAgICBjc3M9e1tcbiAgICAgICAgICAgICAgICBjaGVja2VyU3R5bGVzT25HYW1lVHlwZVtnYW1lVHlwZV0sXG4gICAgICAgICAgICAgICAgZ2FtZVR5cGUgPT09IEdhbWVUeXBlLmNvbm5lY3ROICYmXG4gICAgICAgICAgICAgICAgICBib2FyZHMucmVkdWNlKFxuICAgICAgICAgICAgICAgICAgICAocmVzdWx0LCBfbiwgaW5kKSA9PlxuICAgICAgICAgICAgICAgICAgICAgIChib2FyZHNbaW5kXVtjb2xJbmRdICYgKDEgPDwgcm93SW5kKSAmJlxuICAgICAgICAgICAgICAgICAgICAgICAgcGxheWVyQ2hlY2tlclN0eWxlc09uR2FtZVR5cGVbZ2FtZVR5cGVdW2luZF0pIHx8XG4gICAgICAgICAgICAgICAgICAgICAgcmVzdWx0LFxuICAgICAgICAgICAgICAgICAgICBjc3NgYFxuICAgICAgICAgICAgICAgICAgKSxcbiAgICAgICAgICAgICAgXX1cbiAgICAgICAgICAgID5cbiAgICAgICAgICAgICAge2dhbWVUeXBlID09PSBHYW1lVHlwZS50aWNUYWNUb2UgJiZcbiAgICAgICAgICAgICAgICBib2FyZHMucmVkdWNlKFxuICAgICAgICAgICAgICAgICAgKHJlc3VsdCwgX24sIGluZCkgPT5cbiAgICAgICAgICAgICAgICAgICAgKGJvYXJkc1tpbmRdW2NvbEluZF0gJiAoMSA8PCByb3dJbmQpICYmXG4gICAgICAgICAgICAgICAgICAgICAgWzxUaWNUYWNUb2VQaWVjZSB0eXBlPVwiT1wiIC8+LCA8VGljVGFjVG9lUGllY2UgdHlwZT1cIlhcIiAvPl1baW5kXSkgfHxcbiAgICAgICAgICAgICAgICAgICAgcmVzdWx0LFxuICAgICAgICAgICAgICAgICAgPFRpY1RhY1RvZVBpZWNlIC8+XG4gICAgICAgICAgICAgICAgKX1cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgIDwvYnV0dG9uPlxuICAgICAgICApKVxuICAgICAgKX1cbiAgICA8L2Rpdj5cbiAgKTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IEJvYXJkO1xuIl19 */"
  },  false ? undefined : {
    name: "v6ng34-ticTacToe",
    styles: "&::after{content:'X:';}label:ticTacToe;",
    map: "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9kYXZpZC5jaGVuL0RvY3VtZW50cy9wcm9qZWN0cy9uZXh0OS9zcmMvY29tcG9uZW50cy9Db25uZWN0Ti9Cb2FyZC50c3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBdUhPIiwiZmlsZSI6Ii9Vc2Vycy9kYXZpZC5jaGVuL0RvY3VtZW50cy9wcm9qZWN0cy9uZXh0OS9zcmMvY29tcG9uZW50cy9Db25uZWN0Ti9Cb2FyZC50c3giLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QsIHsgRkMsIHVzZUNhbGxiYWNrIH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgY3NzLCBTZXJpYWxpemVkU3R5bGVzIH0gZnJvbSAnQGVtb3Rpb24vY29yZSc7XG5pbXBvcnQgcmVtIGZyb20gJy4uLy4uL3V0aWxzL3N0eWxlL3JlbSc7XG5pbXBvcnQgeyBHYW1lVHlwZSB9IGZyb20gJy4uLy4uL3V0aWxzL2Nvbm5lY3ROL2Nvbm5lY3ROJztcblxuY29uc3QgYm9hcmRTdHlsZXMgPSBjc3NgXG4gIG1hcmdpbjogJHtyZW0oMjApfSBhdXRvO1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICBkaXNwbGF5OiBncmlkO1xuICBncmlkLWF1dG8tcm93czogYXV0bztcblxuICAtd2Via2l0LXRhcC1oaWdobGlnaHQtY29sb3I6IHJnYmEoMCwgMCwgMCwgMCk7XG4gIC13ZWJraXQtdGFwLWhpZ2hsaWdodC1jb2xvcjogdHJhbnNwYXJlbnQ7XG5gO1xuXG5jb25zdCBib2FyZFN0eWxlc09uQ29sTnVtID0gKGNvbE51bTogbnVtYmVyKSA9PiBjc3NgXG4gIG1heC13aWR0aDogJHtyZW0oODAgKiBjb2xOdW0pfTtcbiAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiByZXBlYXQoJHtjb2xOdW19LCAxZnIpO1xuYDtcblxuY29uc3QgYm9hcmRTdHlsZXNPbkdhbWVUeXBlOiB7IFtrZXkgaW4gc3RyaW5nXTogU2VyaWFsaXplZFN0eWxlcyB9ID0ge1xuICBjb25uZWN0TjogY3NzYFxuICAgIGdyaWQtZ2FwOiAke3JlbSgxKX07XG4gICAgYmFja2dyb3VuZC1jb2xvcjogbGlnaHRncmF5O1xuICAgIGJvcmRlcjogJHtyZW0oMil9IHNvbGlkIGJsYWNrO1xuICBgLFxuICB0aWNUYWNUb2U6IGNzc2BcbiAgICBncmlkLWdhcDogJHtyZW0oMyl9O1xuICAgIGJhY2tncm91bmQtY29sb3I6IGJsYWNrO1xuICAgIGJvcmRlcjogJHtyZW0oMyl9IHNvbGlkIHdoaXRlO1xuICBgLFxufTtcblxuY29uc3QgY2VsbFN0eWxlcyA9IGNzc2BcbiAgY3Vyc29yOiBwb2ludGVyO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcbmA7XG5cbmNvbnN0IGNlbGxTdHlsZXNPbkdhbWVUeXBlOiB7IFtrZXkgaW4gc3RyaW5nXTogU2VyaWFsaXplZFN0eWxlcyB9ID0ge1xuICB0aWNUYWNUb2U6IGNzc2BcbiAgICB3aWR0aDogMTAwJTtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgJjo6YmVmb3JlIHtcbiAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgY29udGVudDogJyc7XG4gICAgICB3aWR0aDogMTAwJTtcbiAgICAgIHBhZGRpbmctYm90dG9tOiAxMDAlO1xuICAgIH1cbiAgYCxcbn07XG5cbmNvbnN0IGNoZWNrZXJTdHlsZXNPbkdhbWVUeXBlOiB7IFtrZXkgaW4gc3RyaW5nXTogU2VyaWFsaXplZFN0eWxlcyB9ID0ge1xuICBjb25uZWN0TjogY3NzYFxuICAgIHdpZHRoOiBhdXRvO1xuICAgIHBhZGRpbmctYm90dG9tOiBjYWxjKDEwMCUgLSAke3JlbSgyICogNyl9KTtcbiAgICBtYXJnaW46ICR7cmVtKDUpfTtcbiAgICBib3JkZXItcmFkaXVzOiA1MCU7XG4gICAgYm9yZGVyOiAke3JlbSgyKX0gc29saWQgZ3JheTtcblxuICAgIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNDAwcHgpIHtcbiAgICAgIHBhZGRpbmctYm90dG9tOiBjYWxjKDEwMCUgLSAke3JlbSgyICogMyl9KTtcbiAgICAgIG1hcmdpbjogJHtyZW0oMil9O1xuICAgICAgYm9yZGVyOiAke3JlbSgxKX0gc29saWQgZ3JheTtcbiAgICB9XG4gIGAsXG4gIHRpY1RhY1RvZTogY3NzYFxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICBsZWZ0OiAwO1xuICAgIHJpZ2h0OiAwO1xuICAgIHRvcDogMDtcbiAgICBib3R0b206IDA7XG4gICAgZGlzcGxheTogYmxvY2s7XG5cbiAgICAmIHN2ZyB7XG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICBsZWZ0OiA1MCU7XG4gICAgICB0b3A6IDUwJTtcbiAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC01MCUpO1xuICAgICAgd2lkdGg6IDgwJTtcbiAgICAgIGhlaWdodDogODAlO1xuICAgIH1cblxuICAgIC8vICYgdGV4dCB7XG4gICAgLy8gICBkaXNwbGF5OiB0YWJsZS1jZWxsO1xuICAgIC8vICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIC8vICAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcbiAgICAvLyB9XG4gIGAsXG59O1xuXG5leHBvcnQgY29uc3QgcGxheWVyQ2hlY2tlclN0eWxlc09uR2FtZVR5cGU6IHsgW2tleSBpbiBzdHJpbmddOiBTZXJpYWxpemVkU3R5bGVzW10gfSA9IHtcbiAgY29ubmVjdE46IFtcbiAgICBjc3NgXG4gICAgICBib3JkZXItY29sb3I6IGdyYXk7XG4gICAgICBiYWNrZ3JvdW5kOiB5ZWxsb3c7XG4gICAgYCxcbiAgICBjc3NgXG4gICAgICBib3JkZXItY29sb3I6IHdoaXRlO1xuICAgICAgYmFja2dyb3VuZDogcmVkO1xuXG4gICAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDQwMHB4KSB7XG4gICAgICAgIGJvcmRlci1jb2xvcjogd2hpdGU7XG4gICAgICB9XG4gICAgYCxcbiAgICBjc3NgXG4gICAgICBib3JkZXItY29sb3I6IGdyYXk7XG4gICAgICBiYWNrZ3JvdW5kOiBza3libHVlO1xuICAgIGAsXG4gICAgY3NzYFxuICAgICAgYm9yZGVyLWNvbG9yOiBncmF5O1xuICAgICAgYmFja2dyb3VuZDogcGluaztcbiAgICBgLFxuICBdLFxuICB0aWNUYWNUb2U6IFtcbiAgICBjc3NgXG4gICAgICAmOjphZnRlciB7XG4gICAgICAgIGNvbnRlbnQ6ICdPOic7XG4gICAgICB9XG4gICAgYCxcbiAgICBjc3NgXG4gICAgICAmOjphZnRlciB7XG4gICAgICAgIGNvbnRlbnQ6ICdYOic7XG4gICAgICB9XG4gICAgYCxcbiAgXSxcbn07XG5cbmNvbnN0IFRpY1RhY1RvZVBpZWNlOiBGQzx7IHR5cGU/OiAnTycgfCAnWCcgfT4gPSAoeyB0eXBlIH0pID0+IChcbiAgPHN2ZyB2aWV3Qm94PXt0eXBlID09PSAnTycgPyAnMCAwIDExIDEyJyA6ICcwIDAgMTAgMTInfT5cbiAgICA8dGV4dFxuICAgICAgeD17dHlwZSA9PT0gJ08nID8gJzAuNTEnIDogJzAuNSd9XG4gICAgICB5PXt0eXBlID09PSAnTycgPyAnMTAuNScgOiAnMTAuNSd9XG4gICAgICB0ZXh0QW5jaG9yPVwiY2VudGVyXCJcbiAgICAgIGZvbnRXZWlnaHQ9XCIzMDBcIlxuICAgID5cbiAgICAgIHt0eXBlfVxuICAgIDwvdGV4dD5cbiAgPC9zdmc+XG4pO1xuXG5pbnRlcmZhY2UgUHJvcHMge1xuICBnYW1lVHlwZT86IEdhbWVUeXBlO1xuICByb3dOdW06IG51bWJlcjtcbiAgYm9hcmRzOiBudW1iZXJbXVtdO1xuICBvbkNsaWNrT25DZWxsPyhjb2xJbmQ6IG51bWJlciwgcm93SW5kOiBudW1iZXIpOiAoZTogUmVhY3QuTW91c2VFdmVudCkgPT4gdm9pZDtcbn1cblxuY29uc3QgQm9hcmQ6IEZDPFByb3BzPiA9ICh7IGdhbWVUeXBlID0gR2FtZVR5cGUuY29ubmVjdE4sIHJvd051bSwgYm9hcmRzLCBvbkNsaWNrT25DZWxsIH0pID0+IHtcbiAgY29uc3QgY29sTnVtID0gYm9hcmRzWzBdLmxlbmd0aDtcblxuICBjb25zdCBjZWxsR3JpZFBvcyA9IHVzZUNhbGxiYWNrKFxuICAgIChyb3dJbmQ6IG51bWJlciwgY29sSW5kOiBudW1iZXIpID0+IGNzc2BcbiAgICAgIGdyaWQtcm93OiAke3Jvd051bSAtIHJvd0luZH0gLyBzcGFuIDE7XG4gICAgICBncmlkLWNvbHVtbjogJHtjb2xJbmQgKyAxfSAvIHNwYW4gMTtcbiAgICBgLFxuICAgIFtyb3dOdW1dXG4gICk7XG5cbiAgcmV0dXJuIChcbiAgICA8ZGl2IGNzcz17W2JvYXJkU3R5bGVzLCBib2FyZFN0eWxlc09uQ29sTnVtKGNvbE51bSksIGJvYXJkU3R5bGVzT25HYW1lVHlwZVtnYW1lVHlwZV1dfT5cbiAgICAgIHtib2FyZHNbMF0ubWFwKChfYywgY29sSW5kKSA9PlxuICAgICAgICBBcnJheS5mcm9tKEFycmF5KHJvd051bSksIChfciwgcm93SW5kKSA9PiAoXG4gICAgICAgICAgPGJ1dHRvblxuICAgICAgICAgICAgdHlwZT1cImJ1dHRvblwiXG4gICAgICAgICAgICBhcmlhLWxhYmVsPVwiYm9hcmRcIlxuICAgICAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIHJlYWN0L25vLWFycmF5LWluZGV4LWtleVxuICAgICAgICAgICAga2V5PXtgY2VsbC0ke2NvbEluZH0tJHtyb3dJbmR9YH1cbiAgICAgICAgICAgIGNzcz17W2NlbGxTdHlsZXMsIGNlbGxTdHlsZXNPbkdhbWVUeXBlW2dhbWVUeXBlXSwgY2VsbEdyaWRQb3Mocm93SW5kLCBjb2xJbmQpXX1cbiAgICAgICAgICAgIG9uQ2xpY2s9e29uQ2xpY2tPbkNlbGwgJiYgb25DbGlja09uQ2VsbChjb2xJbmQsIHJvd0luZCl9XG4gICAgICAgICAgPlxuICAgICAgICAgICAgPGRpdlxuICAgICAgICAgICAgICBjc3M9e1tcbiAgICAgICAgICAgICAgICBjaGVja2VyU3R5bGVzT25HYW1lVHlwZVtnYW1lVHlwZV0sXG4gICAgICAgICAgICAgICAgZ2FtZVR5cGUgPT09IEdhbWVUeXBlLmNvbm5lY3ROICYmXG4gICAgICAgICAgICAgICAgICBib2FyZHMucmVkdWNlKFxuICAgICAgICAgICAgICAgICAgICAocmVzdWx0LCBfbiwgaW5kKSA9PlxuICAgICAgICAgICAgICAgICAgICAgIChib2FyZHNbaW5kXVtjb2xJbmRdICYgKDEgPDwgcm93SW5kKSAmJlxuICAgICAgICAgICAgICAgICAgICAgICAgcGxheWVyQ2hlY2tlclN0eWxlc09uR2FtZVR5cGVbZ2FtZVR5cGVdW2luZF0pIHx8XG4gICAgICAgICAgICAgICAgICAgICAgcmVzdWx0LFxuICAgICAgICAgICAgICAgICAgICBjc3NgYFxuICAgICAgICAgICAgICAgICAgKSxcbiAgICAgICAgICAgICAgXX1cbiAgICAgICAgICAgID5cbiAgICAgICAgICAgICAge2dhbWVUeXBlID09PSBHYW1lVHlwZS50aWNUYWNUb2UgJiZcbiAgICAgICAgICAgICAgICBib2FyZHMucmVkdWNlKFxuICAgICAgICAgICAgICAgICAgKHJlc3VsdCwgX24sIGluZCkgPT5cbiAgICAgICAgICAgICAgICAgICAgKGJvYXJkc1tpbmRdW2NvbEluZF0gJiAoMSA8PCByb3dJbmQpICYmXG4gICAgICAgICAgICAgICAgICAgICAgWzxUaWNUYWNUb2VQaWVjZSB0eXBlPVwiT1wiIC8+LCA8VGljVGFjVG9lUGllY2UgdHlwZT1cIlhcIiAvPl1baW5kXSkgfHxcbiAgICAgICAgICAgICAgICAgICAgcmVzdWx0LFxuICAgICAgICAgICAgICAgICAgPFRpY1RhY1RvZVBpZWNlIC8+XG4gICAgICAgICAgICAgICAgKX1cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgIDwvYnV0dG9uPlxuICAgICAgICApKVxuICAgICAgKX1cbiAgICA8L2Rpdj5cbiAgKTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IEJvYXJkO1xuIl19 */"
  }]
};

var TicTacToePiece = function TicTacToePiece(_ref2) {
  var type = _ref2.type;
  return Object(_emotion_core__WEBPACK_IMPORTED_MODULE_2__["jsx"])("svg", {
    viewBox: type === 'O' ? '0 0 11 12' : '0 0 10 12',
    __source: {
      fileName: _jsxFileName,
      lineNumber: 129
    },
    __self: this
  }, Object(_emotion_core__WEBPACK_IMPORTED_MODULE_2__["jsx"])("text", {
    x: type === 'O' ? '0.51' : '0.5',
    y: type === 'O' ? '10.5' : '10.5',
    textAnchor: "center",
    fontWeight: "300",
    __source: {
      fileName: _jsxFileName,
      lineNumber: 130
    },
    __self: this
  }, type));
};

var _ref =  false ? undefined : {
  name: "1niozbw-Board",
  styles: "label:Board;",
  map: "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9kYXZpZC5jaGVuL0RvY3VtZW50cy9wcm9qZWN0cy9uZXh0OS9zcmMvY29tcG9uZW50cy9Db25uZWN0Ti9Cb2FyZC50c3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBbUx1QiIsImZpbGUiOiIvVXNlcnMvZGF2aWQuY2hlbi9Eb2N1bWVudHMvcHJvamVjdHMvbmV4dDkvc3JjL2NvbXBvbmVudHMvQ29ubmVjdE4vQm9hcmQudHN4Iiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0LCB7IEZDLCB1c2VDYWxsYmFjayB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IGNzcywgU2VyaWFsaXplZFN0eWxlcyB9IGZyb20gJ0BlbW90aW9uL2NvcmUnO1xuaW1wb3J0IHJlbSBmcm9tICcuLi8uLi91dGlscy9zdHlsZS9yZW0nO1xuaW1wb3J0IHsgR2FtZVR5cGUgfSBmcm9tICcuLi8uLi91dGlscy9jb25uZWN0Ti9jb25uZWN0Tic7XG5cbmNvbnN0IGJvYXJkU3R5bGVzID0gY3NzYFxuICBtYXJnaW46ICR7cmVtKDIwKX0gYXV0bztcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgZGlzcGxheTogZ3JpZDtcbiAgZ3JpZC1hdXRvLXJvd3M6IGF1dG87XG5cbiAgLXdlYmtpdC10YXAtaGlnaGxpZ2h0LWNvbG9yOiByZ2JhKDAsIDAsIDAsIDApO1xuICAtd2Via2l0LXRhcC1oaWdobGlnaHQtY29sb3I6IHRyYW5zcGFyZW50O1xuYDtcblxuY29uc3QgYm9hcmRTdHlsZXNPbkNvbE51bSA9IChjb2xOdW06IG51bWJlcikgPT4gY3NzYFxuICBtYXgtd2lkdGg6ICR7cmVtKDgwICogY29sTnVtKX07XG4gIGdyaWQtdGVtcGxhdGUtY29sdW1uczogcmVwZWF0KCR7Y29sTnVtfSwgMWZyKTtcbmA7XG5cbmNvbnN0IGJvYXJkU3R5bGVzT25HYW1lVHlwZTogeyBba2V5IGluIHN0cmluZ106IFNlcmlhbGl6ZWRTdHlsZXMgfSA9IHtcbiAgY29ubmVjdE46IGNzc2BcbiAgICBncmlkLWdhcDogJHtyZW0oMSl9O1xuICAgIGJhY2tncm91bmQtY29sb3I6IGxpZ2h0Z3JheTtcbiAgICBib3JkZXI6ICR7cmVtKDIpfSBzb2xpZCBibGFjaztcbiAgYCxcbiAgdGljVGFjVG9lOiBjc3NgXG4gICAgZ3JpZC1nYXA6ICR7cmVtKDMpfTtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBibGFjaztcbiAgICBib3JkZXI6ICR7cmVtKDMpfSBzb2xpZCB3aGl0ZTtcbiAgYCxcbn07XG5cbmNvbnN0IGNlbGxTdHlsZXMgPSBjc3NgXG4gIGN1cnNvcjogcG9pbnRlcjtcbiAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XG5gO1xuXG5jb25zdCBjZWxsU3R5bGVzT25HYW1lVHlwZTogeyBba2V5IGluIHN0cmluZ106IFNlcmlhbGl6ZWRTdHlsZXMgfSA9IHtcbiAgdGljVGFjVG9lOiBjc3NgXG4gICAgd2lkdGg6IDEwMCU7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgICY6OmJlZm9yZSB7XG4gICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgIGNvbnRlbnQ6ICcnO1xuICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICBwYWRkaW5nLWJvdHRvbTogMTAwJTtcbiAgICB9XG4gIGAsXG59O1xuXG5jb25zdCBjaGVja2VyU3R5bGVzT25HYW1lVHlwZTogeyBba2V5IGluIHN0cmluZ106IFNlcmlhbGl6ZWRTdHlsZXMgfSA9IHtcbiAgY29ubmVjdE46IGNzc2BcbiAgICB3aWR0aDogYXV0bztcbiAgICBwYWRkaW5nLWJvdHRvbTogY2FsYygxMDAlIC0gJHtyZW0oMiAqIDcpfSk7XG4gICAgbWFyZ2luOiAke3JlbSg1KX07XG4gICAgYm9yZGVyLXJhZGl1czogNTAlO1xuICAgIGJvcmRlcjogJHtyZW0oMil9IHNvbGlkIGdyYXk7XG5cbiAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDQwMHB4KSB7XG4gICAgICBwYWRkaW5nLWJvdHRvbTogY2FsYygxMDAlIC0gJHtyZW0oMiAqIDMpfSk7XG4gICAgICBtYXJnaW46ICR7cmVtKDIpfTtcbiAgICAgIGJvcmRlcjogJHtyZW0oMSl9IHNvbGlkIGdyYXk7XG4gICAgfVxuICBgLFxuICB0aWNUYWNUb2U6IGNzc2BcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgbGVmdDogMDtcbiAgICByaWdodDogMDtcbiAgICB0b3A6IDA7XG4gICAgYm90dG9tOiAwO1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuXG4gICAgJiBzdmcge1xuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgbGVmdDogNTAlO1xuICAgICAgdG9wOiA1MCU7XG4gICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNTAlKTtcbiAgICAgIHdpZHRoOiA4MCU7XG4gICAgICBoZWlnaHQ6IDgwJTtcbiAgICB9XG5cbiAgICAvLyAmIHRleHQge1xuICAgIC8vICAgZGlzcGxheTogdGFibGUtY2VsbDtcbiAgICAvLyAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICAvLyAgIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XG4gICAgLy8gfVxuICBgLFxufTtcblxuZXhwb3J0IGNvbnN0IHBsYXllckNoZWNrZXJTdHlsZXNPbkdhbWVUeXBlOiB7IFtrZXkgaW4gc3RyaW5nXTogU2VyaWFsaXplZFN0eWxlc1tdIH0gPSB7XG4gIGNvbm5lY3ROOiBbXG4gICAgY3NzYFxuICAgICAgYm9yZGVyLWNvbG9yOiBncmF5O1xuICAgICAgYmFja2dyb3VuZDogeWVsbG93O1xuICAgIGAsXG4gICAgY3NzYFxuICAgICAgYm9yZGVyLWNvbG9yOiB3aGl0ZTtcbiAgICAgIGJhY2tncm91bmQ6IHJlZDtcblxuICAgICAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA0MDBweCkge1xuICAgICAgICBib3JkZXItY29sb3I6IHdoaXRlO1xuICAgICAgfVxuICAgIGAsXG4gICAgY3NzYFxuICAgICAgYm9yZGVyLWNvbG9yOiBncmF5O1xuICAgICAgYmFja2dyb3VuZDogc2t5Ymx1ZTtcbiAgICBgLFxuICAgIGNzc2BcbiAgICAgIGJvcmRlci1jb2xvcjogZ3JheTtcbiAgICAgIGJhY2tncm91bmQ6IHBpbms7XG4gICAgYCxcbiAgXSxcbiAgdGljVGFjVG9lOiBbXG4gICAgY3NzYFxuICAgICAgJjo6YWZ0ZXIge1xuICAgICAgICBjb250ZW50OiAnTzonO1xuICAgICAgfVxuICAgIGAsXG4gICAgY3NzYFxuICAgICAgJjo6YWZ0ZXIge1xuICAgICAgICBjb250ZW50OiAnWDonO1xuICAgICAgfVxuICAgIGAsXG4gIF0sXG59O1xuXG5jb25zdCBUaWNUYWNUb2VQaWVjZTogRkM8eyB0eXBlPzogJ08nIHwgJ1gnIH0+ID0gKHsgdHlwZSB9KSA9PiAoXG4gIDxzdmcgdmlld0JveD17dHlwZSA9PT0gJ08nID8gJzAgMCAxMSAxMicgOiAnMCAwIDEwIDEyJ30+XG4gICAgPHRleHRcbiAgICAgIHg9e3R5cGUgPT09ICdPJyA/ICcwLjUxJyA6ICcwLjUnfVxuICAgICAgeT17dHlwZSA9PT0gJ08nID8gJzEwLjUnIDogJzEwLjUnfVxuICAgICAgdGV4dEFuY2hvcj1cImNlbnRlclwiXG4gICAgICBmb250V2VpZ2h0PVwiMzAwXCJcbiAgICA+XG4gICAgICB7dHlwZX1cbiAgICA8L3RleHQ+XG4gIDwvc3ZnPlxuKTtcblxuaW50ZXJmYWNlIFByb3BzIHtcbiAgZ2FtZVR5cGU/OiBHYW1lVHlwZTtcbiAgcm93TnVtOiBudW1iZXI7XG4gIGJvYXJkczogbnVtYmVyW11bXTtcbiAgb25DbGlja09uQ2VsbD8oY29sSW5kOiBudW1iZXIsIHJvd0luZDogbnVtYmVyKTogKGU6IFJlYWN0Lk1vdXNlRXZlbnQpID0+IHZvaWQ7XG59XG5cbmNvbnN0IEJvYXJkOiBGQzxQcm9wcz4gPSAoeyBnYW1lVHlwZSA9IEdhbWVUeXBlLmNvbm5lY3ROLCByb3dOdW0sIGJvYXJkcywgb25DbGlja09uQ2VsbCB9KSA9PiB7XG4gIGNvbnN0IGNvbE51bSA9IGJvYXJkc1swXS5sZW5ndGg7XG5cbiAgY29uc3QgY2VsbEdyaWRQb3MgPSB1c2VDYWxsYmFjayhcbiAgICAocm93SW5kOiBudW1iZXIsIGNvbEluZDogbnVtYmVyKSA9PiBjc3NgXG4gICAgICBncmlkLXJvdzogJHtyb3dOdW0gLSByb3dJbmR9IC8gc3BhbiAxO1xuICAgICAgZ3JpZC1jb2x1bW46ICR7Y29sSW5kICsgMX0gLyBzcGFuIDE7XG4gICAgYCxcbiAgICBbcm93TnVtXVxuICApO1xuXG4gIHJldHVybiAoXG4gICAgPGRpdiBjc3M9e1tib2FyZFN0eWxlcywgYm9hcmRTdHlsZXNPbkNvbE51bShjb2xOdW0pLCBib2FyZFN0eWxlc09uR2FtZVR5cGVbZ2FtZVR5cGVdXX0+XG4gICAgICB7Ym9hcmRzWzBdLm1hcCgoX2MsIGNvbEluZCkgPT5cbiAgICAgICAgQXJyYXkuZnJvbShBcnJheShyb3dOdW0pLCAoX3IsIHJvd0luZCkgPT4gKFxuICAgICAgICAgIDxidXR0b25cbiAgICAgICAgICAgIHR5cGU9XCJidXR0b25cIlxuICAgICAgICAgICAgYXJpYS1sYWJlbD1cImJvYXJkXCJcbiAgICAgICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSByZWFjdC9uby1hcnJheS1pbmRleC1rZXlcbiAgICAgICAgICAgIGtleT17YGNlbGwtJHtjb2xJbmR9LSR7cm93SW5kfWB9XG4gICAgICAgICAgICBjc3M9e1tjZWxsU3R5bGVzLCBjZWxsU3R5bGVzT25HYW1lVHlwZVtnYW1lVHlwZV0sIGNlbGxHcmlkUG9zKHJvd0luZCwgY29sSW5kKV19XG4gICAgICAgICAgICBvbkNsaWNrPXtvbkNsaWNrT25DZWxsICYmIG9uQ2xpY2tPbkNlbGwoY29sSW5kLCByb3dJbmQpfVxuICAgICAgICAgID5cbiAgICAgICAgICAgIDxkaXZcbiAgICAgICAgICAgICAgY3NzPXtbXG4gICAgICAgICAgICAgICAgY2hlY2tlclN0eWxlc09uR2FtZVR5cGVbZ2FtZVR5cGVdLFxuICAgICAgICAgICAgICAgIGdhbWVUeXBlID09PSBHYW1lVHlwZS5jb25uZWN0TiAmJlxuICAgICAgICAgICAgICAgICAgYm9hcmRzLnJlZHVjZShcbiAgICAgICAgICAgICAgICAgICAgKHJlc3VsdCwgX24sIGluZCkgPT5cbiAgICAgICAgICAgICAgICAgICAgICAoYm9hcmRzW2luZF1bY29sSW5kXSAmICgxIDw8IHJvd0luZCkgJiZcbiAgICAgICAgICAgICAgICAgICAgICAgIHBsYXllckNoZWNrZXJTdHlsZXNPbkdhbWVUeXBlW2dhbWVUeXBlXVtpbmRdKSB8fFxuICAgICAgICAgICAgICAgICAgICAgIHJlc3VsdCxcbiAgICAgICAgICAgICAgICAgICAgY3NzYGBcbiAgICAgICAgICAgICAgICAgICksXG4gICAgICAgICAgICAgIF19XG4gICAgICAgICAgICA+XG4gICAgICAgICAgICAgIHtnYW1lVHlwZSA9PT0gR2FtZVR5cGUudGljVGFjVG9lICYmXG4gICAgICAgICAgICAgICAgYm9hcmRzLnJlZHVjZShcbiAgICAgICAgICAgICAgICAgIChyZXN1bHQsIF9uLCBpbmQpID0+XG4gICAgICAgICAgICAgICAgICAgIChib2FyZHNbaW5kXVtjb2xJbmRdICYgKDEgPDwgcm93SW5kKSAmJlxuICAgICAgICAgICAgICAgICAgICAgIFs8VGljVGFjVG9lUGllY2UgdHlwZT1cIk9cIiAvPiwgPFRpY1RhY1RvZVBpZWNlIHR5cGU9XCJYXCIgLz5dW2luZF0pIHx8XG4gICAgICAgICAgICAgICAgICAgIHJlc3VsdCxcbiAgICAgICAgICAgICAgICAgIDxUaWNUYWNUb2VQaWVjZSAvPlxuICAgICAgICAgICAgICAgICl9XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICA8L2J1dHRvbj5cbiAgICAgICAgKSlcbiAgICAgICl9XG4gICAgPC9kaXY+XG4gICk7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBCb2FyZDtcbiJdfQ== */"
};

var Board = function Board(_ref3) {
  var _ref3$gameType = _ref3.gameType,
      gameType = _ref3$gameType === void 0 ? _utils_connectN_connectN__WEBPACK_IMPORTED_MODULE_5__["GameType"].connectN : _ref3$gameType,
      rowNum = _ref3.rowNum,
      boards = _ref3.boards,
      onClickOnCell = _ref3.onClickOnCell;
  var colNum = boards[0].length;
  var cellGridPos = Object(react__WEBPACK_IMPORTED_MODULE_3__["useCallback"])(function (rowInd, colInd) {
    return (
      /*#__PURE__*/
      Object(_emotion_core__WEBPACK_IMPORTED_MODULE_2__["css"])("grid-row:", rowNum - rowInd, " / span 1;grid-column:", colInd + 1, " / span 1;" + ( false ? undefined : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9kYXZpZC5jaGVuL0RvY3VtZW50cy9wcm9qZWN0cy9uZXh0OS9zcmMvY29tcG9uZW50cy9Db25uZWN0Ti9Cb2FyZC50c3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBdUoyQyIsImZpbGUiOiIvVXNlcnMvZGF2aWQuY2hlbi9Eb2N1bWVudHMvcHJvamVjdHMvbmV4dDkvc3JjL2NvbXBvbmVudHMvQ29ubmVjdE4vQm9hcmQudHN4Iiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0LCB7IEZDLCB1c2VDYWxsYmFjayB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IGNzcywgU2VyaWFsaXplZFN0eWxlcyB9IGZyb20gJ0BlbW90aW9uL2NvcmUnO1xuaW1wb3J0IHJlbSBmcm9tICcuLi8uLi91dGlscy9zdHlsZS9yZW0nO1xuaW1wb3J0IHsgR2FtZVR5cGUgfSBmcm9tICcuLi8uLi91dGlscy9jb25uZWN0Ti9jb25uZWN0Tic7XG5cbmNvbnN0IGJvYXJkU3R5bGVzID0gY3NzYFxuICBtYXJnaW46ICR7cmVtKDIwKX0gYXV0bztcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgZGlzcGxheTogZ3JpZDtcbiAgZ3JpZC1hdXRvLXJvd3M6IGF1dG87XG5cbiAgLXdlYmtpdC10YXAtaGlnaGxpZ2h0LWNvbG9yOiByZ2JhKDAsIDAsIDAsIDApO1xuICAtd2Via2l0LXRhcC1oaWdobGlnaHQtY29sb3I6IHRyYW5zcGFyZW50O1xuYDtcblxuY29uc3QgYm9hcmRTdHlsZXNPbkNvbE51bSA9IChjb2xOdW06IG51bWJlcikgPT4gY3NzYFxuICBtYXgtd2lkdGg6ICR7cmVtKDgwICogY29sTnVtKX07XG4gIGdyaWQtdGVtcGxhdGUtY29sdW1uczogcmVwZWF0KCR7Y29sTnVtfSwgMWZyKTtcbmA7XG5cbmNvbnN0IGJvYXJkU3R5bGVzT25HYW1lVHlwZTogeyBba2V5IGluIHN0cmluZ106IFNlcmlhbGl6ZWRTdHlsZXMgfSA9IHtcbiAgY29ubmVjdE46IGNzc2BcbiAgICBncmlkLWdhcDogJHtyZW0oMSl9O1xuICAgIGJhY2tncm91bmQtY29sb3I6IGxpZ2h0Z3JheTtcbiAgICBib3JkZXI6ICR7cmVtKDIpfSBzb2xpZCBibGFjaztcbiAgYCxcbiAgdGljVGFjVG9lOiBjc3NgXG4gICAgZ3JpZC1nYXA6ICR7cmVtKDMpfTtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBibGFjaztcbiAgICBib3JkZXI6ICR7cmVtKDMpfSBzb2xpZCB3aGl0ZTtcbiAgYCxcbn07XG5cbmNvbnN0IGNlbGxTdHlsZXMgPSBjc3NgXG4gIGN1cnNvcjogcG9pbnRlcjtcbiAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XG5gO1xuXG5jb25zdCBjZWxsU3R5bGVzT25HYW1lVHlwZTogeyBba2V5IGluIHN0cmluZ106IFNlcmlhbGl6ZWRTdHlsZXMgfSA9IHtcbiAgdGljVGFjVG9lOiBjc3NgXG4gICAgd2lkdGg6IDEwMCU7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgICY6OmJlZm9yZSB7XG4gICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgIGNvbnRlbnQ6ICcnO1xuICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICBwYWRkaW5nLWJvdHRvbTogMTAwJTtcbiAgICB9XG4gIGAsXG59O1xuXG5jb25zdCBjaGVja2VyU3R5bGVzT25HYW1lVHlwZTogeyBba2V5IGluIHN0cmluZ106IFNlcmlhbGl6ZWRTdHlsZXMgfSA9IHtcbiAgY29ubmVjdE46IGNzc2BcbiAgICB3aWR0aDogYXV0bztcbiAgICBwYWRkaW5nLWJvdHRvbTogY2FsYygxMDAlIC0gJHtyZW0oMiAqIDcpfSk7XG4gICAgbWFyZ2luOiAke3JlbSg1KX07XG4gICAgYm9yZGVyLXJhZGl1czogNTAlO1xuICAgIGJvcmRlcjogJHtyZW0oMil9IHNvbGlkIGdyYXk7XG5cbiAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDQwMHB4KSB7XG4gICAgICBwYWRkaW5nLWJvdHRvbTogY2FsYygxMDAlIC0gJHtyZW0oMiAqIDMpfSk7XG4gICAgICBtYXJnaW46ICR7cmVtKDIpfTtcbiAgICAgIGJvcmRlcjogJHtyZW0oMSl9IHNvbGlkIGdyYXk7XG4gICAgfVxuICBgLFxuICB0aWNUYWNUb2U6IGNzc2BcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgbGVmdDogMDtcbiAgICByaWdodDogMDtcbiAgICB0b3A6IDA7XG4gICAgYm90dG9tOiAwO1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuXG4gICAgJiBzdmcge1xuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgbGVmdDogNTAlO1xuICAgICAgdG9wOiA1MCU7XG4gICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNTAlKTtcbiAgICAgIHdpZHRoOiA4MCU7XG4gICAgICBoZWlnaHQ6IDgwJTtcbiAgICB9XG5cbiAgICAvLyAmIHRleHQge1xuICAgIC8vICAgZGlzcGxheTogdGFibGUtY2VsbDtcbiAgICAvLyAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICAvLyAgIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XG4gICAgLy8gfVxuICBgLFxufTtcblxuZXhwb3J0IGNvbnN0IHBsYXllckNoZWNrZXJTdHlsZXNPbkdhbWVUeXBlOiB7IFtrZXkgaW4gc3RyaW5nXTogU2VyaWFsaXplZFN0eWxlc1tdIH0gPSB7XG4gIGNvbm5lY3ROOiBbXG4gICAgY3NzYFxuICAgICAgYm9yZGVyLWNvbG9yOiBncmF5O1xuICAgICAgYmFja2dyb3VuZDogeWVsbG93O1xuICAgIGAsXG4gICAgY3NzYFxuICAgICAgYm9yZGVyLWNvbG9yOiB3aGl0ZTtcbiAgICAgIGJhY2tncm91bmQ6IHJlZDtcblxuICAgICAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA0MDBweCkge1xuICAgICAgICBib3JkZXItY29sb3I6IHdoaXRlO1xuICAgICAgfVxuICAgIGAsXG4gICAgY3NzYFxuICAgICAgYm9yZGVyLWNvbG9yOiBncmF5O1xuICAgICAgYmFja2dyb3VuZDogc2t5Ymx1ZTtcbiAgICBgLFxuICAgIGNzc2BcbiAgICAgIGJvcmRlci1jb2xvcjogZ3JheTtcbiAgICAgIGJhY2tncm91bmQ6IHBpbms7XG4gICAgYCxcbiAgXSxcbiAgdGljVGFjVG9lOiBbXG4gICAgY3NzYFxuICAgICAgJjo6YWZ0ZXIge1xuICAgICAgICBjb250ZW50OiAnTzonO1xuICAgICAgfVxuICAgIGAsXG4gICAgY3NzYFxuICAgICAgJjo6YWZ0ZXIge1xuICAgICAgICBjb250ZW50OiAnWDonO1xuICAgICAgfVxuICAgIGAsXG4gIF0sXG59O1xuXG5jb25zdCBUaWNUYWNUb2VQaWVjZTogRkM8eyB0eXBlPzogJ08nIHwgJ1gnIH0+ID0gKHsgdHlwZSB9KSA9PiAoXG4gIDxzdmcgdmlld0JveD17dHlwZSA9PT0gJ08nID8gJzAgMCAxMSAxMicgOiAnMCAwIDEwIDEyJ30+XG4gICAgPHRleHRcbiAgICAgIHg9e3R5cGUgPT09ICdPJyA/ICcwLjUxJyA6ICcwLjUnfVxuICAgICAgeT17dHlwZSA9PT0gJ08nID8gJzEwLjUnIDogJzEwLjUnfVxuICAgICAgdGV4dEFuY2hvcj1cImNlbnRlclwiXG4gICAgICBmb250V2VpZ2h0PVwiMzAwXCJcbiAgICA+XG4gICAgICB7dHlwZX1cbiAgICA8L3RleHQ+XG4gIDwvc3ZnPlxuKTtcblxuaW50ZXJmYWNlIFByb3BzIHtcbiAgZ2FtZVR5cGU/OiBHYW1lVHlwZTtcbiAgcm93TnVtOiBudW1iZXI7XG4gIGJvYXJkczogbnVtYmVyW11bXTtcbiAgb25DbGlja09uQ2VsbD8oY29sSW5kOiBudW1iZXIsIHJvd0luZDogbnVtYmVyKTogKGU6IFJlYWN0Lk1vdXNlRXZlbnQpID0+IHZvaWQ7XG59XG5cbmNvbnN0IEJvYXJkOiBGQzxQcm9wcz4gPSAoeyBnYW1lVHlwZSA9IEdhbWVUeXBlLmNvbm5lY3ROLCByb3dOdW0sIGJvYXJkcywgb25DbGlja09uQ2VsbCB9KSA9PiB7XG4gIGNvbnN0IGNvbE51bSA9IGJvYXJkc1swXS5sZW5ndGg7XG5cbiAgY29uc3QgY2VsbEdyaWRQb3MgPSB1c2VDYWxsYmFjayhcbiAgICAocm93SW5kOiBudW1iZXIsIGNvbEluZDogbnVtYmVyKSA9PiBjc3NgXG4gICAgICBncmlkLXJvdzogJHtyb3dOdW0gLSByb3dJbmR9IC8gc3BhbiAxO1xuICAgICAgZ3JpZC1jb2x1bW46ICR7Y29sSW5kICsgMX0gLyBzcGFuIDE7XG4gICAgYCxcbiAgICBbcm93TnVtXVxuICApO1xuXG4gIHJldHVybiAoXG4gICAgPGRpdiBjc3M9e1tib2FyZFN0eWxlcywgYm9hcmRTdHlsZXNPbkNvbE51bShjb2xOdW0pLCBib2FyZFN0eWxlc09uR2FtZVR5cGVbZ2FtZVR5cGVdXX0+XG4gICAgICB7Ym9hcmRzWzBdLm1hcCgoX2MsIGNvbEluZCkgPT5cbiAgICAgICAgQXJyYXkuZnJvbShBcnJheShyb3dOdW0pLCAoX3IsIHJvd0luZCkgPT4gKFxuICAgICAgICAgIDxidXR0b25cbiAgICAgICAgICAgIHR5cGU9XCJidXR0b25cIlxuICAgICAgICAgICAgYXJpYS1sYWJlbD1cImJvYXJkXCJcbiAgICAgICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSByZWFjdC9uby1hcnJheS1pbmRleC1rZXlcbiAgICAgICAgICAgIGtleT17YGNlbGwtJHtjb2xJbmR9LSR7cm93SW5kfWB9XG4gICAgICAgICAgICBjc3M9e1tjZWxsU3R5bGVzLCBjZWxsU3R5bGVzT25HYW1lVHlwZVtnYW1lVHlwZV0sIGNlbGxHcmlkUG9zKHJvd0luZCwgY29sSW5kKV19XG4gICAgICAgICAgICBvbkNsaWNrPXtvbkNsaWNrT25DZWxsICYmIG9uQ2xpY2tPbkNlbGwoY29sSW5kLCByb3dJbmQpfVxuICAgICAgICAgID5cbiAgICAgICAgICAgIDxkaXZcbiAgICAgICAgICAgICAgY3NzPXtbXG4gICAgICAgICAgICAgICAgY2hlY2tlclN0eWxlc09uR2FtZVR5cGVbZ2FtZVR5cGVdLFxuICAgICAgICAgICAgICAgIGdhbWVUeXBlID09PSBHYW1lVHlwZS5jb25uZWN0TiAmJlxuICAgICAgICAgICAgICAgICAgYm9hcmRzLnJlZHVjZShcbiAgICAgICAgICAgICAgICAgICAgKHJlc3VsdCwgX24sIGluZCkgPT5cbiAgICAgICAgICAgICAgICAgICAgICAoYm9hcmRzW2luZF1bY29sSW5kXSAmICgxIDw8IHJvd0luZCkgJiZcbiAgICAgICAgICAgICAgICAgICAgICAgIHBsYXllckNoZWNrZXJTdHlsZXNPbkdhbWVUeXBlW2dhbWVUeXBlXVtpbmRdKSB8fFxuICAgICAgICAgICAgICAgICAgICAgIHJlc3VsdCxcbiAgICAgICAgICAgICAgICAgICAgY3NzYGBcbiAgICAgICAgICAgICAgICAgICksXG4gICAgICAgICAgICAgIF19XG4gICAgICAgICAgICA+XG4gICAgICAgICAgICAgIHtnYW1lVHlwZSA9PT0gR2FtZVR5cGUudGljVGFjVG9lICYmXG4gICAgICAgICAgICAgICAgYm9hcmRzLnJlZHVjZShcbiAgICAgICAgICAgICAgICAgIChyZXN1bHQsIF9uLCBpbmQpID0+XG4gICAgICAgICAgICAgICAgICAgIChib2FyZHNbaW5kXVtjb2xJbmRdICYgKDEgPDwgcm93SW5kKSAmJlxuICAgICAgICAgICAgICAgICAgICAgIFs8VGljVGFjVG9lUGllY2UgdHlwZT1cIk9cIiAvPiwgPFRpY1RhY1RvZVBpZWNlIHR5cGU9XCJYXCIgLz5dW2luZF0pIHx8XG4gICAgICAgICAgICAgICAgICAgIHJlc3VsdCxcbiAgICAgICAgICAgICAgICAgIDxUaWNUYWNUb2VQaWVjZSAvPlxuICAgICAgICAgICAgICAgICl9XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICA8L2J1dHRvbj5cbiAgICAgICAgKSlcbiAgICAgICl9XG4gICAgPC9kaXY+XG4gICk7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBCb2FyZDtcbiJdfQ== */"))
    );
  }, [rowNum]);
  return Object(_emotion_core__WEBPACK_IMPORTED_MODULE_2__["jsx"])("div", {
    css:
    /*#__PURE__*/
    Object(_emotion_css__WEBPACK_IMPORTED_MODULE_1__["default"])([boardStyles, boardStylesOnColNum(colNum), boardStylesOnGameType[gameType]], "label:Board;" + ( false ? undefined : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9kYXZpZC5jaGVuL0RvY3VtZW50cy9wcm9qZWN0cy9uZXh0OS9zcmMvY29tcG9uZW50cy9Db25uZWN0Ti9Cb2FyZC50c3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBK0pTIiwiZmlsZSI6Ii9Vc2Vycy9kYXZpZC5jaGVuL0RvY3VtZW50cy9wcm9qZWN0cy9uZXh0OS9zcmMvY29tcG9uZW50cy9Db25uZWN0Ti9Cb2FyZC50c3giLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QsIHsgRkMsIHVzZUNhbGxiYWNrIH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgY3NzLCBTZXJpYWxpemVkU3R5bGVzIH0gZnJvbSAnQGVtb3Rpb24vY29yZSc7XG5pbXBvcnQgcmVtIGZyb20gJy4uLy4uL3V0aWxzL3N0eWxlL3JlbSc7XG5pbXBvcnQgeyBHYW1lVHlwZSB9IGZyb20gJy4uLy4uL3V0aWxzL2Nvbm5lY3ROL2Nvbm5lY3ROJztcblxuY29uc3QgYm9hcmRTdHlsZXMgPSBjc3NgXG4gIG1hcmdpbjogJHtyZW0oMjApfSBhdXRvO1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICBkaXNwbGF5OiBncmlkO1xuICBncmlkLWF1dG8tcm93czogYXV0bztcblxuICAtd2Via2l0LXRhcC1oaWdobGlnaHQtY29sb3I6IHJnYmEoMCwgMCwgMCwgMCk7XG4gIC13ZWJraXQtdGFwLWhpZ2hsaWdodC1jb2xvcjogdHJhbnNwYXJlbnQ7XG5gO1xuXG5jb25zdCBib2FyZFN0eWxlc09uQ29sTnVtID0gKGNvbE51bTogbnVtYmVyKSA9PiBjc3NgXG4gIG1heC13aWR0aDogJHtyZW0oODAgKiBjb2xOdW0pfTtcbiAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiByZXBlYXQoJHtjb2xOdW19LCAxZnIpO1xuYDtcblxuY29uc3QgYm9hcmRTdHlsZXNPbkdhbWVUeXBlOiB7IFtrZXkgaW4gc3RyaW5nXTogU2VyaWFsaXplZFN0eWxlcyB9ID0ge1xuICBjb25uZWN0TjogY3NzYFxuICAgIGdyaWQtZ2FwOiAke3JlbSgxKX07XG4gICAgYmFja2dyb3VuZC1jb2xvcjogbGlnaHRncmF5O1xuICAgIGJvcmRlcjogJHtyZW0oMil9IHNvbGlkIGJsYWNrO1xuICBgLFxuICB0aWNUYWNUb2U6IGNzc2BcbiAgICBncmlkLWdhcDogJHtyZW0oMyl9O1xuICAgIGJhY2tncm91bmQtY29sb3I6IGJsYWNrO1xuICAgIGJvcmRlcjogJHtyZW0oMyl9IHNvbGlkIHdoaXRlO1xuICBgLFxufTtcblxuY29uc3QgY2VsbFN0eWxlcyA9IGNzc2BcbiAgY3Vyc29yOiBwb2ludGVyO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcbmA7XG5cbmNvbnN0IGNlbGxTdHlsZXNPbkdhbWVUeXBlOiB7IFtrZXkgaW4gc3RyaW5nXTogU2VyaWFsaXplZFN0eWxlcyB9ID0ge1xuICB0aWNUYWNUb2U6IGNzc2BcbiAgICB3aWR0aDogMTAwJTtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgJjo6YmVmb3JlIHtcbiAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgY29udGVudDogJyc7XG4gICAgICB3aWR0aDogMTAwJTtcbiAgICAgIHBhZGRpbmctYm90dG9tOiAxMDAlO1xuICAgIH1cbiAgYCxcbn07XG5cbmNvbnN0IGNoZWNrZXJTdHlsZXNPbkdhbWVUeXBlOiB7IFtrZXkgaW4gc3RyaW5nXTogU2VyaWFsaXplZFN0eWxlcyB9ID0ge1xuICBjb25uZWN0TjogY3NzYFxuICAgIHdpZHRoOiBhdXRvO1xuICAgIHBhZGRpbmctYm90dG9tOiBjYWxjKDEwMCUgLSAke3JlbSgyICogNyl9KTtcbiAgICBtYXJnaW46ICR7cmVtKDUpfTtcbiAgICBib3JkZXItcmFkaXVzOiA1MCU7XG4gICAgYm9yZGVyOiAke3JlbSgyKX0gc29saWQgZ3JheTtcblxuICAgIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNDAwcHgpIHtcbiAgICAgIHBhZGRpbmctYm90dG9tOiBjYWxjKDEwMCUgLSAke3JlbSgyICogMyl9KTtcbiAgICAgIG1hcmdpbjogJHtyZW0oMil9O1xuICAgICAgYm9yZGVyOiAke3JlbSgxKX0gc29saWQgZ3JheTtcbiAgICB9XG4gIGAsXG4gIHRpY1RhY1RvZTogY3NzYFxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICBsZWZ0OiAwO1xuICAgIHJpZ2h0OiAwO1xuICAgIHRvcDogMDtcbiAgICBib3R0b206IDA7XG4gICAgZGlzcGxheTogYmxvY2s7XG5cbiAgICAmIHN2ZyB7XG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICBsZWZ0OiA1MCU7XG4gICAgICB0b3A6IDUwJTtcbiAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC01MCUpO1xuICAgICAgd2lkdGg6IDgwJTtcbiAgICAgIGhlaWdodDogODAlO1xuICAgIH1cblxuICAgIC8vICYgdGV4dCB7XG4gICAgLy8gICBkaXNwbGF5OiB0YWJsZS1jZWxsO1xuICAgIC8vICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIC8vICAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcbiAgICAvLyB9XG4gIGAsXG59O1xuXG5leHBvcnQgY29uc3QgcGxheWVyQ2hlY2tlclN0eWxlc09uR2FtZVR5cGU6IHsgW2tleSBpbiBzdHJpbmddOiBTZXJpYWxpemVkU3R5bGVzW10gfSA9IHtcbiAgY29ubmVjdE46IFtcbiAgICBjc3NgXG4gICAgICBib3JkZXItY29sb3I6IGdyYXk7XG4gICAgICBiYWNrZ3JvdW5kOiB5ZWxsb3c7XG4gICAgYCxcbiAgICBjc3NgXG4gICAgICBib3JkZXItY29sb3I6IHdoaXRlO1xuICAgICAgYmFja2dyb3VuZDogcmVkO1xuXG4gICAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDQwMHB4KSB7XG4gICAgICAgIGJvcmRlci1jb2xvcjogd2hpdGU7XG4gICAgICB9XG4gICAgYCxcbiAgICBjc3NgXG4gICAgICBib3JkZXItY29sb3I6IGdyYXk7XG4gICAgICBiYWNrZ3JvdW5kOiBza3libHVlO1xuICAgIGAsXG4gICAgY3NzYFxuICAgICAgYm9yZGVyLWNvbG9yOiBncmF5O1xuICAgICAgYmFja2dyb3VuZDogcGluaztcbiAgICBgLFxuICBdLFxuICB0aWNUYWNUb2U6IFtcbiAgICBjc3NgXG4gICAgICAmOjphZnRlciB7XG4gICAgICAgIGNvbnRlbnQ6ICdPOic7XG4gICAgICB9XG4gICAgYCxcbiAgICBjc3NgXG4gICAgICAmOjphZnRlciB7XG4gICAgICAgIGNvbnRlbnQ6ICdYOic7XG4gICAgICB9XG4gICAgYCxcbiAgXSxcbn07XG5cbmNvbnN0IFRpY1RhY1RvZVBpZWNlOiBGQzx7IHR5cGU/OiAnTycgfCAnWCcgfT4gPSAoeyB0eXBlIH0pID0+IChcbiAgPHN2ZyB2aWV3Qm94PXt0eXBlID09PSAnTycgPyAnMCAwIDExIDEyJyA6ICcwIDAgMTAgMTInfT5cbiAgICA8dGV4dFxuICAgICAgeD17dHlwZSA9PT0gJ08nID8gJzAuNTEnIDogJzAuNSd9XG4gICAgICB5PXt0eXBlID09PSAnTycgPyAnMTAuNScgOiAnMTAuNSd9XG4gICAgICB0ZXh0QW5jaG9yPVwiY2VudGVyXCJcbiAgICAgIGZvbnRXZWlnaHQ9XCIzMDBcIlxuICAgID5cbiAgICAgIHt0eXBlfVxuICAgIDwvdGV4dD5cbiAgPC9zdmc+XG4pO1xuXG5pbnRlcmZhY2UgUHJvcHMge1xuICBnYW1lVHlwZT86IEdhbWVUeXBlO1xuICByb3dOdW06IG51bWJlcjtcbiAgYm9hcmRzOiBudW1iZXJbXVtdO1xuICBvbkNsaWNrT25DZWxsPyhjb2xJbmQ6IG51bWJlciwgcm93SW5kOiBudW1iZXIpOiAoZTogUmVhY3QuTW91c2VFdmVudCkgPT4gdm9pZDtcbn1cblxuY29uc3QgQm9hcmQ6IEZDPFByb3BzPiA9ICh7IGdhbWVUeXBlID0gR2FtZVR5cGUuY29ubmVjdE4sIHJvd051bSwgYm9hcmRzLCBvbkNsaWNrT25DZWxsIH0pID0+IHtcbiAgY29uc3QgY29sTnVtID0gYm9hcmRzWzBdLmxlbmd0aDtcblxuICBjb25zdCBjZWxsR3JpZFBvcyA9IHVzZUNhbGxiYWNrKFxuICAgIChyb3dJbmQ6IG51bWJlciwgY29sSW5kOiBudW1iZXIpID0+IGNzc2BcbiAgICAgIGdyaWQtcm93OiAke3Jvd051bSAtIHJvd0luZH0gLyBzcGFuIDE7XG4gICAgICBncmlkLWNvbHVtbjogJHtjb2xJbmQgKyAxfSAvIHNwYW4gMTtcbiAgICBgLFxuICAgIFtyb3dOdW1dXG4gICk7XG5cbiAgcmV0dXJuIChcbiAgICA8ZGl2IGNzcz17W2JvYXJkU3R5bGVzLCBib2FyZFN0eWxlc09uQ29sTnVtKGNvbE51bSksIGJvYXJkU3R5bGVzT25HYW1lVHlwZVtnYW1lVHlwZV1dfT5cbiAgICAgIHtib2FyZHNbMF0ubWFwKChfYywgY29sSW5kKSA9PlxuICAgICAgICBBcnJheS5mcm9tKEFycmF5KHJvd051bSksIChfciwgcm93SW5kKSA9PiAoXG4gICAgICAgICAgPGJ1dHRvblxuICAgICAgICAgICAgdHlwZT1cImJ1dHRvblwiXG4gICAgICAgICAgICBhcmlhLWxhYmVsPVwiYm9hcmRcIlxuICAgICAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIHJlYWN0L25vLWFycmF5LWluZGV4LWtleVxuICAgICAgICAgICAga2V5PXtgY2VsbC0ke2NvbEluZH0tJHtyb3dJbmR9YH1cbiAgICAgICAgICAgIGNzcz17W2NlbGxTdHlsZXMsIGNlbGxTdHlsZXNPbkdhbWVUeXBlW2dhbWVUeXBlXSwgY2VsbEdyaWRQb3Mocm93SW5kLCBjb2xJbmQpXX1cbiAgICAgICAgICAgIG9uQ2xpY2s9e29uQ2xpY2tPbkNlbGwgJiYgb25DbGlja09uQ2VsbChjb2xJbmQsIHJvd0luZCl9XG4gICAgICAgICAgPlxuICAgICAgICAgICAgPGRpdlxuICAgICAgICAgICAgICBjc3M9e1tcbiAgICAgICAgICAgICAgICBjaGVja2VyU3R5bGVzT25HYW1lVHlwZVtnYW1lVHlwZV0sXG4gICAgICAgICAgICAgICAgZ2FtZVR5cGUgPT09IEdhbWVUeXBlLmNvbm5lY3ROICYmXG4gICAgICAgICAgICAgICAgICBib2FyZHMucmVkdWNlKFxuICAgICAgICAgICAgICAgICAgICAocmVzdWx0LCBfbiwgaW5kKSA9PlxuICAgICAgICAgICAgICAgICAgICAgIChib2FyZHNbaW5kXVtjb2xJbmRdICYgKDEgPDwgcm93SW5kKSAmJlxuICAgICAgICAgICAgICAgICAgICAgICAgcGxheWVyQ2hlY2tlclN0eWxlc09uR2FtZVR5cGVbZ2FtZVR5cGVdW2luZF0pIHx8XG4gICAgICAgICAgICAgICAgICAgICAgcmVzdWx0LFxuICAgICAgICAgICAgICAgICAgICBjc3NgYFxuICAgICAgICAgICAgICAgICAgKSxcbiAgICAgICAgICAgICAgXX1cbiAgICAgICAgICAgID5cbiAgICAgICAgICAgICAge2dhbWVUeXBlID09PSBHYW1lVHlwZS50aWNUYWNUb2UgJiZcbiAgICAgICAgICAgICAgICBib2FyZHMucmVkdWNlKFxuICAgICAgICAgICAgICAgICAgKHJlc3VsdCwgX24sIGluZCkgPT5cbiAgICAgICAgICAgICAgICAgICAgKGJvYXJkc1tpbmRdW2NvbEluZF0gJiAoMSA8PCByb3dJbmQpICYmXG4gICAgICAgICAgICAgICAgICAgICAgWzxUaWNUYWNUb2VQaWVjZSB0eXBlPVwiT1wiIC8+LCA8VGljVGFjVG9lUGllY2UgdHlwZT1cIlhcIiAvPl1baW5kXSkgfHxcbiAgICAgICAgICAgICAgICAgICAgcmVzdWx0LFxuICAgICAgICAgICAgICAgICAgPFRpY1RhY1RvZVBpZWNlIC8+XG4gICAgICAgICAgICAgICAgKX1cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgIDwvYnV0dG9uPlxuICAgICAgICApKVxuICAgICAgKX1cbiAgICA8L2Rpdj5cbiAgKTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IEJvYXJkO1xuIl19 */")),
    __source: {
      fileName: _jsxFileName,
      lineNumber: 160
    },
    __self: this
  }, boards[0].map(function (_c, colInd) {
    return _babel_runtime_corejs2_core_js_array_from__WEBPACK_IMPORTED_MODULE_0___default()(Array(rowNum), function (_r, rowInd) {
      return Object(_emotion_core__WEBPACK_IMPORTED_MODULE_2__["jsx"])("button", {
        type: "button",
        "aria-label": "board" // eslint-disable-next-line react/no-array-index-key
        ,
        key: "cell-".concat(colInd, "-").concat(rowInd),
        css:
        /*#__PURE__*/
        Object(_emotion_css__WEBPACK_IMPORTED_MODULE_1__["default"])([cellStyles, cellStylesOnGameType[gameType], cellGridPos(rowInd, colInd)], "label:Board;" + ( false ? undefined : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9kYXZpZC5jaGVuL0RvY3VtZW50cy9wcm9qZWN0cy9uZXh0OS9zcmMvY29tcG9uZW50cy9Db25uZWN0Ti9Cb2FyZC50c3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBdUtZIiwiZmlsZSI6Ii9Vc2Vycy9kYXZpZC5jaGVuL0RvY3VtZW50cy9wcm9qZWN0cy9uZXh0OS9zcmMvY29tcG9uZW50cy9Db25uZWN0Ti9Cb2FyZC50c3giLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QsIHsgRkMsIHVzZUNhbGxiYWNrIH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgY3NzLCBTZXJpYWxpemVkU3R5bGVzIH0gZnJvbSAnQGVtb3Rpb24vY29yZSc7XG5pbXBvcnQgcmVtIGZyb20gJy4uLy4uL3V0aWxzL3N0eWxlL3JlbSc7XG5pbXBvcnQgeyBHYW1lVHlwZSB9IGZyb20gJy4uLy4uL3V0aWxzL2Nvbm5lY3ROL2Nvbm5lY3ROJztcblxuY29uc3QgYm9hcmRTdHlsZXMgPSBjc3NgXG4gIG1hcmdpbjogJHtyZW0oMjApfSBhdXRvO1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICBkaXNwbGF5OiBncmlkO1xuICBncmlkLWF1dG8tcm93czogYXV0bztcblxuICAtd2Via2l0LXRhcC1oaWdobGlnaHQtY29sb3I6IHJnYmEoMCwgMCwgMCwgMCk7XG4gIC13ZWJraXQtdGFwLWhpZ2hsaWdodC1jb2xvcjogdHJhbnNwYXJlbnQ7XG5gO1xuXG5jb25zdCBib2FyZFN0eWxlc09uQ29sTnVtID0gKGNvbE51bTogbnVtYmVyKSA9PiBjc3NgXG4gIG1heC13aWR0aDogJHtyZW0oODAgKiBjb2xOdW0pfTtcbiAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiByZXBlYXQoJHtjb2xOdW19LCAxZnIpO1xuYDtcblxuY29uc3QgYm9hcmRTdHlsZXNPbkdhbWVUeXBlOiB7IFtrZXkgaW4gc3RyaW5nXTogU2VyaWFsaXplZFN0eWxlcyB9ID0ge1xuICBjb25uZWN0TjogY3NzYFxuICAgIGdyaWQtZ2FwOiAke3JlbSgxKX07XG4gICAgYmFja2dyb3VuZC1jb2xvcjogbGlnaHRncmF5O1xuICAgIGJvcmRlcjogJHtyZW0oMil9IHNvbGlkIGJsYWNrO1xuICBgLFxuICB0aWNUYWNUb2U6IGNzc2BcbiAgICBncmlkLWdhcDogJHtyZW0oMyl9O1xuICAgIGJhY2tncm91bmQtY29sb3I6IGJsYWNrO1xuICAgIGJvcmRlcjogJHtyZW0oMyl9IHNvbGlkIHdoaXRlO1xuICBgLFxufTtcblxuY29uc3QgY2VsbFN0eWxlcyA9IGNzc2BcbiAgY3Vyc29yOiBwb2ludGVyO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcbmA7XG5cbmNvbnN0IGNlbGxTdHlsZXNPbkdhbWVUeXBlOiB7IFtrZXkgaW4gc3RyaW5nXTogU2VyaWFsaXplZFN0eWxlcyB9ID0ge1xuICB0aWNUYWNUb2U6IGNzc2BcbiAgICB3aWR0aDogMTAwJTtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgJjo6YmVmb3JlIHtcbiAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgY29udGVudDogJyc7XG4gICAgICB3aWR0aDogMTAwJTtcbiAgICAgIHBhZGRpbmctYm90dG9tOiAxMDAlO1xuICAgIH1cbiAgYCxcbn07XG5cbmNvbnN0IGNoZWNrZXJTdHlsZXNPbkdhbWVUeXBlOiB7IFtrZXkgaW4gc3RyaW5nXTogU2VyaWFsaXplZFN0eWxlcyB9ID0ge1xuICBjb25uZWN0TjogY3NzYFxuICAgIHdpZHRoOiBhdXRvO1xuICAgIHBhZGRpbmctYm90dG9tOiBjYWxjKDEwMCUgLSAke3JlbSgyICogNyl9KTtcbiAgICBtYXJnaW46ICR7cmVtKDUpfTtcbiAgICBib3JkZXItcmFkaXVzOiA1MCU7XG4gICAgYm9yZGVyOiAke3JlbSgyKX0gc29saWQgZ3JheTtcblxuICAgIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNDAwcHgpIHtcbiAgICAgIHBhZGRpbmctYm90dG9tOiBjYWxjKDEwMCUgLSAke3JlbSgyICogMyl9KTtcbiAgICAgIG1hcmdpbjogJHtyZW0oMil9O1xuICAgICAgYm9yZGVyOiAke3JlbSgxKX0gc29saWQgZ3JheTtcbiAgICB9XG4gIGAsXG4gIHRpY1RhY1RvZTogY3NzYFxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICBsZWZ0OiAwO1xuICAgIHJpZ2h0OiAwO1xuICAgIHRvcDogMDtcbiAgICBib3R0b206IDA7XG4gICAgZGlzcGxheTogYmxvY2s7XG5cbiAgICAmIHN2ZyB7XG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICBsZWZ0OiA1MCU7XG4gICAgICB0b3A6IDUwJTtcbiAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC01MCUpO1xuICAgICAgd2lkdGg6IDgwJTtcbiAgICAgIGhlaWdodDogODAlO1xuICAgIH1cblxuICAgIC8vICYgdGV4dCB7XG4gICAgLy8gICBkaXNwbGF5OiB0YWJsZS1jZWxsO1xuICAgIC8vICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIC8vICAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcbiAgICAvLyB9XG4gIGAsXG59O1xuXG5leHBvcnQgY29uc3QgcGxheWVyQ2hlY2tlclN0eWxlc09uR2FtZVR5cGU6IHsgW2tleSBpbiBzdHJpbmddOiBTZXJpYWxpemVkU3R5bGVzW10gfSA9IHtcbiAgY29ubmVjdE46IFtcbiAgICBjc3NgXG4gICAgICBib3JkZXItY29sb3I6IGdyYXk7XG4gICAgICBiYWNrZ3JvdW5kOiB5ZWxsb3c7XG4gICAgYCxcbiAgICBjc3NgXG4gICAgICBib3JkZXItY29sb3I6IHdoaXRlO1xuICAgICAgYmFja2dyb3VuZDogcmVkO1xuXG4gICAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDQwMHB4KSB7XG4gICAgICAgIGJvcmRlci1jb2xvcjogd2hpdGU7XG4gICAgICB9XG4gICAgYCxcbiAgICBjc3NgXG4gICAgICBib3JkZXItY29sb3I6IGdyYXk7XG4gICAgICBiYWNrZ3JvdW5kOiBza3libHVlO1xuICAgIGAsXG4gICAgY3NzYFxuICAgICAgYm9yZGVyLWNvbG9yOiBncmF5O1xuICAgICAgYmFja2dyb3VuZDogcGluaztcbiAgICBgLFxuICBdLFxuICB0aWNUYWNUb2U6IFtcbiAgICBjc3NgXG4gICAgICAmOjphZnRlciB7XG4gICAgICAgIGNvbnRlbnQ6ICdPOic7XG4gICAgICB9XG4gICAgYCxcbiAgICBjc3NgXG4gICAgICAmOjphZnRlciB7XG4gICAgICAgIGNvbnRlbnQ6ICdYOic7XG4gICAgICB9XG4gICAgYCxcbiAgXSxcbn07XG5cbmNvbnN0IFRpY1RhY1RvZVBpZWNlOiBGQzx7IHR5cGU/OiAnTycgfCAnWCcgfT4gPSAoeyB0eXBlIH0pID0+IChcbiAgPHN2ZyB2aWV3Qm94PXt0eXBlID09PSAnTycgPyAnMCAwIDExIDEyJyA6ICcwIDAgMTAgMTInfT5cbiAgICA8dGV4dFxuICAgICAgeD17dHlwZSA9PT0gJ08nID8gJzAuNTEnIDogJzAuNSd9XG4gICAgICB5PXt0eXBlID09PSAnTycgPyAnMTAuNScgOiAnMTAuNSd9XG4gICAgICB0ZXh0QW5jaG9yPVwiY2VudGVyXCJcbiAgICAgIGZvbnRXZWlnaHQ9XCIzMDBcIlxuICAgID5cbiAgICAgIHt0eXBlfVxuICAgIDwvdGV4dD5cbiAgPC9zdmc+XG4pO1xuXG5pbnRlcmZhY2UgUHJvcHMge1xuICBnYW1lVHlwZT86IEdhbWVUeXBlO1xuICByb3dOdW06IG51bWJlcjtcbiAgYm9hcmRzOiBudW1iZXJbXVtdO1xuICBvbkNsaWNrT25DZWxsPyhjb2xJbmQ6IG51bWJlciwgcm93SW5kOiBudW1iZXIpOiAoZTogUmVhY3QuTW91c2VFdmVudCkgPT4gdm9pZDtcbn1cblxuY29uc3QgQm9hcmQ6IEZDPFByb3BzPiA9ICh7IGdhbWVUeXBlID0gR2FtZVR5cGUuY29ubmVjdE4sIHJvd051bSwgYm9hcmRzLCBvbkNsaWNrT25DZWxsIH0pID0+IHtcbiAgY29uc3QgY29sTnVtID0gYm9hcmRzWzBdLmxlbmd0aDtcblxuICBjb25zdCBjZWxsR3JpZFBvcyA9IHVzZUNhbGxiYWNrKFxuICAgIChyb3dJbmQ6IG51bWJlciwgY29sSW5kOiBudW1iZXIpID0+IGNzc2BcbiAgICAgIGdyaWQtcm93OiAke3Jvd051bSAtIHJvd0luZH0gLyBzcGFuIDE7XG4gICAgICBncmlkLWNvbHVtbjogJHtjb2xJbmQgKyAxfSAvIHNwYW4gMTtcbiAgICBgLFxuICAgIFtyb3dOdW1dXG4gICk7XG5cbiAgcmV0dXJuIChcbiAgICA8ZGl2IGNzcz17W2JvYXJkU3R5bGVzLCBib2FyZFN0eWxlc09uQ29sTnVtKGNvbE51bSksIGJvYXJkU3R5bGVzT25HYW1lVHlwZVtnYW1lVHlwZV1dfT5cbiAgICAgIHtib2FyZHNbMF0ubWFwKChfYywgY29sSW5kKSA9PlxuICAgICAgICBBcnJheS5mcm9tKEFycmF5KHJvd051bSksIChfciwgcm93SW5kKSA9PiAoXG4gICAgICAgICAgPGJ1dHRvblxuICAgICAgICAgICAgdHlwZT1cImJ1dHRvblwiXG4gICAgICAgICAgICBhcmlhLWxhYmVsPVwiYm9hcmRcIlxuICAgICAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIHJlYWN0L25vLWFycmF5LWluZGV4LWtleVxuICAgICAgICAgICAga2V5PXtgY2VsbC0ke2NvbEluZH0tJHtyb3dJbmR9YH1cbiAgICAgICAgICAgIGNzcz17W2NlbGxTdHlsZXMsIGNlbGxTdHlsZXNPbkdhbWVUeXBlW2dhbWVUeXBlXSwgY2VsbEdyaWRQb3Mocm93SW5kLCBjb2xJbmQpXX1cbiAgICAgICAgICAgIG9uQ2xpY2s9e29uQ2xpY2tPbkNlbGwgJiYgb25DbGlja09uQ2VsbChjb2xJbmQsIHJvd0luZCl9XG4gICAgICAgICAgPlxuICAgICAgICAgICAgPGRpdlxuICAgICAgICAgICAgICBjc3M9e1tcbiAgICAgICAgICAgICAgICBjaGVja2VyU3R5bGVzT25HYW1lVHlwZVtnYW1lVHlwZV0sXG4gICAgICAgICAgICAgICAgZ2FtZVR5cGUgPT09IEdhbWVUeXBlLmNvbm5lY3ROICYmXG4gICAgICAgICAgICAgICAgICBib2FyZHMucmVkdWNlKFxuICAgICAgICAgICAgICAgICAgICAocmVzdWx0LCBfbiwgaW5kKSA9PlxuICAgICAgICAgICAgICAgICAgICAgIChib2FyZHNbaW5kXVtjb2xJbmRdICYgKDEgPDwgcm93SW5kKSAmJlxuICAgICAgICAgICAgICAgICAgICAgICAgcGxheWVyQ2hlY2tlclN0eWxlc09uR2FtZVR5cGVbZ2FtZVR5cGVdW2luZF0pIHx8XG4gICAgICAgICAgICAgICAgICAgICAgcmVzdWx0LFxuICAgICAgICAgICAgICAgICAgICBjc3NgYFxuICAgICAgICAgICAgICAgICAgKSxcbiAgICAgICAgICAgICAgXX1cbiAgICAgICAgICAgID5cbiAgICAgICAgICAgICAge2dhbWVUeXBlID09PSBHYW1lVHlwZS50aWNUYWNUb2UgJiZcbiAgICAgICAgICAgICAgICBib2FyZHMucmVkdWNlKFxuICAgICAgICAgICAgICAgICAgKHJlc3VsdCwgX24sIGluZCkgPT5cbiAgICAgICAgICAgICAgICAgICAgKGJvYXJkc1tpbmRdW2NvbEluZF0gJiAoMSA8PCByb3dJbmQpICYmXG4gICAgICAgICAgICAgICAgICAgICAgWzxUaWNUYWNUb2VQaWVjZSB0eXBlPVwiT1wiIC8+LCA8VGljVGFjVG9lUGllY2UgdHlwZT1cIlhcIiAvPl1baW5kXSkgfHxcbiAgICAgICAgICAgICAgICAgICAgcmVzdWx0LFxuICAgICAgICAgICAgICAgICAgPFRpY1RhY1RvZVBpZWNlIC8+XG4gICAgICAgICAgICAgICAgKX1cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgIDwvYnV0dG9uPlxuICAgICAgICApKVxuICAgICAgKX1cbiAgICA8L2Rpdj5cbiAgKTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IEJvYXJkO1xuIl19 */")),
        onClick: onClickOnCell && onClickOnCell(colInd, rowInd),
        __source: {
          fileName: _jsxFileName,
          lineNumber: 163
        },
        __self: this
      }, Object(_emotion_core__WEBPACK_IMPORTED_MODULE_2__["jsx"])("div", {
        css:
        /*#__PURE__*/
        Object(_emotion_css__WEBPACK_IMPORTED_MODULE_1__["default"])([checkerStylesOnGameType[gameType], gameType === _utils_connectN_connectN__WEBPACK_IMPORTED_MODULE_5__["GameType"].connectN && boards.reduce(function (result, _n, ind) {
          return boards[ind][colInd] & 1 << rowInd && playerCheckerStylesOnGameType[gameType][ind] || result;
        }, _ref)], "label:Board;" + ( false ? undefined : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9kYXZpZC5jaGVuL0RvY3VtZW50cy9wcm9qZWN0cy9uZXh0OS9zcmMvY29tcG9uZW50cy9Db25uZWN0Ti9Cb2FyZC50c3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBMktjIiwiZmlsZSI6Ii9Vc2Vycy9kYXZpZC5jaGVuL0RvY3VtZW50cy9wcm9qZWN0cy9uZXh0OS9zcmMvY29tcG9uZW50cy9Db25uZWN0Ti9Cb2FyZC50c3giLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QsIHsgRkMsIHVzZUNhbGxiYWNrIH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgY3NzLCBTZXJpYWxpemVkU3R5bGVzIH0gZnJvbSAnQGVtb3Rpb24vY29yZSc7XG5pbXBvcnQgcmVtIGZyb20gJy4uLy4uL3V0aWxzL3N0eWxlL3JlbSc7XG5pbXBvcnQgeyBHYW1lVHlwZSB9IGZyb20gJy4uLy4uL3V0aWxzL2Nvbm5lY3ROL2Nvbm5lY3ROJztcblxuY29uc3QgYm9hcmRTdHlsZXMgPSBjc3NgXG4gIG1hcmdpbjogJHtyZW0oMjApfSBhdXRvO1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICBkaXNwbGF5OiBncmlkO1xuICBncmlkLWF1dG8tcm93czogYXV0bztcblxuICAtd2Via2l0LXRhcC1oaWdobGlnaHQtY29sb3I6IHJnYmEoMCwgMCwgMCwgMCk7XG4gIC13ZWJraXQtdGFwLWhpZ2hsaWdodC1jb2xvcjogdHJhbnNwYXJlbnQ7XG5gO1xuXG5jb25zdCBib2FyZFN0eWxlc09uQ29sTnVtID0gKGNvbE51bTogbnVtYmVyKSA9PiBjc3NgXG4gIG1heC13aWR0aDogJHtyZW0oODAgKiBjb2xOdW0pfTtcbiAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiByZXBlYXQoJHtjb2xOdW19LCAxZnIpO1xuYDtcblxuY29uc3QgYm9hcmRTdHlsZXNPbkdhbWVUeXBlOiB7IFtrZXkgaW4gc3RyaW5nXTogU2VyaWFsaXplZFN0eWxlcyB9ID0ge1xuICBjb25uZWN0TjogY3NzYFxuICAgIGdyaWQtZ2FwOiAke3JlbSgxKX07XG4gICAgYmFja2dyb3VuZC1jb2xvcjogbGlnaHRncmF5O1xuICAgIGJvcmRlcjogJHtyZW0oMil9IHNvbGlkIGJsYWNrO1xuICBgLFxuICB0aWNUYWNUb2U6IGNzc2BcbiAgICBncmlkLWdhcDogJHtyZW0oMyl9O1xuICAgIGJhY2tncm91bmQtY29sb3I6IGJsYWNrO1xuICAgIGJvcmRlcjogJHtyZW0oMyl9IHNvbGlkIHdoaXRlO1xuICBgLFxufTtcblxuY29uc3QgY2VsbFN0eWxlcyA9IGNzc2BcbiAgY3Vyc29yOiBwb2ludGVyO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcbmA7XG5cbmNvbnN0IGNlbGxTdHlsZXNPbkdhbWVUeXBlOiB7IFtrZXkgaW4gc3RyaW5nXTogU2VyaWFsaXplZFN0eWxlcyB9ID0ge1xuICB0aWNUYWNUb2U6IGNzc2BcbiAgICB3aWR0aDogMTAwJTtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgJjo6YmVmb3JlIHtcbiAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgY29udGVudDogJyc7XG4gICAgICB3aWR0aDogMTAwJTtcbiAgICAgIHBhZGRpbmctYm90dG9tOiAxMDAlO1xuICAgIH1cbiAgYCxcbn07XG5cbmNvbnN0IGNoZWNrZXJTdHlsZXNPbkdhbWVUeXBlOiB7IFtrZXkgaW4gc3RyaW5nXTogU2VyaWFsaXplZFN0eWxlcyB9ID0ge1xuICBjb25uZWN0TjogY3NzYFxuICAgIHdpZHRoOiBhdXRvO1xuICAgIHBhZGRpbmctYm90dG9tOiBjYWxjKDEwMCUgLSAke3JlbSgyICogNyl9KTtcbiAgICBtYXJnaW46ICR7cmVtKDUpfTtcbiAgICBib3JkZXItcmFkaXVzOiA1MCU7XG4gICAgYm9yZGVyOiAke3JlbSgyKX0gc29saWQgZ3JheTtcblxuICAgIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNDAwcHgpIHtcbiAgICAgIHBhZGRpbmctYm90dG9tOiBjYWxjKDEwMCUgLSAke3JlbSgyICogMyl9KTtcbiAgICAgIG1hcmdpbjogJHtyZW0oMil9O1xuICAgICAgYm9yZGVyOiAke3JlbSgxKX0gc29saWQgZ3JheTtcbiAgICB9XG4gIGAsXG4gIHRpY1RhY1RvZTogY3NzYFxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICBsZWZ0OiAwO1xuICAgIHJpZ2h0OiAwO1xuICAgIHRvcDogMDtcbiAgICBib3R0b206IDA7XG4gICAgZGlzcGxheTogYmxvY2s7XG5cbiAgICAmIHN2ZyB7XG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICBsZWZ0OiA1MCU7XG4gICAgICB0b3A6IDUwJTtcbiAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC01MCUpO1xuICAgICAgd2lkdGg6IDgwJTtcbiAgICAgIGhlaWdodDogODAlO1xuICAgIH1cblxuICAgIC8vICYgdGV4dCB7XG4gICAgLy8gICBkaXNwbGF5OiB0YWJsZS1jZWxsO1xuICAgIC8vICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIC8vICAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcbiAgICAvLyB9XG4gIGAsXG59O1xuXG5leHBvcnQgY29uc3QgcGxheWVyQ2hlY2tlclN0eWxlc09uR2FtZVR5cGU6IHsgW2tleSBpbiBzdHJpbmddOiBTZXJpYWxpemVkU3R5bGVzW10gfSA9IHtcbiAgY29ubmVjdE46IFtcbiAgICBjc3NgXG4gICAgICBib3JkZXItY29sb3I6IGdyYXk7XG4gICAgICBiYWNrZ3JvdW5kOiB5ZWxsb3c7XG4gICAgYCxcbiAgICBjc3NgXG4gICAgICBib3JkZXItY29sb3I6IHdoaXRlO1xuICAgICAgYmFja2dyb3VuZDogcmVkO1xuXG4gICAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDQwMHB4KSB7XG4gICAgICAgIGJvcmRlci1jb2xvcjogd2hpdGU7XG4gICAgICB9XG4gICAgYCxcbiAgICBjc3NgXG4gICAgICBib3JkZXItY29sb3I6IGdyYXk7XG4gICAgICBiYWNrZ3JvdW5kOiBza3libHVlO1xuICAgIGAsXG4gICAgY3NzYFxuICAgICAgYm9yZGVyLWNvbG9yOiBncmF5O1xuICAgICAgYmFja2dyb3VuZDogcGluaztcbiAgICBgLFxuICBdLFxuICB0aWNUYWNUb2U6IFtcbiAgICBjc3NgXG4gICAgICAmOjphZnRlciB7XG4gICAgICAgIGNvbnRlbnQ6ICdPOic7XG4gICAgICB9XG4gICAgYCxcbiAgICBjc3NgXG4gICAgICAmOjphZnRlciB7XG4gICAgICAgIGNvbnRlbnQ6ICdYOic7XG4gICAgICB9XG4gICAgYCxcbiAgXSxcbn07XG5cbmNvbnN0IFRpY1RhY1RvZVBpZWNlOiBGQzx7IHR5cGU/OiAnTycgfCAnWCcgfT4gPSAoeyB0eXBlIH0pID0+IChcbiAgPHN2ZyB2aWV3Qm94PXt0eXBlID09PSAnTycgPyAnMCAwIDExIDEyJyA6ICcwIDAgMTAgMTInfT5cbiAgICA8dGV4dFxuICAgICAgeD17dHlwZSA9PT0gJ08nID8gJzAuNTEnIDogJzAuNSd9XG4gICAgICB5PXt0eXBlID09PSAnTycgPyAnMTAuNScgOiAnMTAuNSd9XG4gICAgICB0ZXh0QW5jaG9yPVwiY2VudGVyXCJcbiAgICAgIGZvbnRXZWlnaHQ9XCIzMDBcIlxuICAgID5cbiAgICAgIHt0eXBlfVxuICAgIDwvdGV4dD5cbiAgPC9zdmc+XG4pO1xuXG5pbnRlcmZhY2UgUHJvcHMge1xuICBnYW1lVHlwZT86IEdhbWVUeXBlO1xuICByb3dOdW06IG51bWJlcjtcbiAgYm9hcmRzOiBudW1iZXJbXVtdO1xuICBvbkNsaWNrT25DZWxsPyhjb2xJbmQ6IG51bWJlciwgcm93SW5kOiBudW1iZXIpOiAoZTogUmVhY3QuTW91c2VFdmVudCkgPT4gdm9pZDtcbn1cblxuY29uc3QgQm9hcmQ6IEZDPFByb3BzPiA9ICh7IGdhbWVUeXBlID0gR2FtZVR5cGUuY29ubmVjdE4sIHJvd051bSwgYm9hcmRzLCBvbkNsaWNrT25DZWxsIH0pID0+IHtcbiAgY29uc3QgY29sTnVtID0gYm9hcmRzWzBdLmxlbmd0aDtcblxuICBjb25zdCBjZWxsR3JpZFBvcyA9IHVzZUNhbGxiYWNrKFxuICAgIChyb3dJbmQ6IG51bWJlciwgY29sSW5kOiBudW1iZXIpID0+IGNzc2BcbiAgICAgIGdyaWQtcm93OiAke3Jvd051bSAtIHJvd0luZH0gLyBzcGFuIDE7XG4gICAgICBncmlkLWNvbHVtbjogJHtjb2xJbmQgKyAxfSAvIHNwYW4gMTtcbiAgICBgLFxuICAgIFtyb3dOdW1dXG4gICk7XG5cbiAgcmV0dXJuIChcbiAgICA8ZGl2IGNzcz17W2JvYXJkU3R5bGVzLCBib2FyZFN0eWxlc09uQ29sTnVtKGNvbE51bSksIGJvYXJkU3R5bGVzT25HYW1lVHlwZVtnYW1lVHlwZV1dfT5cbiAgICAgIHtib2FyZHNbMF0ubWFwKChfYywgY29sSW5kKSA9PlxuICAgICAgICBBcnJheS5mcm9tKEFycmF5KHJvd051bSksIChfciwgcm93SW5kKSA9PiAoXG4gICAgICAgICAgPGJ1dHRvblxuICAgICAgICAgICAgdHlwZT1cImJ1dHRvblwiXG4gICAgICAgICAgICBhcmlhLWxhYmVsPVwiYm9hcmRcIlxuICAgICAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIHJlYWN0L25vLWFycmF5LWluZGV4LWtleVxuICAgICAgICAgICAga2V5PXtgY2VsbC0ke2NvbEluZH0tJHtyb3dJbmR9YH1cbiAgICAgICAgICAgIGNzcz17W2NlbGxTdHlsZXMsIGNlbGxTdHlsZXNPbkdhbWVUeXBlW2dhbWVUeXBlXSwgY2VsbEdyaWRQb3Mocm93SW5kLCBjb2xJbmQpXX1cbiAgICAgICAgICAgIG9uQ2xpY2s9e29uQ2xpY2tPbkNlbGwgJiYgb25DbGlja09uQ2VsbChjb2xJbmQsIHJvd0luZCl9XG4gICAgICAgICAgPlxuICAgICAgICAgICAgPGRpdlxuICAgICAgICAgICAgICBjc3M9e1tcbiAgICAgICAgICAgICAgICBjaGVja2VyU3R5bGVzT25HYW1lVHlwZVtnYW1lVHlwZV0sXG4gICAgICAgICAgICAgICAgZ2FtZVR5cGUgPT09IEdhbWVUeXBlLmNvbm5lY3ROICYmXG4gICAgICAgICAgICAgICAgICBib2FyZHMucmVkdWNlKFxuICAgICAgICAgICAgICAgICAgICAocmVzdWx0LCBfbiwgaW5kKSA9PlxuICAgICAgICAgICAgICAgICAgICAgIChib2FyZHNbaW5kXVtjb2xJbmRdICYgKDEgPDwgcm93SW5kKSAmJlxuICAgICAgICAgICAgICAgICAgICAgICAgcGxheWVyQ2hlY2tlclN0eWxlc09uR2FtZVR5cGVbZ2FtZVR5cGVdW2luZF0pIHx8XG4gICAgICAgICAgICAgICAgICAgICAgcmVzdWx0LFxuICAgICAgICAgICAgICAgICAgICBjc3NgYFxuICAgICAgICAgICAgICAgICAgKSxcbiAgICAgICAgICAgICAgXX1cbiAgICAgICAgICAgID5cbiAgICAgICAgICAgICAge2dhbWVUeXBlID09PSBHYW1lVHlwZS50aWNUYWNUb2UgJiZcbiAgICAgICAgICAgICAgICBib2FyZHMucmVkdWNlKFxuICAgICAgICAgICAgICAgICAgKHJlc3VsdCwgX24sIGluZCkgPT5cbiAgICAgICAgICAgICAgICAgICAgKGJvYXJkc1tpbmRdW2NvbEluZF0gJiAoMSA8PCByb3dJbmQpICYmXG4gICAgICAgICAgICAgICAgICAgICAgWzxUaWNUYWNUb2VQaWVjZSB0eXBlPVwiT1wiIC8+LCA8VGljVGFjVG9lUGllY2UgdHlwZT1cIlhcIiAvPl1baW5kXSkgfHxcbiAgICAgICAgICAgICAgICAgICAgcmVzdWx0LFxuICAgICAgICAgICAgICAgICAgPFRpY1RhY1RvZVBpZWNlIC8+XG4gICAgICAgICAgICAgICAgKX1cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgIDwvYnV0dG9uPlxuICAgICAgICApKVxuICAgICAgKX1cbiAgICA8L2Rpdj5cbiAgKTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IEJvYXJkO1xuIl19 */")),
        __source: {
          fileName: _jsxFileName,
          lineNumber: 171
        },
        __self: this
      }, gameType === _utils_connectN_connectN__WEBPACK_IMPORTED_MODULE_5__["GameType"].ticTacToe && boards.reduce(function (result, _n, ind) {
        return boards[ind][colInd] & 1 << rowInd && [Object(_emotion_core__WEBPACK_IMPORTED_MODULE_2__["jsx"])(TicTacToePiece, {
          type: "O",
          __source: {
            fileName: _jsxFileName,
            lineNumber: 188
          },
          __self: this
        }), Object(_emotion_core__WEBPACK_IMPORTED_MODULE_2__["jsx"])(TicTacToePiece, {
          type: "X",
          __source: {
            fileName: _jsxFileName,
            lineNumber: 188
          },
          __self: this
        })][ind] || result;
      }, Object(_emotion_core__WEBPACK_IMPORTED_MODULE_2__["jsx"])(TicTacToePiece, {
        __source: {
          fileName: _jsxFileName,
          lineNumber: 190
        },
        __self: this
      }))));
    });
  }));
};

/* harmony default export */ __webpack_exports__["default"] = (Board);

/***/ })

})
//# sourceMappingURL=tic-tac-toe.js.1b2d5452ab0c243b1cb7.hot-update.js.map