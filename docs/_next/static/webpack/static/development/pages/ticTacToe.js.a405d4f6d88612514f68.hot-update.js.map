{"version":3,"file":"static/webpack/static/development/pages/ticTacToe.js.a405d4f6d88612514f68.hot-update.js","sources":["webpack:///./src/redux/reducers/game.ts"],"sourcesContent":["import { Reducer } from 'redux';\nimport { ActionWithPayload } from '../../utils/redux/types';\nimport { UPDATE_GAME_RECORD, RESTART_GAME, PLACE_ONE_PIECE } from '../actions/actionTypes';\nimport objectAssign from '../../utils/common/objectAssign';\nimport {\n  // GameType,\n  GameRecord,\n  placeOnePiece,\n  resetGame,\n  PlaceOnePieceProps,\n  ResetGameProps,\n} from '../../utils/connectN/connectN';\n\nexport const initialState: Readonly<GameRecord> = {\n  boards: [[], []],\n  win: -1,\n  filledBoard: [],\n  filledColumn: 0,\n  gameOver: true,\n  turn: 0,\n};\n\nconst reducer: Reducer<Readonly<GameRecord>, ActionWithPayload> = (\n  state = initialState,\n  action\n) => {\n  switch (action.type) {\n    case UPDATE_GAME_RECORD: {\n      return objectAssign()({}, state, action.payload as Readonly<Partial<GameRecord>>);\n    }\n    case PLACE_ONE_PIECE: {\n      return {\n        ...state,\n        ...placeOnePiece(action.payload as Readonly<PlaceOnePieceProps>),\n      };\n    }\n    case RESTART_GAME: {\n      return {\n        ...state,\n        ...resetGame(action.payload as Readonly<ResetGameProps>),\n      };\n    }\n    default: {\n      return state;\n    }\n  }\n};\n\nexport default reducer;\n"],"mappings":";;;;;;;;;;;;;;;;;AAEA;AACA;AAIA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AACA;AAQA;AAGA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAIA;AACA;AAAA;AAAA;AACA;AAIA;AACA;AAAA;AAAA;AACA;AACA;AAlBA;AAoBA;AACA;AACA;;;;A","sourceRoot":""}