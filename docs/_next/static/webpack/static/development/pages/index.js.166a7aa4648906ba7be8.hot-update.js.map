{"version":3,"file":"static/webpack/static/development/pages/index.js.166a7aa4648906ba7be8.hot-update.js","sources":["webpack:///./src/models/setup.ts"],"sourcesContent":["import produce from 'immer';\nimport createReducer from '../utils/createReducer';\nimport { ReducerObj } from '../utils/types';\nimport { setInitialState } from '../utils/setState';\n\n/* eslint no-param-reassign: [\"error\", { \"props\": true, \"ignorePropertyModificationsFor\": [\"draftState\"] }] */\n\nconst maxRow = 20;\nconst maxCol = 20;\nconst minRow = 3;\nconst minCol = 3;\n\nexport const inititalState = {\n  rowNum: 6,\n  colNum: 7,\n  winRule: 4,\n  names: ['O', 'X'],\n  next: [1, 0],\n  fullBoard: 2 ** 7 - 1,\n  checkAgainst: 2 ** 4 - 1,\n  boardSetup: Array(7).fill(0),\n};\n\ntype State = Readonly<typeof inititalState>;\n\nconst reducerObj: ReducerObj<State> = {\n  resetSetup: setInitialState,\n  changePlayers: (state, names: string[]) => {\n    if (names.length > 4) return state;\n    return produce(state, draftState => {\n      draftState.names = names;\n      draftState.next = names.map((_, ind) => (ind + 1 === names.length ? 0 : ind + 1));\n    });\n  },\n\n  changeRules: (\n    state,\n    { rowNum, colNum, winRule }: { rowNum: number; colNum: number; winRule: number }\n  ) => {\n    if (winRule > rowNum || winRule > colNum || winRule < 3) return state;\n    if (colNum > maxCol || colNum < minCol || rowNum > maxRow || rowNum < minRow) return state;\n    return produce(state, draftState => {\n      draftState.rowNum = rowNum;\n      draftState.colNum = colNum;\n      draftState.winRule = winRule;\n      draftState.fullBoard = 2 ** colNum - 1;\n      draftState.checkAgainst = 2 ** winRule - 1;\n      draftState.boardSetup = Array(colNum).fill(0);\n    });\n  },\n};\n\nexport const reducer = createReducer(reducerObj);\n"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AAGA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAxBA;AA2BA;;;;A","sourceRoot":""}